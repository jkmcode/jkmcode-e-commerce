{"version":3,"sources":["components/SearchBox.js","images/globeIcon.js","components/LanguageSwitcher.js","constants/UserConstants.js","constants/orderConstants.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","components/BookingCalendar.js","constants/productsConstants.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","components/BtnSlider.js","actions/imagesActions.js","components/ImageSlider.js","screens/ProductScreen.js","constants/cartConstans.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","constants/EnvConstans.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductsEditScreen.js","screens/OrderListScreen.js","screens/UserOrders.js","screens/AdminScreen.js","screens/ResetPassword.js","screens/NewPassword.js","screens/ActivateScreen.js","screens/LoginDjoserScreen.js","screens/ResetPasswordScreen.js","screens/ResetPasswordConfirmScreen.js","screens/SignupScreen.js","components/ScrollToTop.js","App.js","reportWebVitals.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","index.js"],"names":["SearchBox","useState","keyword","setKeyword","t","useTranslation","historyy","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","className","Control","type","name","placeholder","onChange","target","value","Button","variant","globeIcon","GlobeIcon","width","height","xmlns","fill","viewBox","d","LanguageSwitcher_supp","props","Flag","Flags","country_flag","LanguageSwitcher","language","code","country","cookies","get","currentLanguageCode","setCurrentLanguageCode","currentLanguage","find","l","Nav","NavDropdown","title","map","Item","onClick","countryCode","i18next","changeLanguage","disabled","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_RESET","USER_EMAIL_EXIST_REQUEST","USER_EMAIL_EXIST_SUCCESS","USER_EMAIL_EXIST_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","PASSWORD_RESET_REQUEST","PASSWORD_RESET_FAIL","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","ACTIVATE_REQUEST","ACTIVATE_SUCCESS","ACTIVATE_FAIL","ACTIVATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reset_password","email","dispatch","a","config","headers","body","JSON","stringify","axios","post","data","console","log","getUserDetails","id","getState","userInfo","userLogin","Authorization","token","payload","response","detail","message","Header","useSelector","state","navbar","setNavbar","useDispatch","window","addEventListener","scrollY","Navbar","expand","fixed","collapseOnSelect","Container","to","Brand","Toggle","Collapse","Link","username","localStorage","removeItem","IsAdmin","Divider","Footer","Row","Col","Rating","text","color","style","Product","product","choosePicker","setChoosePicker","Card","onMouseEnter","onMouseLeave","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","margin","display","Message","children","Alert","Paginate","pages","page","isAdmin","split","Pagination","Array","keys","x","active","BookingCalendar","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","PRODUCT_LIST_IMAGES_REQUEST","PRODUCT_LIST_IMAGES_SUCCESS","PRODUCT_LIST_IMAGES_FAIL","listProducts","listProductsDetails","ProductCarousel","productTopRated","error","loading","products","useEffect","Carousel","pause","index","Image","alt","fluid","Caption","HomeScreen","dispach","productList","search","sm","md","lg","xl","BtnSlider","direction","moveSlide","class","listProductImages","productId","ImageSlider","slideIndex","setSlideIndex","productDetails","images","productImagesList","NaN","Number","length","ProductScreen","match","history","qty","setQty","setRating","comment","setComment","productReviewCreate","loadingProductReview","errorProductReview","successProductReview","success","params","ListGroup","description","countInStock","reviews","review","createdAt","substring","Group","controlId","Label","row","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","addToCart","setItem","cart","cartItems","savePaymentMethod","CartScreen","removeFromVartHandler","removeFromCart","item","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","msgEmail","setMsgEmail","redirect","useForm","register","errors","formState","handleSubmit","reset","trigger","timeout","setTimeout","clearTimeout","password","required","pattern","onKeyUp","minLength","RegisterScreen","messagePassword","setMessagePassword","userRegister","scroller","scrollTo","smooth","offset","duration","passwordConfirm","re_password","ProfileScreen","errorUserUpdate","setErrorUserUpdate","userDetails","user","userUpdateProfile","errorUserUpdateProfile","orderListMy","orders","defaultValues","put","updateUserProfile","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setpostalCode","setCountry","PaymentScreen","paymentMethod","Check","label","checked","PlaceOrderScreen","orderCreate","order","itemsPrice","shippingPrice","taxPrice","totalPrice","createOrder","orderItems","OrderScreen","orderId","sdkReady","setSdkReady","orderDetails","orderPay","loadingPay","successPay","orderDeliver","successDeliver","isPaid","paypal","script","document","createElement","async","onload","appendChild","addPayPalScript","href","isDelivered","deliveredAt","padAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","userList","users","successDelete","userDelete","deleteHandler","confirm","delete","deleteUser","Table","striped","bordered","hover","responsive","UserEditScreen","userId","setName","setEmail","setIsAdmin","userUpdate","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","productDelete","loadingDelete","errorDelete","productCreate","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","React","showResults","setShowResults","setPrice","setImage","msgTextUpload","setMsgTextUpload","msgTextUploadImages","setMsgTextUploadImages","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadingImages","setUploadingImages","msg","setMsg","productUpdate","uploadFileHandler","file","files","formData","FormData","append","uploadMultiFilesHandler2","_","forEach","updateProduct","File","custom","multiple","img","OrderListScreen","orderList","paidAt","UserOrders","loadingOrders","errorOrders","classname","AdminScreen","ResetPassword","requestSent","setRequestSent","NewPassword","ActivateScreen","useParams","confActivate","setConfActivate","uid","ResetPasswordScreen","ResetPasswordConfirmScreen","messageError","setMessageError","messageSuccess","setMessageSuccess","userPassword","confNewPassword","newPassword","new_password","re_new_password","resetPasswordConfirm","SignupScreen","ScrollToTop","useLocation","App","path","component","exact","LoginDjoserScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","existItem","filter","succes","userActivate","activationInfo","userEmailExist","cartItemsFromStorage","getItem","parse","userIfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","i18n","use","initReactI18next","LanguageDetector","HttpApi","init","resources","en","translation","latest_products","Header_btn_cart","Header_navdrodown_profile","Header_navdrodown_user_order","Header_navdrodown_logout","Header_navdrodown_user","Header_navdrodown_products","Header_navdrodown_orders","Header_navdrodown_admin","Admin_userlist_btn","Admin_productlist_btn","Admin_orderlist_btn","SearchBox_placeholder","Product_reviews","UserListScreen_list_of_users","UserListScreen_table_name","UserEditScreen_btn_go_back","UserEditScreen_btn_update","UserEditScreen_edit_user","UserListScreen_form_label_name","UserListScreen_form_label_admin","ProductScreen_btn_go_back","ProductScreen_btn_add_to_cart","ProductScreen_btn_form_submit","ProductScreen_price","ProductScreen_description","ProductScreen_status","ProductScreen_status_in_stock","ProductScreen_status_out_of_stock","ProductScreen_qty","ProductScreen_reviews","ProductScreen_write_a_review","ProductScreen_rating","ProductScreen_form_review_selector","ProductScreen_form_review_poor","ProductScreen_form_review_fair","ProductScreen_form_review_good","ProductScreen_form_review_very_good","ProductScreen_form_review_excellent","ProductScreen_form_review_comment","CartScreen_btn_go_back","CartScreen_proceed_to_checkout","CartScreen_title","CartScreen_empty_cart_message","CartScreen_empty_subtotal_items","CheckoutSteps_login","CheckoutSteps_shipping","CheckoutSteps_payments","CheckoutSteps_place_order","ShippingScreen_btn_country","ShippingScreen_title","ShippingScreen_btn_address","ShippingScreen_btn_city","ShippingScreen_postal_code","ShippingScreen_country","PaymentScreen_title","PaymentScreen_btn_country","PlaceOrderScreen_title_shipping","PlaceOrderScreen_shipping","PlaceOrderScreen_title_payment_method","PlaceOrderScreen_payment_method","PlaceOrderScreen_title_orders_items","PlaceOrderScreen_empty_cart","PlaceOrderScreen_table_title_order_summary","PlaceOrderScreen_table_items","PlaceOrderScreen_table_shipping","PlaceOrderScreen_table_tax","PlaceOrderScreen_table_total","OrderScreen_title_shipping","OrderScreen_shipping_name","OrderScreen_shipping_shipping","OrderScreen_title_shipping_shipping","OrderScreen_message_not_delivered","OrderScreen_message_delivered_on","OrderScreen_title_payment_method","OrderScreen_payment_method","OrderScreen_message_not_paid","OrderScreen_message_paid_on","OrderScreen_title_order_items","OrderScreen_table_title_order_summary","OrderScreen_table_items","OrderScreen_table_shipping","OrderScreen_table_tax","OrderScreen_table_total","ProductListScreen_title_products","ProductListScreen_btn_create_product","ProductListScreen_table_name","ProductListScreen_table_price","ProductListScreen_table_category","ProductListScreen_table_brand","ProductsEditScreen_btn_go_back","ProductsEditScreen_btn_choose_photo","ProductsEditScreen_btn_choose_more_photos","ProductsEditScreen_btn_update","ProductsEditScreen_title_edit_product","ProductsEditScreen_table_name","ProductsEditScreen_table_price","ProductsEditScreen_table_image","ProductsEditScreen_table_brand","ProductsEditScreen_table_stock","ProductsEditScreen_table_category","ProductsEditScreen_table_description","OrderListScreen_title_orders","OrderListScreen_table_btn_details","OrderListScreen_table_user","OrderListScreen_table_date","OrderListScreen_table_total","OrderListScreen_table_paid","OrderListScreen_table_delivered","ProfileScreen_btn_table_delivered","ProfileScreen_btn_update","ProfileScreen_update_form_title","ProfileScreen_update_form_name","ProfileScreen_update_form_name_placeholder","ProfileScreen_update_form_email_placeholder","ProfileScreen_update_form_password","ProfileScreen_update_form_password_placeholder","ProfileScreen_update_form_confirm_password","ProfileScreen_update_form_confirm_password_placeholder","ProfileScreen_required_error_msg_name","ProfileScreen_minlength_error_msg_name","ProfileScreen_only_letters_error_msg_name","ProfileScreen_required_error_msg_email","ProfileScreen_inproper_pattern_email","ProfileScreen_required_error_msg_password","ProfileScreen_minlength_error_msg_password","ProfileScreen_table_orders_title","ProfileScreen_table_data","ProfileScreen_table_total","ProfileScreen_table_paid","ProfileScreen_table_delivered","LoginScreen_btn_form","LoginScreen_title","LoginScreen_form_email_placeholder","LoginScreen_form_password","LoginScreen_form_password_placeholder","LoginScreen_new_customer","LoginScreen_password_reset_forgot_password","LoginScreen_register","LoginScreen_password_reset","LoginScreen_required_error_msg_email","LoginScreen_inproper_pattern_email","LoginScreen_required_error_msg_password","LoginScreen_minlength_error_msg_password","LoginScreen_Error_msg","RegisterScreen_btn_register","RegisterScreen_title","RegisterScreen_form_name","RegisterScreen_form_name_placeholder","RegisterScreen_form_email_placeholder","RegisterScreen_form_password","RegisterScreen_form_password_placeholder","RegisterScreen_from_confirm_password","RegisterScreen_form_confirm_password_placeholder","RegisterScreen_have_an_account","RegisterScreen_sign_in","RegisterScreen_required_error_msg_name","RegisterScreen_minlength_error_msg_name","RegisterScreen_only_letters_error_msg_name","RegisterScreen_required_error_msg_email","RegisterScreen_inproper_pattern_email","RegisterScreen_required_error_msg_password","RegisterScreen_minlength_error_msg_password","pl","fallbackLng","detection","caches","backend","loadPath","ReactDOM","render","getElementById"],"mappings":"mSA0CeA,MArCf,WAEI,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACQC,EAAMC,cAAND,EAEJE,EAAWC,cAWf,OACI,eAACC,EAAA,EAAD,CAAMC,SAVY,SAACC,GACnBA,EAAEC,iBACET,EACAI,EAASM,KAAT,oBAA2BV,EAA3B,YAEAI,EAASM,KAAKN,EAASM,KAAKN,EAASO,SAASC,YAKnBC,UAAU,yBAAzC,UACI,cAACP,EAAA,EAAKQ,QAAN,CACIC,KAAK,OACLC,KAAK,IACLC,YAAaf,EAAE,yBACfgB,SAAU,SAACV,GAAD,OAAOP,EAAWO,EAAEW,OAAOC,QACrCP,UAAU,4BAGd,cAACQ,EAAA,EAAD,CACIN,KAAK,SACLO,QAAQ,kBACRT,UAAU,qBAHd,SAKI,mBAAGA,UAAU,wB,oCCJdU,MA9Bf,WACI,IAAMC,EAAY,SAAC,GAAD,QAAGC,aAAH,MAAS,GAAT,MAAaC,cAAb,MAAoB,GAApB,SACd,qBACIC,MAAM,6BACNF,MAAOA,EAAOC,OAAQA,EACtBE,KAAK,eACLC,QAAQ,YAJZ,SAOA,sBAAMC,EAAE,6uCAeZ,OACI,cAACN,EAAD,KCnBR,SAASO,EAAsBC,GAE3B,IAAMC,EAAOC,IAAMF,EAAMG,cAEzB,OACI,cAACF,EAAD,CAAMpB,UAAU,SAuDTuB,MAnDf,WAEI,IAAMC,EAAW,CACb,CACIC,KAAM,KACNtB,KAAM,UACNuB,QAAS,MAGb,CACID,KAAM,KACNtB,KAAM,SACNuB,QAAS,OAKjB,EAAsDxC,mBAASyC,IAAQC,IAAI,YAAc,MAAzF,mBAAOC,EAAP,KAA4BC,EAA5B,KACMC,EAAkBP,EAASQ,MAAK,SAAAC,GAAC,OAAIA,EAAER,OAASI,KAOtD,OACI,eAACK,EAAA,EAAD,CAAKlC,UAAU,uBAAf,UACI,cAACkB,EAAD,CAAuBI,aAAcS,EAAgBL,UACrD,cAACS,EAAA,EAAD,CACIC,MAAO,cAAC,EAAD,IADX,SAIKZ,EAASa,KAAI,gBAAEZ,EAAF,EAAEA,KAAMtB,EAAR,EAAQA,KAAMuB,EAAd,EAAcA,QAAd,OACd,qBAAK1B,UAAU,UAAf,SACI,eAACmC,EAAA,EAAYG,KAAb,CACIC,QAAW,kBAfNC,EAe4Bf,EAdjDgB,IAAQC,eAAeF,QACvBV,EAAuBU,GAFH,IAACA,GAgBLG,SAAYZ,EAAgBN,OAASA,EACrCzB,UAAW,eAHf,UAKI,cAACkB,EAAD,CAAuBI,aAAcI,IAChCvB,MAPiBuB,Y,0CClDjCkB,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAkB,kBAClBC,EAAc,cAEdC,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAqB,qBACrBC,EAAsB,sBAEtBC,EAA2B,2BAC3BC,EAA2B,2BAC3BC,EAAwB,wBAExBC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBACpBC,EAAqB,qBAErBC,EAA8B,8BAC9BC,EAA8B,8BAC9BC,EAA2B,2BAC3BC,EAA4B,4BAE5BC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAiB,iBACjBC,GAAkB,kBAElBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBAEnBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBACnBC,GAAoB,oBAEpBC,GAAyB,yBACzBC,GAAsB,sBACtBC,GAAyB,yBAGzBC,GAA8B,8BAC9BC,GAAiC,iCASjCC,GAAmB,mBACnBC,GAAmB,mBACnBC,GAAgB,gBAChBC,GAAiB,iBCxDjBC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBAEpBC,GAAqB,qBAErBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBAErBC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAkB,kBAElBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBAEtBC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAkB,kBAElBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBC2NtBC,GAAiB,SAACC,GAAD,8CAAW,WAAOC,GAAP,qBAAAC,EAAA,sEAErCD,EAAS,CACPzG,KAAMwE,KAGFmC,EAAS,CACbC,QAAS,CACP,eAAgB,qBAIdC,EAAOC,KAAKC,UAAU,CAAEP,UAZO,SAcdQ,IAAMC,KAE3B,8BACAJ,EACAF,GAlBmC,gBAc7BO,EAd6B,EAc7BA,KAORC,QAAQC,IAAI,OAAQF,GAEpBT,EAAS,CACPzG,KAAM0E,KAxB6B,kDA2BrC+B,EAAS,CACPzG,KAAMyE,KA5B6B,0DAAX,uDA4FjB4C,GAAiB,SAACC,GAAD,8CAAQ,WAAOb,EAAUc,GAAjB,uBAAAb,EAAA,sEAElCD,EAAS,CACPzG,KAAMqD,IAH0B,EAQ9BkE,IADWC,EAPmB,EAOhCC,UAAaD,SAGTb,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBc,cAAc,UAAD,OAAYF,EAASG,SAbJ,SAiBXX,IAAMtF,IAAN,qBAAwB4F,GAAMX,GAjBnB,gBAiB1BO,EAjB0B,EAiB1BA,KAERT,EAAS,CACPzG,KAAMsD,EACNsE,QAASV,IArBuB,kDAwBlCT,EAAS,CACPzG,KAAMuD,EACNqE,QACE,KAAMC,UAAY,KAAMA,SAASX,KAAKY,OAClC,KAAMD,SAASX,KAAKY,OACpB,KAAMC,UA7BoB,0DAAR,yDCxNfC,OAjHf,WACE,IAAQ7I,EAAMC,cAAND,EAEAqI,EADUS,aAAY,SAACC,GAAD,OAAWA,EAAMT,aACvCD,SAER,EAA4BxI,oBAAS,GAArC,mBAAOmJ,EAAP,KAAeC,EAAf,KAEM3B,EAAW4B,cAgBjB,OAFAC,OAAOC,iBAAiB,UARH,WACfD,OAAOE,SAAW,GACpBJ,GAAU,GAEVA,GAAU,MAOZ,iCACE,cAACK,EAAA,EAAD,CACEnB,GAAG,SACH/G,QAAQ,OACRmI,OAAO,KACPC,MAAM,MACNC,kBAAgB,EAChB,WAAS,YACT9I,UAAWqI,EAAS,eAAiB,YAPvC,SASE,eAACU,EAAA,EAAD,WACE,cAAC,gBAAD,CAAeC,GAAG,IAAlB,SACE,cAACL,EAAA,EAAOM,MAAR,6BAGF,cAACN,EAAA,EAAOO,OAAR,CAAe,gBAAc,iBAC7B,eAACP,EAAA,EAAOQ,SAAR,CAAiB3B,GAAG,mBAApB,UACE,eAACtF,EAAA,EAAD,CAAKlC,UAAU,UAAf,UACE,cAAC,EAAD,IACA,cAAC,gBAAD,CAAegJ,GAAG,QAAlB,SACE,eAAC9G,EAAA,EAAIkH,KAAL,CAAUpJ,UAAU,SAApB,UACE,mBAAGA,UAAU,yBACZX,EAAE,wBAINqI,EACC,eAACvF,EAAA,EAAD,CAAaC,MAAOsF,EAAS2B,SAA7B,UACE,cAAC,gBAAD,CAAeL,GAAG,WAAlB,SACE,cAAC7G,EAAA,EAAYG,KAAb,UACGjD,EAAE,iCAGP,cAAC,gBAAD,CAAe2J,GAAG,UAAlB,SACE,cAAC7G,EAAA,EAAYG,KAAb,UACGjD,EAAE,oCAGP,cAAC8C,EAAA,EAAYG,KAAb,CAAkBC,QArDZ,WACpBoE,GDsKwB,SAACA,GAC3B2C,aAAaC,WAAW,YACxB5C,EAAS,CAAEzG,KAAM6C,IACjB4D,EAAS,CAAEzG,KAAMwD,IACjBiD,EAAS,CAAEzG,KAAM+F,KACjBU,EAAS,CAAEzG,KAAMgE,SCvHD,SACG7E,EAAE,8BAGJqI,GAAYA,EAAS8B,SACpB,gCACE,cAACrH,EAAA,EAAYsH,QAAb,IACA,cAAC,gBAAD,CAAeT,GAAG,SAAlB,SACE,cAAC7G,EAAA,EAAYG,KAAb,UACGjD,EAAE,qCAOb,cAAC,gBAAD,CAAe2J,GAAG,SAAlB,SACE,eAAC9G,EAAA,EAAIkH,KAAL,CAAUpJ,UAAU,SAApB,UACE,mBAAGA,UAAU,gBADf,gBA0BN,cAAC,EAAD,e,oBCnGG0J,OAZf,WACI,OACI,iCACI,cAACX,EAAA,EAAD,UACI,cAACY,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAK5J,UAAU,oBAAf,gD,UCwDL6J,OA9Df,YAAuC,IAAtBtJ,EAAqB,EAArBA,MAAOuJ,EAAc,EAAdA,KAAMC,EAAQ,EAARA,MAC1B,OACI,sBAAK/J,UAAU,SAAf,UACI,+BACI,mBAAGgK,MAAS,CAACD,SAAQ/J,UACjBO,GAAS,EACH,cACAA,GAAS,GACL,uBACA,kBAKlB,+BACI,mBAAGyJ,MAAS,CAACD,SAAQ/J,UACjBO,GAAS,EACH,cACAA,GAAS,IACL,uBACA,kBAKlB,+BACI,mBAAGyJ,MAAS,CAACD,SAAQ/J,UACjBO,GAAS,EACH,cACAA,GAAS,IACL,uBACA,kBAKlB,+BACI,mBAAGyJ,MAAS,CAACD,SAAQ/J,UACjBO,GAAS,EACH,cACAA,GAAS,IACL,uBACA,kBAKlB,+BACI,mBAAGyJ,MAAS,CAACD,SAAQ/J,UACjBO,GAAS,EACH,cACAA,GAAS,IACL,uBACA,kBAIlB,+BAAOuJ,GAAQA,Q,SCRZG,OA7Cf,YAA+B,IAAZC,EAAW,EAAXA,QAEf,EAAwChL,oBAAS,GAAjD,mBAAOiL,EAAP,KAAqBC,EAArB,KAWA,OACI,8BACI,eAACC,GAAA,EAAD,CAAMrK,UAAYmK,EAAe,+BAAiC,+BAC7DG,aAXa,WACtBF,GAAgB,IAWPG,aARa,WACtBH,GAAgB,IAKZ,UAGI,cAAC,QAAD,CAAMpB,GAAE,mBAAckB,EAAQM,KAA9B,SACI,cAACH,GAAA,EAAKI,IAAN,CAAUC,IAAKR,EAAQS,UAG3B,eAACN,GAAA,EAAKO,KAAN,WACI,cAAC,QAAD,CAAM5B,GAAE,mBAAckB,EAAQM,KAA9B,SACI,cAACH,GAAA,EAAKQ,MAAN,CAAYC,GAAG,MAAf,SACI,iCAASZ,EAAQ/J,WAKzB,cAACkK,GAAA,EAAKU,KAAN,CAAWD,GAAG,MAAd,SACI,qBAAK9K,UAAU,OAAf,SACI,cAAC,GAAD,CAAQO,MAAO2J,EAAQc,OAAQlB,KAAI,8BAAyBI,EAAQe,YAAclB,MAAO,gBAIjG,eAACM,GAAA,EAAKU,KAAN,CAAWD,GAAG,KAAd,cACMZ,EAAQgB,kB,UCtBnBC,OAlBf,WACI,OACI,cAACC,GAAA,EAAD,CACIC,UAAU,SACVC,KAAK,SACLtB,MAAO,CACHnJ,OAAO,QACPD,MAAM,QACN2K,OAAO,OACPC,QAAQ,SAPhB,SAWI,sBAAMxL,UAAU,UAAhB,2B,UCLGyL,OARf,YAAuC,IAArBhL,EAAoB,EAApBA,QAASiL,EAAW,EAAXA,SACvB,OACI,cAACC,GAAA,EAAD,CAAOlL,QAASA,EAAhB,SACKiL,K,mBCwBEE,OA1Bf,YAA6D,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,KAAkC,IAA5B3M,eAA4B,MAApB,GAAoB,MAAhB4M,eAAgB,SAKxD,OAJG5M,IACCA,EAAUA,EAAQ6M,MAAM,aAAa,GAAGA,MAAM,KAAK,IAG/CH,EAAQ,GACZ,cAACI,GAAA,EAAD,UACK,aAAIC,MAAML,GAAOM,QAAQ9J,KAAI,SAAC+J,GAAD,OAC1B,cAAC,gBAAD,CAEApD,GAAK+C,EAAD,sCAEiC5M,EAFjC,iBAEiDiN,EAAE,GAFnD,oBACajN,EADb,iBAC6BiN,EAAE,GAHnC,SAOI,cAACH,GAAA,EAAW3J,KAAZ,CAAiB+J,OAAQD,EAAI,IAAMN,EAAnC,SACKM,EAAE,KAPNA,EAAI,S,4BC8BVE,I,oBC3CFC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBAEpBC,GAA0B,0BAC1BC,GAA0B,0BAC1BC,GAAuB,uBAEvBC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAsB,sBAEtBC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAsB,sBACtBC,GAAuB,uBAEvBC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAsB,sBACtBC,GAAuB,uBAEvBC,GAAgC,gCAChCC,GAAgC,gCAChCC,GAA6B,6BAC7BC,GAA8B,8BAE9BC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBAEnBC,GAA8B,8BAC9BC,GAA8B,8BAC9BC,GAA2B,2BCR3BC,GACX,eAAC/O,EAAD,uDAAW,GAAX,8CACA,WAAOwH,GAAP,iBAAAC,EAAA,sEAEID,EAAS,CAAEzG,KAAMqM,KAFrB,SAI2BrF,IAAMtF,IAAN,uBAA0BzC,IAJrD,gBAIYiI,EAJZ,EAIYA,KAERT,EAAS,CACPzG,KAAMsM,GACN1E,QAASV,IARf,gDAWIT,EAAS,CACPzG,KAAMuM,GACN3E,QACE,KAAMC,UAAY,KAAMA,SAASX,KAAKY,OAClC,KAAMD,SAASX,KAAKY,OACpB,KAAMC,UAhBlB,yDADA,uDA2CWkG,GAAsB,SAAC3D,GAAD,8CAAS,WAAO7D,GAAP,iBAAAC,EAAA,sEAExCD,EAAS,CAAEzG,KAAMwM,KAFuB,SAIjBxF,IAAMtF,IAAN,wBAA2B4I,IAJV,gBAIhCpD,EAJgC,EAIhCA,KAERT,EAAS,CACPzG,KAAMyM,GACN7E,QAASV,IAR6B,gDAWxCT,EAAS,CACPzG,KAAM0M,GACN9E,QACE,KAAMC,UAAY,KAAMA,SAASX,KAAKY,OAClC,KAAMD,SAASX,KAAKY,OACpB,KAAMC,UAhB0B,yDAAT,uDC9BpBmG,OA/Bf,WACI,IAAMzH,EAAW4B,cAEX8F,EAAkBlG,aAAY,SAAAC,GAAK,OAAIA,EAAMiG,mBAC3CC,EAA6BD,EAA7BC,MAAOC,EAAsBF,EAAtBE,QAASC,EAAaH,EAAbG,SAMxB,OAJAC,qBAAU,WACN9H,EDiCuB,uCAAM,WAAOA,GAAP,iBAAAC,EAAA,sEAEjCD,EAAS,CAAEzG,KAAM0N,KAFgB,SAIV1G,IAAMtF,IAAN,sBAJU,gBAIzBwF,EAJyB,EAIzBA,KAERT,EAAS,CACPzG,KAAM2N,GACN/F,QAASV,IARsB,gDAWjCT,EAAS,CACPzG,KAAM4N,GACNhG,QACE,KAAMC,UAAY,KAAMA,SAASX,KAAKY,OAClC,KAAMD,SAASX,KAAKY,OACpB,KAAMC,UAhBmB,yDAAN,yDChCxB,CAACtB,IAEK4H,EAAU,cAAC,GAAD,IAClBD,EACC,cAAC,GAAD,CAAS7N,QAAQ,SAAjB,SAA2B6N,IAEzB,cAACI,GAAA,EAAD,CAAUC,MAAM,QAAQ3O,UAAU,SAAlC,SACKwO,EAASnM,KAAI,SAAC6H,EAAS0E,GAAV,OACV,cAACF,GAAA,EAASpM,KAAV,UACI,eAAC,QAAD,CAAM0G,GAAE,mBAAckB,EAAQM,KAA9B,UACI,cAACqE,GAAA,EAAD,CAAOnE,IAAKR,EAAQS,MAAOmE,IAAK5E,EAAQ/J,KAAM4O,OAAK,IACnD,cAACL,GAAA,EAASM,QAAV,CAAkBhP,UAAU,mBAA5B,SACI,+BAAKkK,EAAQ/J,KAAb,MAAsB+J,EAAQgB,MAA9B,aAJQ0D,SC8CrBK,OAtDf,WACI,IAAQ5P,EAAMC,cAAND,EACF6P,EAAU3G,cAEV4G,EAAchH,aAAY,SAAAC,GAAK,OAAIA,EAAM+G,eACxCb,EAAyCa,EAAzCb,MAAOC,EAAkCY,EAAlCZ,QAASC,EAAyBW,EAAzBX,SAAU1C,EAAeqD,EAAfrD,KAAMD,EAASsD,EAATtD,MAEnCtM,EAAWC,cACXL,EAAUI,EAASO,SAASsP,OAShC,OAPA/H,QAAQC,IAAI,WAAY/H,GACxB8H,QAAQC,IAAI,UAAWnI,GAEvBsP,qBAAU,WACNS,EAAQhB,GAAa/O,MACvB,CAAC+P,EAAS/P,IAGR,sBAAKa,UAAU,yBAAf,WAWMb,GAAW,cAAC,GAAD,IACT,6BAAKE,EAAE,qBAEVkP,EAAU,cAAC,GAAD,IACLD,EAAQ,cAAC,GAAD,CAAS7N,QAAQ,SAAjB,SAA2B6N,IAEjC,gCACI,qBAAKtO,UAAU,OAAf,SACI,cAAC2J,GAAA,EAAD,UACK6E,EAASnM,KAAI,SAAA6H,GAAO,OACjB,cAACN,GAAA,EAAD,CAAuByF,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAjD,SACI,cAAC,GAAD,CAAStF,QAASA,KADZA,EAAQM,YAM1B,cAAC,GAAD,CAAUsB,KAAMA,EAAMD,MAAOA,EAAO1M,QAASA,W,UC1C1DsQ,OAff,YAA4C,IAAxBC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,UAC3B,OACI,wBACIpN,QAAWoN,EACX3P,UAAyB,SAAd0P,EAAuB,iBAAmB,iBAFzD,SAMmB,SAAdA,EAAuB,mBAAGE,MAAM,uBAA4B,mBAAGA,MAAM,yBCArEC,GAAoB,SAACC,GAAD,8CAAe,WAAMnJ,GAAN,iBAAAC,EAAA,sEAGxCD,EAAS,CAAEzG,KAAM6N,KACjB1G,QAAQC,IAAI,aAAcwI,GAJc,SAKjB5I,IAAMtF,IAAN,+BAAkCkO,IALjB,gBAKhC1I,EALgC,EAKhCA,KACRC,QAAQC,IAAI,eAAgBF,GAE5BT,EAAS,CACLzG,KAAM8N,GACNlG,QAASV,IAV2B,kDAaxCT,EAAS,CACLzG,KAAM+N,GACNnG,QAAS,KAAMC,UAAY,KAAMA,SAASX,KAAKY,OAC7C,KAAMD,SAASX,KAAKY,OACpB,KAAMC,UAjB4B,0DAAf,uDCkElB8H,OAxEf,WAEI,MAAoC7Q,mBAAS,GAA7C,mBAAO8Q,EAAP,KAAmBC,EAAnB,KAGQ/F,EADc/B,aAAY,SAAAC,GAAK,OAAIA,EAAM8H,kBACzChG,QAGAiG,EADkBhI,aAAY,SAAAC,GAAK,OAAIA,EAAMgI,qBAC7CD,OACR9I,QAAQC,IAAI,cAAc6I,GAE1B,IAAMxJ,EAAW4B,cAgCjB,OAPAkG,qBAAU,WAEa4B,KAAfnG,EAAQM,KACR7D,EAASkJ,GAAkBS,OAAOpG,EAAQM,SAE/C,CAACN,IAGA,sBAAKlK,UAAU,mBAAf,UACOmQ,EACCA,EAAO9N,KAAI,SAACsI,EAAOiE,GACnB,OACI,qBAAiB5O,UAAagQ,IAAepB,EAAQ,EAAI,wBAA0B,YAAnF,SACI,qBAAKlE,IAAKC,EAAMwF,UADVvB,MAHN,cAAC,GAAD,IASZ,cAAC,GAAD,CAAWe,UAzCD,WAEXK,IAAeG,EAAOI,OACrBN,EAAcD,EAAa,GAEtBA,IAAeG,EAAOI,QAC3BN,EAAc,IAmCmBP,UAAW,SAC5C,cAAC,GAAD,CAAWC,UAhCD,WACI,IAAfK,EACCC,EAAcD,EAAa,GAEP,IAAfA,GACLC,EAAcE,EAAOI,SA2BYb,UAAW,aCsLzCc,OAtOf,YAA4C,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QAC5B,EAAsBxR,mBAAS,GAA/B,mBAAOyR,EAAP,KAAYC,EAAZ,KACA,EAA4B1R,mBAAS,GAArC,mBAAO8L,EAAP,KAAe6F,EAAf,KACA,EAA8B3R,mBAAS,IAAvC,mBAAO4R,EAAP,KAAgBC,EAAhB,KACQ1R,EAAMC,cAAND,EAEFsH,EAAW4B,cAMX2H,GAHO7Q,EAAE,iCAGQ8I,aAAY,SAAAC,GAAK,OAAIA,EAAM8H,mBAC1C3B,EAA4B2B,EAA5B3B,QAASD,EAAmB4B,EAAnB5B,MAAOpE,EAAYgG,EAAZhG,QAGhBxC,EADUS,aAAY,SAAAC,GAAK,OAAIA,EAAMT,aACrCD,SAEFsJ,EAAsB7I,aAAY,SAAAC,GAAK,OAAIA,EAAM4I,uBAE3CC,EAGRD,EAHAzC,QACM2C,EAENF,EAFA1C,MACQ6C,EACRH,EADAI,QA4BJ,OAzBA3C,qBAAU,WACH0C,IACCN,EAAU,GACVE,EAAW,IACXpK,EAAS,CAACzG,KAAKyN,MAGnBhH,EAASwH,GAAoBsC,EAAMY,OAAO7G,QAE5C,CAAC7D,EAAU8J,EAAOU,IAiBhB,sBAAKnR,UAAU,yBAAf,UACI,cAAC,QAAD,CAAMgJ,GAAG,IACLhJ,UAAY,wCADhB,SAGKX,EAAE,+BACNkP,EACG,cAAC,GAAD,IACED,EACI,cAAC,GAAD,CAAS7N,QAAQ,SAAjB,SAA2B6N,IAE7B,gCACI,eAAC3E,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAK0F,GAAI,EAAT,SAEI,cAAC,GAAD,CAAatP,UAAU,iBAG3B,eAAC4J,GAAA,EAAD,CAAK0F,GAAI,EAAT,UACI,eAACgC,GAAA,EAAD,WACI,cAACA,GAAA,EAAUhP,KAAX,UACI,6BAAK4H,EAAQ/J,SAGjB,cAACmR,GAAA,EAAUhP,KAAX,UACA,eAACqH,GAAA,EAAD,WAEI,cAACC,GAAA,EAAD,UAAK,cAAC,GAAD,CAAQrJ,MAAO2J,EAAQc,OAAQjB,MAAO,cAE3C,cAACH,GAAA,EAAD,UAAK,cAAC,GAAD,CAAQrJ,MAAO2J,EAAQc,OAAQlB,KAAI,UAAKI,EAAQe,WAAb,YAAmClB,MAAO,mBAItF,cAACuH,GAAA,EAAUhP,KAAX,UACA,eAACqH,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UAAK,mCAASvK,EAAE,uBAAX,SACL,eAACuK,GAAA,EAAD,eAAOM,EAAQgB,cAInB,cAACoG,GAAA,EAAUhP,KAAX,UACA,eAACqH,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UAAK,mCAASvK,EAAE,6BAAX,SACL,cAACuK,GAAA,EAAD,UAAMM,EAAQqH,sBAItB,cAAClH,GAAA,EAAD,UACI,eAACiH,GAAA,EAAD,CAAW7Q,QAAQ,QAAnB,UACI,cAAC6Q,GAAA,EAAUhP,KAAX,UACI,eAACqH,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,WAAMvK,EAAE,wBAAR,OACA,cAACuK,GAAA,EAAD,UAEKM,EAAQsH,aAAe,EAAInS,EAAE,iCAAmCA,EAAE,4CAK9E6K,EAAQsH,aAAe,GACpB,cAACF,GAAA,EAAUhP,KAAX,UACI,eAACqH,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAK5J,UAAU,kBAAf,UACKX,EAAE,qBADP,OAGA,cAACuK,GAAA,EAAD,UACI,cAACnK,EAAA,EAAKQ,QAAN,CACI6K,GAAG,SACHvK,MAASoQ,EACTtQ,SAAY,SAACV,GAAD,OAAOiR,EAAOjR,EAAEW,OAAOC,QAHvC,SAMQ,aAAI2L,MAAMhC,EAAQsH,cAAcrF,QAAQ9J,KAAI,SAAC+J,GAAD,OACxC,wBAAoB7L,MAAO6L,EAAI,EAA/B,SACKA,EAAI,GADIA,EAAI,eAc7C,cAACkF,GAAA,EAAUhP,KAAX,UACI,qBAAKtC,UAAU,eAAf,SACI,cAACQ,EAAA,EAAD,CACA+B,QAxGnB,WACrBmO,EAAQ7Q,KAAR,gBAAsB4Q,EAAMY,OAAO7G,IAAnC,gBAA8CmG,KAwGNzQ,KAAK,SACLF,UAAW,mBACX2C,SAAgC,GAAtBuH,EAAQsH,aAJlB,SAMCnS,EAAE,kDAS3B,cAACsK,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,CAAK0F,GAAI,EAAGtP,UAAU,OAAtB,UACI,6BAAKX,EAAE,2BACqB,IAA3B6K,EAAQuH,QAAQlB,QAAgB,cAAC,GAAD,CAAS9P,QAAQ,OAAjB,wBAEjC,eAAC6Q,GAAA,EAAD,CAAW7Q,QAAQ,QAAnB,UACKyJ,EAAQuH,QAAQpP,KAAI,SAACqP,GAAD,OACjB,eAACJ,GAAA,EAAUhP,KAAX,WACI,iCAASoP,EAAOvR,OAChB,cAAC,GAAD,CAAQI,MAAOmR,EAAO1G,OAAQjB,MAAM,YACpC,4BAAI2H,EAAOC,UAAUC,UAAU,EAAG,MAClC,4BAAIF,EAAOZ,YAJMY,EAAOlH,QAQhC,eAAC8G,GAAA,EAAUhP,KAAX,WACI,6BAAKjD,EAAE,kCAEN4R,GAAwB,cAAC,GAAD,IACxBE,GAAwB,cAAC,GAAD,CAAS1Q,QAAQ,UAAjB,8BACxByQ,GAAsB,cAAC,GAAD,CAASzQ,QAAQ,SAAjB,SAA2ByQ,IAEjDxJ,EACG,eAACjI,EAAA,EAAD,CAAMC,SAzIxB,SAACC,GNoJzB,IAACmQ,EAAW4B,EMnJN/R,EAAEC,iBACF+G,GNkJLmJ,EMjJSW,EAAMY,OAAO7G,INiJXkH,EMjJgB,CACd1G,SACA8F,WN+Id,uCAAuB,WAAOnK,EAAUc,GAAjB,uBAAAb,EAAA,sEAEnBD,EAAS,CACPzG,KAAMsN,KAHW,EAQf/F,IADWC,EAPI,EAOjBC,UAAaD,SAGTb,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBc,cAAc,UAAD,OAAYF,EAASG,SAbnB,SAiBIX,IAAMC,KAAN,wBACJ2I,EADI,aAErB4B,EACA7K,GApBiB,gBAiBXO,EAjBW,EAiBXA,KAMRT,EAAS,CACPzG,KAAMuN,GACN3F,QAASV,IAzBQ,kDA4BnBT,EAAS,CACPzG,KAAMwN,GACN5F,QACE,KAAMC,UAAY,KAAMA,SAASX,KAAKY,OAClC,KAAMD,SAASX,KAAKY,OACpB,KAAMC,UAjCK,0DAAvB,2DMX0C,UACI,eAACxI,EAAA,EAAKoS,MAAN,CAAYC,UAAU,SAAtB,UACI,cAACrS,EAAA,EAAKsS,MAAN,UAAa1S,EAAE,0BACf,eAACI,EAAA,EAAKQ,QAAN,CACI6K,GAAG,SACHvK,MAAOyK,EACP3K,SAAU,SAACV,GAAD,OAAOkR,EAAUlR,EAAEW,OAAOC,QAHxC,UAKI,wBAAQA,MAAM,GAAd,SAAkBlB,EAAE,wCACpB,wBAAQkB,MAAM,IAAd,SAAmBlB,EAAE,oCACrB,wBAAQkB,MAAM,IAAd,SAAmBlB,EAAE,oCACrB,wBAAQkB,MAAM,IAAd,SAAmBlB,EAAE,oCACrB,wBAAQkB,MAAM,IAAd,SAAmBlB,EAAE,yCACrB,wBAAQkB,MAAM,IAAd,SAAmBlB,EAAE,+CAI7B,eAACI,EAAA,EAAKoS,MAAN,CAAYC,UAAU,UAAU9R,UAAU,OAA1C,UACI,cAACP,EAAA,EAAKsS,MAAN,UAAa1S,EAAE,uCACf,cAACI,EAAA,EAAKQ,QAAN,CACI6K,GAAG,WACHkH,IAAI,KACJzR,MAAOuQ,EACPzQ,SAAU,SAACV,GAAD,OAAOoR,EAAWpR,EAAEW,OAAOC,aAK7C,cAACC,EAAA,EAAD,CACImC,SAAUsO,EACV/Q,KAAM,SACNO,QAAU,UACVT,UAAW,mBAJf,SAMKX,EAAE,sCAMX,eAAC,GAAD,CAASoB,QAAQ,OAAjB,oBAA+B,cAAC,QAAD,CAAMuI,GAAG,SAAT,mBAA/B,0CCtO/BiJ,GAAgB,gBAChBC,GAAmB,mBACnBC,GAA6B,6BAE7BC,GAA2B,2BAE3BC,GAAmB,mBCGnBC,GAAY,SAAC9K,EAAImJ,GAAL,8CAAa,WAAOhK,EAAUc,GAAjB,iBAAAb,EAAA,sEACbM,IAAMtF,IAAN,wBAA2B4F,IADd,gBAC3BJ,EAD2B,EAC3BA,KAEPT,EAAS,CACLzG,KAAM+R,GACNnK,QAAQ,CACJoC,QAAS9C,EAAKoD,IACdrK,KAAMiH,EAAKjH,KACXwK,MAAOvD,EAAKuD,MACZO,MAAO9D,EAAK8D,MACZsG,aAAcpK,EAAKoK,aACnBb,SAIRrH,aAAaiJ,QAAQ,YAAavL,KAAKC,UAAUQ,IAAW+K,KAAKC,YAf/B,2CAAb,yDAqCZC,GAAoB,SAACtL,GAAD,OAAU,SAACT,GACxCA,EAAS,CACLzG,KAAKkS,GACLtK,QAASV,IAGbkC,aAAaiJ,QAAQ,gBAAiBvL,KAAKC,UAAUG,MCwE1CuL,OApHf,YAAiD,IAA5BlC,EAA2B,EAA3BA,MAAO3Q,EAAoB,EAApBA,SAAU4Q,EAAU,EAAVA,QAE1BrR,EAAMC,cAAND,EACFyQ,EAAYW,EAAMY,OAAO7G,IACzBmG,EAAK7Q,EAASsP,OAASkB,OAAOxQ,EAASsP,OAAOpD,MAAM,KAAK,IAAK,EAE9DrF,EAAW4B,cAGVkK,EADMtK,aAAY,SAAAC,GAAK,OAAIA,EAAMoK,QACjCC,UAEPhE,qBAAU,WACHqB,GACCnJ,EAAS2L,GAAUxC,EAAWa,MAEnC,CAAChK,EAAUmJ,EAAWa,IAEzB,IAAMiC,EAAwB,SAACpL,GAC3Bb,EDEsB,SAACa,GAAD,OAAQ,SAACb,EAAUc,GAC7Cd,EAAS,CACLzG,KAAKgS,GACLpK,QAASN,IAGb8B,aAAaiJ,QAAQ,YAAavL,KAAKC,UAAUQ,IAAW+K,KAAKC,aCRpDI,CAAerL,KAO5B,OACI,qBAAKxH,UAAU,yBAAf,SACI,eAAC2J,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAK0F,GAAI,EAAT,UACI,6BAAKjQ,EAAE,sBACe,IAArBoT,EAAUlC,OACP,eAAC,GAAD,CAAS9P,QAAQ,OAAjB,UACKpB,EAAE,iCADP,IACyC,eAAC,QAAD,CAAM2J,GAAG,IAAT,cAAe3J,EAAE,gCAItD,cAACiS,GAAA,EAAD,CAAW7Q,QAAQ,QAAnB,SACKgS,EAAUpQ,KAAI,SAAAyQ,GAAI,OACf,cAACxB,GAAA,EAAUhP,KAAX,UACI,eAACqH,GAAA,EAAD,CAAK3J,UAAU,gBAAf,UACI,cAAC4J,GAAA,EAAD,CAAK0F,GAAI,EAAT,SACI,cAACT,GAAA,EAAD,CAAOnE,IAAKoI,EAAKnI,MAAOmE,IAAKgE,EAAK3S,KAAM4O,OAAK,EAACgE,SAAO,MAEzD,cAACnJ,GAAA,EAAD,CAAK0F,GAAI,EAAT,SACI,cAAC,QAAD,CAAMtG,GAAE,mBAAc8J,EAAK5I,SAA3B,SAAuC4I,EAAK3S,SAEhD,eAACyJ,GAAA,EAAD,CAAK0F,GAAI,EAAT,cACMwD,EAAK5H,SAEX,cAACtB,GAAA,EAAD,CAAK0F,GAAI,EAAT,SACI,cAAC7P,EAAA,EAAKQ,QAAN,CACI6K,GAAG,SACHvK,MAASuS,EAAKnC,IACdtQ,SAAY,SAACV,GAAD,OAAOgH,EAAS2L,GAAUQ,EAAK5I,QAASoG,OAAO3Q,EAAEW,OAAOC,UAHxE,SAMQ,aAAI2L,MAAM4G,EAAKtB,cAAcrF,QAAQ9J,KAAI,SAAC+J,GAAD,OACrC,wBAAoB7L,MAAO6L,EAAI,EAA/B,SACKA,EAAI,GADIA,EAAI,UASjC,cAACxC,GAAA,EAAD,CAAK0F,GAAI,EAAT,SACI,cAAC9O,EAAA,EAAD,CACIN,KAAK,SACLO,QAAU,QACV8B,QAAW,kBAAMqQ,EAAsBE,EAAK5I,UAHhD,SAKI,mBAAGlK,UAAU,yBAlCR8S,EAAK5I,iBAiD9C,cAACN,GAAA,EAAD,CAAK0F,GAAI,EAAT,SACI,eAACjF,GAAA,EAAD,WACI,cAACiH,GAAA,EAAD,CAAW7Q,QAAQ,QAAnB,SACI,eAAC6Q,GAAA,EAAUhP,KAAX,WACI,+BAAKjD,EAAE,mCAAP,KAA6CoT,EAAUO,QAAO,SAACC,EAAKH,GAAN,OAAeG,EAAMH,EAAKnC,MAAK,GAA7F,OADJ,IAEM8B,EAAUO,QAAO,SAACC,EAAKH,GAAN,OAAeG,EAAMH,EAAKnC,IAAMmC,EAAK5H,QAAO,GAAGgI,QAAQ,QAKlF,cAAC5B,GAAA,EAAUhP,KAAX,CAAgB7B,QAAQ,QAAxB,SACA,qBAAKT,UAAU,eAAf,SACI,cAACQ,EAAA,EAAD,CACIN,KAAK,SACLF,UAAU,6BACV2C,SAAiC,IAArB8P,EAAUlC,OACtBhO,QAlFJ,WACpBmO,EAAQ7Q,KAAK,6BA6EO,SAMKR,EAAE,mD,kBClGpB8T,OAZf,YAAoC,IAAZzH,EAAW,EAAXA,SACpB,OACI,cAAC3C,EAAA,EAAD,UACI,cAACY,GAAA,EAAD,CAAK3J,UAAU,4BAAf,SACI,cAAC4J,GAAA,EAAD,CAAKwJ,GAAI,GAAI9D,GAAI,EAAjB,SACK5D,SCqIN2H,OAlIf,YAAmC,IAAZ3C,EAAW,EAAXA,QACrB,EAAgCxR,oBAAS,GAAzC,mBAAOoU,EAAP,KAAiBC,EAAjB,KACQlU,EAAMC,cAAND,EACFsH,EAAW4B,cACXiL,EAAW9C,EAAQ5Q,SAASsP,OAC9BsB,EAAQ5Q,SAASsP,OAAOpD,MAAM,KAAK,GACnC,IACErE,EAAYQ,aAAY,SAACC,GAAD,OAAWA,EAAMT,aACvC2G,EAA6B3G,EAA7B2G,MAAOC,EAAsB5G,EAAtB4G,QAAS7G,EAAaC,EAAbD,SAExB,EAMI+L,eALFC,EADF,EACEA,SACaC,EAFf,EAEEC,UAAaD,OACbE,EAHF,EAGEA,aACAC,EAJF,EAIEA,MACAC,EALF,EAKEA,QAuBF,OApBAtF,qBAAU,WACJ/G,GACFgJ,EAAQ7Q,KAAK2T,KAEd,CAAC9C,EAAShJ,EAAU8L,IAQvB/E,qBAAU,WACR,IAAMuF,EAAUC,YAAW,WACzBV,GAAY,KACX,KAEH,OAAO,kBAAMW,aAAaF,MACzB,CAACV,IAGF,qBAAKtT,UAAU,yBAAf,SACE,eAAC,GAAD,WACE,6BAAKX,EAAE,uBACNiU,GAAY,cAAC,GAAD,CAAS7S,QAAQ,SAAjB,SAA2BpB,EAAEiP,KACzCC,GAAW,cAAC,GAAD,IAEZ,eAAC9O,EAAA,EAAD,CAAMC,SAAUmU,GArBL,SAACzM,GrBmHC,IAACV,EAAOyN,EqBlHzBxN,GrBkHkBD,EqBlHHU,EAAKV,MrBkHKyN,EqBlHE/M,EAAK+M,SrBkHf,uCAAqB,WAAOxN,GAAP,mBAAAC,EAAA,sEAEtCD,EAAS,CACPzG,KAAM0C,IAGFiE,EAAS,CACbC,QAAS,CACP,eAAgB,qBARkB,SAYfI,IAAMC,KAC3B,oBACA,CAAEkC,SAAU3C,EAAOyN,SAAUA,GAC7BtN,GAfoC,gBAY9BO,EAZ8B,EAY9BA,KAMRT,EAAS,CACPzG,KAAM2C,EACNiF,QAASV,IAGXkC,aAAaiJ,QAAQ,WAAYvL,KAAKC,UAAUG,IAvBV,kDAyBtCT,EAAS,CACPzG,KAAM4C,EACNgF,QACE,KAAMC,UAAY,KAAMA,SAASX,KAAKY,OAClC,KAAMD,SAASX,KAAKY,OACpB,KAAMC,UA9BwB,0DAArB,wDqBjHjB6L,OAmBI,UACE,eAACrU,EAAA,EAAKoS,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACrS,EAAA,EAAKsS,MAAN,oBACA,cAACtS,EAAA,EAAKQ,QAAN,2BACEC,KAAK,OACLE,YAAaf,EAAE,uCACXqU,EAAS,QAAS,CACpBU,SAAU/U,EAAE,wCACZgV,QAAS,CACP9T,MAAO,2CACP0H,QAAS5I,EAAE,0CAPjB,IAUEiV,QAAS,WACPP,EAAQ,UAEV5T,KAAK,WAENwT,EAAOjN,OACN,qBAAK1G,UAAU,iBAAf,SAAiC2T,EAAOjN,MAAMuB,aAIlD,eAACxI,EAAA,EAAKoS,MAAN,CAAYC,UAAU,WAAtB,UACE,cAACrS,EAAA,EAAKsS,MAAN,UAAa1S,EAAE,+BACf,cAACI,EAAA,EAAKQ,QAAN,2BACEC,KAAK,WACLE,YAAaf,EAAE,0CACXqU,EAAS,WAAY,CACvBU,SAAU/U,EAAE,2CACZkV,UAAW,CACThU,MAAO,EACP0H,QAAS5I,EAAE,gDAPjB,IAUEiV,QAAS,WACPP,EAAQ,aAEV5T,KAAK,cAENwT,EAAOQ,UACN,qBAAKnU,UAAU,iBAAf,SAAiC2T,EAAOQ,SAASlM,aAIrD,cAACzH,EAAA,EAAD,CACEN,KAAK,SACLO,QAAQ,UACRT,UAAU,kCAHZ,SAKGX,EAAE,6BAIP,cAACsK,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACGvK,EAAE,4BAA6B,IAChC,cAAC,QAAD,CACE2J,GAAIwK,EAAQ,6BAAyBA,GAAa,YADpD,SAGGnU,EAAE,+BAKT,cAACsK,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACGvK,EAAE,8CAA+C,IAClD,cAAC,QAAD,CACE2J,GAIE,kBALJ,SAQG3J,EAAE,2C,UCmFFmV,OAjMf,YAAgD,IAAtB1U,EAAqB,EAArBA,SAAU4Q,EAAW,EAAXA,QAClC,EAAgCxR,mBAAS,IAAzC,mBAAOoU,EAAP,KAAiBC,EAAjB,KACA,EAA8CrU,mBAAS,IAAvD,mBAAOuV,EAAP,KAAwBC,EAAxB,KACQrV,EAAMC,cAAND,EACFsH,EAAW4B,cAEXiL,EAAW1T,EAASsP,OAAStP,EAASsP,OAAOpD,MAAM,KAAK,GAAK,IAE7D2I,EAAexM,aAAY,SAACC,GAAD,OAAWA,EAAMuM,gBAC1CrG,EAAsCqG,EAAtCrG,MAAOC,EAA+BoG,EAA/BpG,QAAS7G,EAAsBiN,EAAtBjN,SAAU0J,EAAYuD,EAAZvD,QAElC,EAMIqC,eALFC,EADF,EACEA,SACaC,EAFf,EAEEC,UAAaD,OACbG,EAHF,EAGEA,MACAD,EAJF,EAIEA,aACAE,EALF,EAKEA,QAwCF,OArCAtF,qBAAU,WCvCV,wCD4CMH,EACFiF,EC3CJ,qGAEA,wCD0CajF,EACTiF,ECzCJ,+BAEA,wCDwCajF,GACTiF,ECxCgD,yBD0CjD,CAAC7C,EAAShJ,EAAU8L,EAAUlF,IAYjCG,qBAAU,WACR,IAAMuF,EAAUC,YAAW,WAEzBS,EAAmB,IACfpG,IACF3H,EAAS,CAAEzG,KAAMiD,IACjBoQ,EAAY,OAEb,KAEH,OAAO,kBAAMW,aAAaF,MACzB,CAACV,EAAUmB,EAAiBrD,EAAS9C,IAGtC,qBAAKtO,UAAU,yBAAf,SACIoR,EA4HA,qBAAKpR,UAAU,QAAf,SACE,oHA5HF,eAAC,GAAD,WACGyU,GACC,cAAC,GAAD,CAAShU,QAAQ,SAAjB,SAA2BpB,EAAEoV,KAE9BnB,GAAY,cAAC,GAAD,CAAS7S,QAAQ,SAAjB,SAA2B6S,IACvC/E,GAAW,cAAC,GAAD,IACZ,6BAAKlP,EAAE,0BACP,eAACI,EAAA,EAAD,CAAMC,SAAUmU,GAjCP,SAACzM,GtB0IQ,IAACjH,EAAMuG,EAAOyN,EsBzItCS,YAASC,SAAS,SAAU,CAAEC,QAAQ,EAAMC,QAAS,IAAKC,SAAU,KAChE5N,EAAK+M,UAAY/M,EAAK6N,gBACxBP,EAAmB,0BAEnB/N,GtBqIuBxG,EsBrIDiH,EAAKjH,KtBqIEuG,EsBrIIU,EAAKV,MtBqIFyN,EsBrIS/M,EAAK+M,StBqI5B,uCAA2B,WAAOxN,GAAP,mBAAAC,EAAA,sEAEnDD,EAAS,CACPzG,KAAM8C,IAGF6D,EAAS,CACbC,QAAS,CACP,eAAgB,qBAR+B,SAmB5BI,IAAMC,KAE3B,eACA,CACEkC,SAAUlJ,EACVuG,MAAOA,EACPyN,SAAUA,EACVe,YAAaf,GAEftN,GA5BiD,gBAmB3CO,EAnB2C,EAmB3CA,KAYRT,EAAS,CACPzG,KAAM+C,EACN6E,QAASV,IAGXT,EAAS,CACPzG,KAAM2C,EACNiF,QAASV,IAGXkC,aAAaiJ,QAAQ,WAAYvL,KAAKC,UAAUG,IAzCG,kDA2CnDT,EAAS,CACPzG,KAAMgD,EACN4E,QACE,KAAMC,UAAY,KAAMA,SAASX,KAAKY,OAClC,KAAMD,SAASX,KAAKY,OACpB,KAAMC,UAhDqC,0DAA3B,wDsBpItB6L,QA2BI,UACE,eAACrU,EAAA,EAAKoS,MAAN,CAAYC,UAAU,OAAtB,UACE,cAACrS,EAAA,EAAKsS,MAAN,UAAa1S,EAAE,8BACf,cAACI,EAAA,EAAKQ,QAAN,2BACEC,KAAK,OACLE,YAAaf,EAAE,yCACXqU,EAAS,OAAQ,CACnBU,SAAU/U,EAAE,0CACZkV,UAAW,CACThU,MAAO,EACP0H,QAAS5I,EAAE,4CAEbgV,QAAS,CACP9T,MAAO,aACP0H,QAAS5I,EAAE,kDAXjB,IAcEiV,QAAS,WACPP,EAAQ,SAEV5T,KAAK,UAENwT,EAAOxT,MACN,qBAAKH,UAAU,iBAAf,SAAiC2T,EAAOxT,KAAK8H,aAIjD,eAACxI,EAAA,EAAKoS,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACrS,EAAA,EAAKsS,MAAN,oBACA,cAACtS,EAAA,EAAKQ,QAAN,2BACEC,KAAK,OACLE,YAAaf,EAAE,0CACXqU,EAAS,QAAS,CACpBU,SAAU/U,EAAE,2CACZgV,QAAS,CACP9T,MAAO,2CACP0H,QAAS5I,EAAE,6CAPjB,IAUEiV,QAAS,WACPP,EAAQ,UAEV5T,KAAK,WAENwT,EAAOjN,OACN,qBAAK1G,UAAU,iBAAf,SAAiC2T,EAAOjN,MAAMuB,aAIlD,eAACxI,EAAA,EAAKoS,MAAN,CAAYC,UAAU,WAAtB,UACE,cAACrS,EAAA,EAAKsS,MAAN,UAAa1S,EAAE,kCACf,cAACI,EAAA,EAAKQ,QAAN,2BACEC,KAAK,WACLE,YAAaf,EAAE,6CACXqU,EAAS,WAAY,CACvBU,SAAU/U,EAAE,8CACZkV,UAAW,CACThU,MAAO,EACP0H,QAAS5I,EAAE,mDAPjB,IAUEiV,QAAS,WACPP,EAAQ,aAEV5T,KAAK,cAENwT,EAAOQ,UACN,qBAAKnU,UAAU,iBAAf,SAAiC2T,EAAOQ,SAASlM,aAIrD,eAACxI,EAAA,EAAKoS,MAAN,CAAYC,UAAU,kBAAtB,UACE,cAACrS,EAAA,EAAKsS,MAAN,UACG1S,EAAE,0CAEL,cAACI,EAAA,EAAKQ,QAAN,2BACEC,KAAK,WACLE,YAAaf,EAAE,6CACXqU,EAAS,kBAAmB,CAC9BU,SAAU/U,EAAE,8CACZkV,UAAW,CACThU,MAAO,EACP0H,QAAS5I,EAAE,mDAPjB,IAUEiV,QAAS,WACPP,EAAQ,oBAEV5T,KAAK,qBAENwT,EAAOsB,iBACN,qBAAKjV,UAAU,iBAAf,SACG2T,EAAOsB,gBAAgBhN,aAK9B,cAACzH,EAAA,EAAD,CACEN,KAAK,SACLO,QAAQ,UACRT,UAAU,kCAHZ,SAKGX,EAAE,oCAIP,cAACsK,GAAA,EAAD,CAAK3J,UAAU,OAAf,SACE,eAAC4J,GAAA,EAAD,WACGvK,EAAE,kCAAmC,IACtC,cAAC,QAAD,CAAM2J,GAAIwK,EAAQ,0BAAsBA,GAAa,SAArD,SACGnU,EAAE,uCE8CJ8V,OAvOf,YAAmC,IAAXzE,EAAU,EAAVA,QAEpB,EAAwBxR,mBAAS,IAAjC,mBACA,GADA,UAC0BA,mBAAS,KAAnC,mBACA,GADA,UACgCA,mBAAS,KAAzC,mBACA,GADA,UAC8CA,mBAAS,KAAvD,mBACA,GADA,UAC8CA,mBAAS,KAAvD,mBAAOuV,EAAP,KAAwBC,EAAxB,KACA,EAA8CxV,oBAAS,GAAvD,mBAAOkW,EAAP,KAAwBC,EAAxB,KAEM1O,EAAW4B,cACTlJ,EAAMC,cAAND,EACFiW,EAAcnN,aAAY,SAAAC,GAAK,OAAIA,EAAMkN,eACjC/G,GAAiB+G,EAAxBhH,MAAwBgH,EAAjB/G,SAASgH,EAAQD,EAARC,KAGf7N,EADUS,aAAY,SAAAC,GAAK,OAAIA,EAAMT,aACrCD,SAEF8N,EAAoBrN,aAAY,SAAAC,GAAK,OAAIA,EAAMoN,qBAC7CpE,EAA0CoE,EAA1CpE,QAAeqE,EAA2BD,EAAjClH,MAEXoH,EAAcvN,aAAY,SAAAC,GAAK,OAAIA,EAAMsN,eAQ/C,GAP8DA,EAAtDnH,QAAsDmH,EAA9BpH,MAA8BoH,EAAXC,OAa/ClC,aAAS,CAACmC,cAXU,CACpBzV,KAAO,OACPuG,MAAQ,YAIRgN,EADJ,EACIA,SACaC,EAFjB,EAEIC,UAAaD,OACbG,EAHJ,EAGIA,MACAD,EAJJ,EAIIA,aACAE,EALJ,EAKIA,QA6CJ,OA1CAtF,qBAAU,WACF/G,EAGI6N,GAASA,EAAKpV,OAAQiR,GAAW1J,EAAS8C,MAAQ+K,EAAK/K,IAKvDsJ,EAAM,CAAC3T,KAAKoV,EAAKpV,KAAMuG,MAAM6O,EAAK7O,SAJlCC,EAAS,CAACzG,KAAK4D,IACf6C,EAASY,GAAe,YACxBZ,ECiGY,uCAAM,WAAOA,EAAUc,GAAjB,uBAAAb,EAAA,sEAE1BD,EAAS,CACLzG,KAAM4F,KAHgB,EAQtB2B,IADaC,EAPS,EAOtBC,UAAaD,SAGXb,EAAS,CACXC,QAAQ,CACJ,eAAgB,mBAChBc,cAAc,UAAD,OAAYF,EAASG,SAbhB,SAiBLX,IAAMtF,IAAN,wBAEjBiF,GAnBsB,gBAiBnBO,EAjBmB,EAiBnBA,KAKPT,EAAS,CACLzG,KAAM6F,GACN+B,QAASV,IAxBa,kDA4B1BT,EAAS,CACLzG,KAAM8F,GACN8B,QAAS,KAAMC,UAAY,KAAMA,SAASX,KAAKY,OAC7C,KAAMD,SAASX,KAAKY,OACpB,KAAMC,UAhCc,0DAAN,0DDtGhByI,EAAQ7Q,KAAK,YAUlB,CAAC8G,EAAUmN,EAAOpD,EAAShJ,EAAU6N,EAAMnE,IAqB9C3C,qBAAU,WACN,IAAMuF,EAAUC,YAAW,WACvBS,EAAmB,IACnBW,GAAmB,KACpB,KAEH,OAAO,kBAAMnB,aAAaF,MAC3B,CAACS,EAAiBW,IAGjB,qBAAKpV,UAAU,yBAAf,SACI,eAAC,GAAD,WACI,oBAAIA,UAAU,YAAd,SAA2BX,EAAE,qCAC5BoV,GAAmB,cAAC,GAAD,CAAShU,QAAQ,SAAjB,SAA2BpB,EAAEoV,KAEhDW,GAAmB,cAAC,GAAD,CAAS3U,QAAQ,SAAjB,SAA2BpB,EAAEoW,KAChDlH,GAAW,cAAC,GAAD,IAEZ,eAAC9O,EAAA,EAAD,CAAMC,SAAUmU,GArCN,SAACzM,GAChBA,EAAK+M,UAAY/M,EAAK6N,iBACrBP,EAAmB,yBACnBZ,EAAM,CAACK,SAAS,GAAIc,gBAAgB,OAGpCtO,ExB+SqB,SAAC4O,GAAD,8CAAU,WAAO5O,EAAUc,GAAjB,uBAAAb,EAAA,sEAEvCD,EAAS,CACPzG,KAAMyD,IAH+B,EAQnC8D,IADWC,EAPwB,EAOrCC,UAAaD,SAGTb,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBc,cAAc,UAAD,OAAYF,EAASG,SAbC,SAiBhBX,IAAM2O,IAAN,6BAErBN,EACA1O,GApBqC,gBAiB/BO,EAjB+B,EAiB/BA,KAMRT,EAAS,CACPzG,KAAM0D,EACNkE,QAASV,IAGXT,EAAS,CACPzG,KAAM2C,EACNiF,QAASV,IAGXkC,aAAaiJ,QAAQ,WAAYvL,KAAKC,UAAUG,IAjCT,kDAmCvCT,EAAS,CACPzG,KAAM2D,EACNiE,QACE,KAAMC,UAAY,KAAMA,SAASX,KAAKY,OAClC,KAAMD,SAASX,KAAKY,OACpB,KAAMC,UAxCyB,0DAAV,wDwB/SZ6N,CAAkB,CACvB,GAAKP,EAAK/K,IACV,KAAOpD,EAAKjH,KACZ,MAASiH,EAAKV,MACd,SAAYU,EAAK+M,YAErBzD,EAAQ7Q,KAAK,KACb6U,EAAmB,IACnBW,GAAmB,GACnBvB,EAAM,CAACK,SAAS,GAAIc,gBAAgB,SAsBhC,UAEI,eAACxV,EAAA,EAAKoS,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACrS,EAAA,EAAKsS,MAAN,UAAa1S,EAAE,oCACf,cAACI,EAAA,EAAKQ,QAAN,2BACIC,KAAK,OACLE,YAAef,EAAE,+CAEbqU,EAAS,OACT,CACIU,SAAU/U,EAAE,yCACZgV,QAAS,CACL9T,MAAO,aACP0H,QAAS5I,EAAE,8CAEfkV,UAAW,CACPhU,MAAO,EACP0H,QAAS5I,EAAE,8CAb3B,IAiBIiV,QAAS,WAAOP,EAAQ,SACxB5T,KAAO,UAGVwT,EAAOxT,MAAS,qBAAKH,UAAU,iBAAf,SAAiC2T,EAAOxT,KAAK8H,aAGlE,eAACxI,EAAA,EAAKoS,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACrS,EAAA,EAAKsS,MAAN,oBACI,cAACtS,EAAA,EAAKQ,QAAN,2BACIC,KAAK,OACLE,YAAef,EAAE,gDAEbqU,EAAS,QAAS,CAACU,SAAU/U,EAAE,0CAC/BgV,QAAS,CACT9T,MAAO,2CACP0H,QAAS5I,EAAE,4CAPnB,IAWIiV,QAAS,WAAOP,EAAQ,UACxB5T,KAAO,WAGVwT,EAAOjN,OAAU,qBAAK1G,UAAU,iBAAf,SAAiC2T,EAAOjN,MAAMuB,aAGxE,eAACxI,EAAA,EAAKoS,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACrS,EAAA,EAAKsS,MAAN,UAAa1S,EAAE,wCACf,cAACI,EAAA,EAAKQ,QAAN,2BACIC,KAAK,WACLE,YAAef,EAAE,mDACbqU,EAAS,WACT,CACIU,SAAU/U,EAAE,6CACZkV,UAAW,CACPhU,MAAO,EACP0H,QAAS5I,EAAE,kDAR3B,IAYIiV,QAAS,WAAOP,EAAQ,aACxB5T,KAAO,cAGVwT,EAAOQ,UAAa,qBAAKnU,UAAU,iBAAf,SAAiC2T,EAAOQ,SAASlM,aAG1E,eAACxI,EAAA,EAAKoS,MAAN,CAAYC,UAAU,kBAAtB,UACI,cAACrS,EAAA,EAAKsS,MAAN,UAAa1S,EAAE,gDACf,cAACI,EAAA,EAAKQ,QAAN,2BACIC,KAAK,WACLE,YAAef,EAAE,2DACbqU,EAAS,kBACT,CACIU,SAAU/U,EAAE,6CACZkV,UAAW,CACPhU,MAAO,EACP0H,QAAS5I,EAAE,kDAR3B,IAYIiV,QAAS,WAAOP,EAAQ,oBACxB5T,KAAO,qBAGVwT,EAAOsB,iBAAoB,qBAAKjV,UAAU,iBAAf,SAAiC2T,EAAOsB,gBAAgBhN,aAGxF,cAACzH,EAAA,EAAD,CAAQN,KAAK,SAASO,QAAQ,UAAUT,UAAU,kCAAlD,SACKX,EAAE,uCEpIZ0W,OAtDf,YAAsD,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,MAEjC9W,EAAMC,cAAND,EAER,OACI,eAAC6C,EAAA,EAAD,CAAKlC,UAAU,8BAAf,UACI,cAACkC,EAAA,EAAII,KAAL,UACK0T,EACG,cAAC,gBAAD,CAAehN,GAAG,SAAlB,SACI,cAAC9G,EAAA,EAAIkH,KAAL,CAAUpJ,UAAU,YAApB,SAAiCX,EAAE,2BAGvC,cAAC6C,EAAA,EAAIkH,KAAL,CAAUpJ,UAAU,YAAY2C,UAAQ,EAAxC,SAA0CtD,EAAE,2BAKpD,cAAC6C,EAAA,EAAII,KAAL,UACK2T,EACG,cAAC,gBAAD,CAAejN,GAAG,YAAlB,SACI,cAAC9G,EAAA,EAAIkH,KAAL,CAAUpJ,UAAU,YAApB,SAAiCX,EAAE,8BAGvC,cAAC6C,EAAA,EAAIkH,KAAL,CAAUpJ,UAAU,YAAY2C,UAAQ,EAAxC,SAA0CtD,EAAE,8BAKpD,cAAC6C,EAAA,EAAII,KAAL,UACK4T,EACG,cAAC,gBAAD,CAAelN,GAAG,WAAlB,SACI,cAAC9G,EAAA,EAAIkH,KAAL,CAAUpJ,UAAU,YAApB,SAAiCX,EAAE,8BAGvC,cAAC6C,EAAA,EAAIkH,KAAL,CAAUpJ,UAAU,YAAY2C,UAAQ,EAAxC,SAA0CtD,EAAE,8BAKpD,cAAC6C,EAAA,EAAII,KAAL,UACK6T,EACG,cAAC,gBAAD,CAAenN,GAAG,cAAlB,SACI,cAAC9G,EAAA,EAAIkH,KAAL,CAAUpJ,UAAU,YAApB,SAAiCX,EAAE,iCAGvC,cAAC6C,EAAA,EAAIkH,KAAL,CAAUpJ,UAAU,YAAY2C,UAAQ,EAAxC,SAA0CtD,EAAE,qCC6CjD+W,OAvFf,YAAoC,IAAX1F,EAAU,EAAVA,QAGd2F,EADMlO,aAAY,SAAAC,GAAK,OAAIA,EAAMoK,QACjC6D,gBACChX,EAAMC,cAAND,EAEFsH,EAAW4B,cAEjB,EAA8BrJ,mBAASmX,EAAgBC,SAAvD,mBAAOA,EAAP,KAAgBC,EAAhB,KACA,EAAwBrX,mBAASmX,EAAgBG,MAAjD,mBAAOA,EAAP,KAAaC,EAAb,KACA,EAAoCvX,mBAASmX,EAAgBK,YAA7D,mBAAOA,EAAP,KAAmBC,EAAnB,KACA,EAA8BzX,mBAASmX,EAAgB3U,SAAvD,mBAAOA,EAAP,KAAgBkV,EAAhB,KASA,OACI,qBAAK5W,UAAU,yBAAf,SACI,eAAC,GAAD,WACI,cAAC,GAAD,CAAegW,OAAK,EAACC,OAAK,IAC1B,oBAAIjW,UAAU,gBAAd,SAA+BX,EAAE,0BACjC,eAACI,EAAA,EAAD,CAAMC,SAZI,SAACC,GTgBQ,IAACyH,ESf5BzH,EAAEC,iBACF+G,GTc4BS,ESdC,CAACkP,UAASE,OAAME,aAAYhV,WTcpB,SAACiF,GAC1CA,EAAS,CACLzG,KAAKiS,GACLrK,QAASV,IAGbkC,aAAaiJ,QAAQ,kBAAmBvL,KAAKC,UAAUG,OSnBnDsJ,EAAQ7Q,KAAK,aASL,UACI,eAACJ,EAAA,EAAKoS,MAAN,CAAYC,UAAU,UAAU9R,UAAU,cAA1C,UACQ,cAACP,EAAA,EAAKsS,MAAN,CAAY/R,UAAU,YAAtB,SAAmCX,EAAE,gCACrC,cAACI,EAAA,EAAKQ,QAAN,CACImU,UAAQ,EACRlU,KAAK,OACLE,YAAa,gBACbJ,UAAU,kBACVO,MAAQ+V,GAAoB,GAC5BjW,SAAU,SAACV,GAAD,OAAO4W,EAAW5W,EAAEW,OAAOC,aAKjD,eAACd,EAAA,EAAKoS,MAAN,CAAYC,UAAU,OAAO9R,UAAU,cAAvC,UACQ,cAACP,EAAA,EAAKsS,MAAN,CAAY/R,UAAU,YAAtB,SAAmCX,EAAE,6BACrC,cAACI,EAAA,EAAKQ,QAAN,CACImU,UAAQ,EACRlU,KAAK,OACLE,YAAa,aACbJ,UAAU,kBACVO,MAAQiW,GAAc,GACtBnW,SAAU,SAACV,GAAD,OAAO8W,EAAQ9W,EAAEW,OAAOC,aAK9C,eAACd,EAAA,EAAKoS,MAAN,CAAYC,UAAU,aAAa9R,UAAU,cAA7C,UACQ,cAACP,EAAA,EAAKsS,MAAN,CAAY/R,UAAU,YAAtB,SAAmCX,EAAE,gCACrC,cAACI,EAAA,EAAKQ,QAAN,CACImU,UAAQ,EACRlU,KAAK,OACLE,YAAa,oBACbJ,UAAU,kBACVO,MAAQmW,GAA0B,GAClCrW,SAAU,SAACV,GAAD,OAAOgX,EAAchX,EAAEW,OAAOC,aAKpD,eAACd,EAAA,EAAKoS,MAAN,CAAYC,UAAU,UAAtB,UACQ,cAACrS,EAAA,EAAKsS,MAAN,CAAY/R,UAAU,YAAtB,SAAmCX,EAAE,4BACrC,cAACI,EAAA,EAAKQ,QAAN,CACImU,UAAQ,EACRlU,KAAK,OACLE,YAAa,oBACbJ,UAAU,kBACVO,MAAQmB,GAAoB,GAC5BrB,SAAU,SAACV,GAAD,OAAOiX,EAAWjX,EAAEW,OAAOC,aAKjD,cAACC,EAAA,EAAD,CAAQN,KAAK,SAASO,QAAQ,UAAUT,UAAU,wBAAlD,SACKX,EAAE,yCC7BZwX,OAlDf,YAAmC,IAAXnG,EAAU,EAAVA,QAGb2F,EADMlO,aAAY,SAAAC,GAAK,OAAIA,EAAMoK,QACjC6D,gBACChX,EAAMC,cAAND,EAEFsH,EAAW4B,cAEjB,EAA0CrJ,mBAAS,UAAnD,mBAAO4X,EAAP,KAYA,OAZA,KAEIT,EAAgBC,SAChB5F,EAAQ7Q,KAAK,aAUb,qBAAKG,UAAU,yBAAf,SACI,eAAC,GAAD,WACI,cAAC,GAAD,CAAegW,OAAK,EAACC,OAAK,EAACC,OAAK,IAEhC,eAACzW,EAAA,EAAD,CAAMC,SAXI,SAACC,GACnBA,EAAEC,iBACF+G,EAAS+L,GAAkBoE,IAC3BpG,EAAQ7Q,KAAK,gBAQL,UACI,eAACJ,EAAA,EAAKoS,MAAN,WACI,cAACpS,EAAA,EAAKsS,MAAN,CAAYjH,GAAG,SAAf,SAAyBzL,EAAE,yBAC3B,cAACuK,GAAA,EAAD,UACI,cAACnK,EAAA,EAAKsX,MAAN,CACIC,MAAM,wBACNxP,GAAG,SACHrH,KAAK,gBACL8W,SAAO,EACP5W,SAAY,SAACV,GAAD,OAAO+S,GAAkB/S,EAAEW,OAAOC,eAO1D,cAACC,EAAA,EAAD,CAAQN,KAAK,SAASO,QAAQ,UAAUT,UAAU,wBAAlD,SACKX,EAAE,wCC+GZ6X,OAvJf,YAAsC,IAAXxG,EAAU,EAAVA,QAEjByG,EAAchP,aAAY,SAAAC,GAAK,OAAIA,EAAM+O,eACvCC,EAAyBD,EAAzBC,MAAO9I,EAAkB6I,EAAlB7I,MAAO8C,EAAW+F,EAAX/F,QACd/R,EAAMC,cAAND,EAEFsH,EAAW4B,cACXiK,EAAOrK,aAAY,SAAAC,GAAK,OAAIA,EAAMoK,QA+BxC,OA7BAA,EAAK6E,WAAa7E,EAAKC,UAAUO,QAAO,SAACC,EAAKH,GAAN,OAAeG,EAAMH,EAAK5H,MAAQ4H,EAAKnC,MAAK,GAAGuC,QAAQ,GAC/FV,EAAK8E,eAAiB9E,EAAK6E,WAAY,KAA0B,GAAnB7E,EAAK6E,WAAkB,EAAG,IAAInE,QAAQ,GACpFV,EAAK+E,SAAWjH,OAAQ,IAAQkC,EAAK6E,YAAYnE,QAAQ,GACzDV,EAAKgF,YAAclH,OAAOkC,EAAK6E,YAAc/G,OAAOkC,EAAK8E,eAAiBhH,OAAOkC,EAAK+E,WAAWrE,QAAQ,GAErGV,EAAKsE,eACLpG,EAAQ7Q,KAAK,YAGjB4O,qBAAU,WACH2C,IACCV,EAAQ7Q,KAAR,iBAAuBuX,EAAM5M,MAC7B7D,EAAS,CAACzG,KAAMoF,QAGtB,CAAC8L,EAASV,IAeR,gCACI,cAAC,GAAD,CAAesF,OAAK,EAACC,OAAK,EAACC,OAAK,EAACC,OAAK,IACtC,eAACxM,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAK0F,GAAI,EAAT,SACI,eAACgC,GAAA,EAAD,CAAW7Q,QAAQ,QAAnB,UACI,eAAC6Q,GAAA,EAAUhP,KAAX,WACI,6BAAKjD,EAAE,qCACP,8BACI,mCAASA,EAAE,6BAAX,QACCmT,EAAK6D,gBAAgBC,QAF1B,KAEqC9D,EAAK6D,gBAAgBG,KACrD,KACAhE,EAAK6D,gBAAgBK,WAJ1B,IAKK,KACAlE,EAAK6D,gBAAgB3U,cAI9B,eAAC4P,GAAA,EAAUhP,KAAX,WACI,6BAAKjD,EAAE,2CACP,8BACI,mCAASA,EAAE,mCAAX,QACCmT,EAAKsE,oBAId,eAACxF,GAAA,EAAUhP,KAAX,WACI,6BAAKjD,EAAE,yCACoB,IAA1BmT,EAAKC,UAAUlC,OAAe,cAAC,GAAD,CAAS9P,QAAQ,OAAjB,SAC1BpB,EAAE,iCAEH,cAACiS,GAAA,EAAD,CAAW7Q,QAAQ,QAAnB,SACK+R,EAAKC,UAAUpQ,KAAI,SAACyQ,EAAMlE,GAAP,OAChB,cAAC0C,GAAA,EAAUhP,KAAX,UACI,eAACqH,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAK0F,GAAI,EAAT,SACI,cAACT,GAAA,EAAD,CAAOnE,IAAKoI,EAAKnI,MAAOmE,IAAKgE,EAAK3S,KAAM4O,OAAK,EAACgE,SAAO,MAEzD,cAACnJ,GAAA,EAAD,UACI,cAAC,QAAD,CAAMZ,GAAE,mBAAc8J,EAAK5I,SAA3B,SAAuC4I,EAAK3S,SAEhD,eAACyJ,GAAA,EAAD,CAAK0F,GAAI,EAAT,UACKwD,EAAKnC,IADV,OACmBmC,EAAK5H,MADxB,QACoC4H,EAAKnC,IAAMmC,EAAK5H,OAAOgI,QAAQ,UATtDtE,gBAoB7C,eAAChF,GAAA,EAAD,CAAK0F,GAAI,EAAT,UACI,cAACjF,GAAA,EAAD,UACI,eAACiH,GAAA,EAAD,CAAW7Q,QAAQ,QAAnB,UACI,cAAC6Q,GAAA,EAAUhP,KAAX,UACI,6BAAKjD,EAAE,kDAGX,cAACiS,GAAA,EAAUhP,KAAX,UACI,eAACqH,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,WAAMvK,EAAE,gCAAR,OACA,eAACuK,GAAA,EAAD,eAAO4I,EAAK6E,mBAIpB,cAAC/F,GAAA,EAAUhP,KAAX,UACI,eAACqH,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,WAAMvK,EAAE,mCAAR,OACA,eAACuK,GAAA,EAAD,eAAO4I,EAAK8E,sBAIpB,cAAChG,GAAA,EAAUhP,KAAX,UACI,eAACqH,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,WAAMvK,EAAE,8BAAR,OACA,eAACuK,GAAA,EAAD,eAAO4I,EAAK+E,iBAIpB,cAACjG,GAAA,EAAUhP,KAAX,UACI,eAACqH,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,WAAMvK,EAAE,gCAAR,OACA,eAACuK,GAAA,EAAD,eAAO4I,EAAKgF,mBAIpB,cAAClG,GAAA,EAAUhP,KAAX,UACA,qBAAKtC,UAAU,eAAf,SACI,cAACQ,EAAA,EAAD,CACIN,KAAK,SACLF,UAAU,6BACV2C,SAA6B,IAAnB6P,EAAKC,UACflQ,QA1Gb,WACfoE,EJPmB,SAACyQ,GAAD,8CAAW,WAAOzQ,EAAUc,GAAjB,uBAAAb,EAAA,sEAE9BD,EAAS,CACLzG,KAAMiF,KAHoB,EAQ1BsC,IADaC,EAPa,EAO1BC,UAAaD,SAGXb,EAAS,CACXC,QAAQ,CACJ,eAAgB,mBAChBc,cAAc,UAAD,OAAYF,EAASG,SAbZ,SAiBTX,IAAMC,KAAN,mBAEjBiQ,EACAvQ,GApB0B,gBAiBvBO,EAjBuB,EAiBvBA,KAMPT,EAAS,CACLzG,KAAMkF,GACN0C,QAASV,IAGbT,EAAS,CACLzG,KAAMmS,GACNvK,QAASV,IAGbkC,aAAaC,WAAW,aAjCM,kDAoC9B5C,EAAS,CACLzG,KAAMmF,GACNyC,QAAS,KAAMC,UAAY,KAAMA,SAASX,KAAKY,OAC7C,KAAMD,SAASX,KAAKY,OACpB,KAAMC,UAxCkB,0DAAX,wDIOVwP,CAAY,CACjBC,WAAYlF,EAAKC,UACjB4D,gBAAiB7D,EAAK6D,gBACtBS,cAAetE,EAAKsE,cACpBO,WAAY7E,EAAK6E,WACjBC,cAAe9E,EAAK8E,cACpBC,SAAU/E,EAAK+E,SACfC,WAAYhF,EAAKgF,eA8FG,kCAcZ,cAAClG,GAAA,EAAUhP,KAAX,CAAiBtC,UAAU,WAA3B,SACKsO,GAAS,cAAC,GAAD,CAAS7N,QAAQ,SAAjB,SAA2B6N,gB,UC8D9CqJ,OA5Mf,YAAgC,IACtBC,EADqB,EAARnH,MACGY,OAAO7J,GACvBb,EAAW4B,cACTlJ,EAAMC,cAAND,EAER,EAAgCH,oBAAS,GAAzC,mBAAO2Y,EAAP,KAAiBC,EAAjB,KAEMC,EAAe5P,aAAY,SAAAC,GAAK,OAAIA,EAAM2P,gBACxCX,EAAyBW,EAAzBX,MAAO9I,EAAkByJ,EAAlBzJ,MAAOC,EAAWwJ,EAAXxJ,QAEhByJ,EAAW7P,aAAY,SAAAC,GAAK,OAAIA,EAAM4P,YAC5BC,EAAmCD,EAA3CzJ,QAA4B2J,EAAeF,EAAvB5G,QAEtB+G,EAAehQ,aAAY,SAAAC,GAAK,OAAIA,EAAM+P,gBACRC,GAAmBD,EAAnD5J,QAAmD4J,EAA3B/G,SAGxB1J,EADUS,aAAY,SAAAC,GAAK,OAAIA,EAAMT,aACrCD,SA0CR,OAxCI6G,GAAYD,IACZ8I,EAAMC,WAAaD,EAAMM,WAAW1E,QAAO,SAACC,EAAKH,GAAN,OAAeG,EAAMH,EAAK5H,MAAQ4H,EAAKnC,MAAK,GAAGuC,QAAQ,IAetGzE,qBAAU,WL8BiB,IAACjH,GK7BpB4P,GAASc,GAAcd,EAAM5M,MAAQ8F,OAAOsH,IAAYQ,GACxDzR,EAAS,CAACzG,KAAM2F,KAChBc,EAAS,CAACzG,KAAMsG,KAChBG,GL0BoBa,EK1BKoQ,EL0BN,uCAAQ,WAAOjR,EAAUc,GAAjB,uBAAAb,EAAA,sEAE/BD,EAAS,CACLzG,KAAMqF,KAHqB,EAQ3BkC,IADaC,EAPc,EAO3BC,UAAaD,SAGXb,EAAS,CACXC,QAAQ,CACJ,eAAgB,mBAChBc,cAAc,UAAD,OAAYF,EAASG,SAbX,SAiBVX,IAAMtF,IAAN,sBACF4F,EADE,KAEjBX,GAnB2B,gBAiBxBO,EAjBwB,EAiBxBA,KAKPT,EAAS,CACLzG,KAAMsF,GACNsC,QAASV,IAxBkB,kDA4B/BT,EAAS,CACLzG,KAAMuF,GACNqC,QAAS,KAAMC,UAAY,KAAMA,SAASX,KAAKY,OAC7C,KAAMD,SAASX,KAAKY,OACpB,KAAMC,UAhCmB,0DAAR,2DKxBbmP,EAAMiB,SACR7P,OAAO8P,OAGPR,GAAY,GArBA,WACpB,IAAMS,EAASC,SAASC,cAAc,UACtCF,EAAOrY,KAAM,kBACbqY,EAAO7N,IAAM,2HACb6N,EAAOG,OAAQ,EACfH,EAAOI,OAAS,WACZb,GAAY,IAEhBU,SAASzR,KAAK6R,YAAYL,GAWlBM,MAMV,CAAClS,EAAUyQ,EAAOQ,EAASM,EAAYE,IAUjC7J,EACJ,qBAAKvO,UAAU,yBAAf,SACI,cAAC,GAAD,MAEJsO,EACA,qBAAKtO,UAAU,yBAAf,SACI,cAAC,GAAD,CAASS,QAAQ,SAAjB,SAA4B6N,MAGhC,qBAAKtO,UAAU,yBAAf,SACI,eAAC2J,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAK0F,GAAI,EAAT,SACI,eAACgC,GAAA,EAAD,CAAW7Q,QAAQ,QAAnB,UACI,eAAC6Q,GAAA,EAAUhP,KAAX,WACI,6BAAKjD,EAAE,gCACP,8BAAG,mCAASA,EAAE,6BAAX,QAAoD+X,EAAM7B,KAAKpV,QAClE,8BAAG,6CAAwB,mBAAG2Y,KAAI,iBAAY1B,EAAM7B,KAAK7O,OAA9B,SAAwC0Q,EAAM7B,KAAK7O,WAC9E,8BACI,mCAASrH,EAAE,iCAAX,QACC+X,EAAMf,gBAAgBC,QAF3B,KAEsCc,EAAMf,gBAAgBG,KACvD,KACAY,EAAMf,gBAAgBK,WAJ3B,IAKK,KACAU,EAAMf,gBAAgB3U,WAG1B0V,EAAM2B,YACH,eAAC,GAAD,CAAStY,QAAQ,UAAjB,UAA4BpB,EAAE,oCAA9B,IAAoE+X,EAAM4B,eAE1E,eAAC,GAAD,CAASvY,QAAQ,UAAjB,UAA4BpB,EAAE,qCAA9B,IAAqE+X,EAAM6B,YAInF,eAAC3H,GAAA,EAAUhP,KAAX,WACI,6BAAKjD,EAAE,sCACP,8BACI,mCAASA,EAAE,8BAAX,QACC+X,EAAMN,iBAEVM,EAAMiB,OACH,eAAC,GAAD,CAAS5X,QAAQ,UAAjB,UAA4BpB,EAAE,+BAA9B,IAA+D+X,EAAM6B,SAErE,eAAC,GAAD,CAASxY,QAAQ,UAAjB,UAA4BpB,EAAE,gCAAiC+X,EAAM6B,YAI7E,eAAC3H,GAAA,EAAUhP,KAAX,WACI,6BAAKjD,EAAE,mCACsB,IAA5B+X,EAAMM,WAAWnH,OAAe,cAAC,GAAD,CAAS9P,QAAQ,OAAjB,4BAG7B,cAAC6Q,GAAA,EAAD,CAAW7Q,QAAQ,QAAnB,SACK2W,EAAMM,WAAWrV,KAAI,SAACyQ,EAAMlE,GAAP,OAClB,cAAC0C,GAAA,EAAUhP,KAAX,UACI,eAACqH,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAK0F,GAAI,EAAT,SACI,cAACT,GAAA,EAAD,CAAOnE,IAAKoI,EAAKnI,MAAOmE,IAAKgE,EAAK3S,KAAM4O,OAAK,EAACgE,SAAO,MAEzD,cAACnJ,GAAA,EAAD,UACI,cAAC,QAAD,CAAMZ,GAAE,mBAAc8J,EAAK5I,SAA3B,SAAuC4I,EAAK3S,SAEhD,eAACyJ,GAAA,EAAD,CAAK0F,GAAI,EAAT,UACKwD,EAAKnC,IADV,OACmBmC,EAAK5H,MADxB,QACoC4H,EAAKnC,IAAMmC,EAAK5H,OAAOgI,QAAQ,UATtDtE,gBAoB7C,cAAChF,GAAA,EAAD,CAAK0F,GAAI,EAAT,SACI,eAACjF,GAAA,EAAD,WACI,eAACiH,GAAA,EAAD,CAAW7Q,QAAQ,QAAnB,UACI,cAAC6Q,GAAA,EAAUhP,KAAX,UACI,6BAAKjD,EAAE,6CAGX,cAACiS,GAAA,EAAUhP,KAAX,UACI,eAACqH,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,WAAMvK,EAAE,2BAAR,OACA,eAACuK,GAAA,EAAD,eAAOwN,EAAMC,mBAIrB,cAAC/F,GAAA,EAAUhP,KAAX,UACI,eAACqH,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,WAAMvK,EAAE,8BAAR,OACA,eAACuK,GAAA,EAAD,eAAOwN,EAAME,sBAIrB,cAAChG,GAAA,EAAUhP,KAAX,UACI,eAACqH,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,WAAMvK,EAAE,yBAAR,OACA,eAACuK,GAAA,EAAD,eAAOwN,EAAMG,iBAIrB,cAACjG,GAAA,EAAUhP,KAAX,UACI,eAACqH,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,WAAMvK,EAAE,2BAAR,OACA,eAACuK,GAAA,EAAD,eAAOwN,EAAMI,oBAInBJ,EAAMiB,QACJ,eAAC/G,GAAA,EAAUhP,KAAX,WACK2V,GAAc,cAAC,GAAD,IAEbJ,EAGE,cAAC,gBAAD,CACIqB,OAAQ9B,EAAMI,WACd2B,UA7HV,SAACC,GAC3BzS,ELmDgB,SAACa,EAAI4R,GAAL,8CAAuB,WAAOzS,EAAUc,GAAjB,uBAAAb,EAAA,sEAEvCD,EAAS,CACLzG,KAAMwF,KAH6B,EAQnC+B,IADaC,EAPsB,EAOnCC,UAAaD,SAGXb,EAAS,CACXC,QAAQ,CACJ,eAAgB,mBAChBc,cAAc,UAAD,OAAYF,EAASG,SAbH,SAiBlBX,IAAM2O,IAAN,sBACFrO,EADE,SAEjB4R,EACAvS,GApBmC,gBAiBhCO,EAjBgC,EAiBhCA,KAMPT,EAAS,CACLzG,KAAMyF,GACNmC,QAASV,IAzB0B,kDA6BvCT,EAAS,CACLzG,KAAM0F,GACNkC,QAAS,KAAMC,UAAY,KAAMA,SAASX,KAAKY,OAC7C,KAAMD,SAASX,KAAKY,OACpB,KAAMC,UAjC2B,0DAAvB,wDKnDPoR,CAASzB,EAASwB,OAwHI,cAAC,GAAD,UAcd1R,GAAYA,EAAS8B,SAAW4N,EAAMiB,SAAWjB,EAAM2B,aACpD,cAACzH,GAAA,EAAUhP,KAAX,UACI,cAAC9B,EAAA,EAAD,CACIN,KAAK,SACLF,UAAU,gBACVuC,QAxIT,WACnBoE,ELgKoB,SAACyQ,GAAD,8CAAW,WAAOzQ,EAAUc,GAAjB,uBAAAb,EAAA,sEAE/BD,EAAS,CACLzG,KAAMmG,KAHqB,EAQ3BoB,IADaC,EAPc,EAO3BC,UAAaD,SAGXb,EAAS,CACXC,QAAQ,CACJ,eAAgB,mBAChBc,cAAc,UAAD,OAAYF,EAASG,SAbX,SAiBVX,IAAM2O,IAAN,sBACFuB,EAAM5M,IADJ,aAEjB,GACA3D,GApB2B,gBAiBxBO,EAjBwB,EAiBxBA,KAMPT,EAAS,CACLzG,KAAMoG,GACNwB,QAASV,IAzBkB,kDA6B/BT,EAAS,CACLzG,KAAMqG,GACNuB,QAAS,KAAMC,UAAY,KAAMA,SAASX,KAAKY,OAC7C,KAAMD,SAASX,KAAKY,OACpB,KAAMC,UAjCmB,0DAAX,wDKhKXqR,CAAalC,KAoIE,0C,UCzGjBmC,OArFf,YAAsC,IAAZ7I,EAAW,EAAXA,QAEdrR,EAAMC,cAAND,EACFsH,EAAW4B,cAEXiR,EAAWrR,aAAY,SAAAC,GAAK,OAAIA,EAAMoR,YACrCjL,EAAyBiL,EAAzBjL,QAASD,EAAgBkL,EAAhBlL,MAAOmL,EAASD,EAATC,MAGf/R,EADUS,aAAY,SAAAC,GAAK,OAAIA,EAAMT,aACrCD,SAGQgS,EADGvR,aAAY,SAAAC,GAAK,OAAIA,EAAMuR,cACtCvI,QAER3C,qBAAU,WACH/G,GAAYA,EAAS8B,QACpB7C,E/BwYa,uCAAM,WAAOA,EAAUc,GAAjB,uBAAAb,EAAA,sEAE3BD,EAAS,CACPzG,KAAM6D,IAHmB,EAQvB0D,IADWC,EAPY,EAOzBC,UAAaD,SAGTb,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBc,cAAc,UAAD,OAAYF,EAASG,SAbX,SAiBJX,IAAMtF,IAAN,cAAyBiF,GAjBrB,gBAiBnBO,EAjBmB,EAiBnBA,KAERT,EAAS,CACPzG,KAAM8D,EACN8D,QAASV,IArBgB,kDAwB3BT,EAAS,CACPzG,KAAM+D,EACN6D,QACE,KAAMC,UAAY,KAAMA,SAASX,KAAKY,OAClC,KAAMD,SAASX,KAAKY,OACpB,KAAMC,UA7Ba,0DAAN,yD+BtYbyI,EAAQ7Q,KAAK,YAGlB,CAAC8G,EAAU+J,EAASgJ,EAAehS,IAGtC,IAAMkS,EAAgB,SAACpS,GAChBgB,OAAOqR,QAAQ,+CACdlT,E/Bgac,SAACa,GAAD,8CAAQ,WAAOb,EAAUc,GAAjB,uBAAAb,EAAA,sEAE9BD,EAAS,CACPzG,KAAMiE,KAHsB,EAQ1BsD,IADWC,EAPe,EAO5BC,UAAaD,SAGTb,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBc,cAAc,UAAD,OAAYF,EAASG,SAbR,SAiBPX,IAAM4S,OAAN,4BAAkCtS,EAAlC,KAAyCX,GAjBlC,gBAiBtBO,EAjBsB,EAiBtBA,KAERT,EAAS,CACPzG,KAAMkE,GACN0D,QAASV,IArBmB,kDAwB9BT,EAAS,CACPzG,KAAMmE,GACNyD,QACE,KAAMC,UAAY,KAAMA,SAASX,KAAKY,OAClC,KAAMD,SAASX,KAAKY,OACpB,KAAMC,UA7BgB,0DAAR,wD+BhaL8R,CAAWvS,KAM5B,OACI,sBAAKxH,UAAU,OAAf,UACI,8BACI,6BAAKX,EAAE,oCAEVkP,EACE,cAAC,GAAD,IACFD,EACM,cAAC,GAAD,CAAS7N,QAAQ,SAAjB,SAA2B6N,IAE1B,eAAC0L,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAACpa,UAAU,WAAnD,UACI,gCACI,+BACI,oCACA,6BAAKX,EAAE,+BACP,uCACA,uCACA,4BAIR,gCACKoa,EAAMpX,KAAI,SAAAkT,GAAI,OACX,+BACI,6BAAKA,EAAK/K,MACV,6BAAK+K,EAAKpV,OACV,6BAAKoV,EAAK7O,QACV,6BAAK6O,EAAK/L,QACN,mBAAGxJ,UAAY,eAAegK,MAAO,CAAED,MAAO,WAE9C,mBAAG/J,UAAY,eAAegK,MAAO,CAAED,MAAO,WAGlD,+BACI,cAAC,gBAAD,CAAef,GAAE,sBAAiBuM,EAAK/K,IAAtB,SAAjB,SACI,cAAChK,EAAA,EAAD,CAAQC,QAAQ,UAAUT,UAAU,SAApC,SACI,mBAAG4P,MAAM,0BAGb,cAACpP,EAAA,EAAD,CAAQC,QAAQ,SAAST,UAAU,SAASuC,QAAS,kBAAMqX,EAAcrE,EAAK/K,MAA9E,SACI,mBAAGoF,MAAM,wBAjBhB2F,EAAK/K,iBC4C/B6P,OAjGf,YAA4C,IAAlB5J,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,QAEvB4J,EAAS7J,EAAMY,OAAO7J,GACpBnI,EAAMC,cAAND,EAER,EAAwBH,mBAAS,IAAjC,mBAAOiB,EAAP,KAAaoa,EAAb,KACA,EAA0Brb,mBAAS,IAAnC,mBAAOwH,EAAP,KAAc8T,EAAd,KACA,EAA8Btb,oBAAS,GAAvC,mBAAO6M,EAAP,KAAgB0O,EAAhB,KAEM9T,EAAW4B,cAEX+M,EAAcnN,aAAY,SAAAC,GAAK,OAAIA,EAAMkN,eACxChH,EAAwBgH,EAAxBhH,MAAOC,EAAiB+G,EAAjB/G,QAASgH,EAAQD,EAARC,KAEjBmF,EAAavS,aAAY,SAAAC,GAAK,OAAIA,EAAMsS,cAC/BC,EAA+DD,EAAtEpM,MAA4BsM,EAA0CF,EAAlDnM,QAAgCsM,EAAkBH,EAA3BtJ,QAuBnD,OArBA3C,qBAAU,WAEHoM,GACClU,EAAS,CAACzG,KAAKuE,KACfiM,EAAQ7Q,KAAK,oBAET0V,EAAKpV,MAAQoV,EAAK/K,MAAQ8F,OAAOgK,IAGjCC,EAAQhF,EAAKpV,MACbqa,EAASjF,EAAK7O,OACd+T,EAAWlF,EAAK/L,UAJhB7C,EAASY,GAAe+S,MAQjC,CAAC/E,EAAM+E,EAAQO,EAAenK,IAO7B,sBAAK1Q,UAAU,yBAAf,UACI,cAAC,QAAD,CAAMgJ,GAAG,kBAAT,SACK3J,EAAE,gCAGP,eAAC,GAAD,WACI,6BAAKA,EAAE,8BACNub,GAAiB,cAAC,GAAD,IACjBD,GAAe,cAAC,GAAD,CAASla,QAAQ,SAAjB,SAA2Bka,IAC1CpM,EAAU,cAAC,GAAD,IAAYD,EAAQ,cAAC,GAAD,CAAS7N,QAAQ,SAAjB,SAA2B6N,IAEtD,eAAC7O,EAAA,EAAD,CAAMC,SAhBA,SAACC,GACnBA,EAAEC,iBACF+G,EhCsbkB,SAAC4O,GAAD,8CAAU,WAAO5O,EAAUc,GAAjB,uBAAAb,EAAA,sEAEhCD,EAAS,CACPzG,KAAMoE,KAHwB,EAQ5BmD,IADWC,EAPiB,EAO9BC,UAAaD,SAGTb,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBc,cAAc,UAAD,OAAYF,EAASG,SAbN,SAiBTX,IAAM2O,IAAN,4BACAN,EAAK/N,GADL,KAErB+N,EACA1O,GApB8B,gBAiBxBO,EAjBwB,EAiBxBA,KAMRT,EAAS,CACPzG,KAAMqE,KAGRoC,EAAS,CACPzG,KAAMsD,EACNsE,QAASV,IA7BqB,kDAgChCT,EAAS,CACPzG,KAAMsE,GACNsD,QACE,KAAMC,UAAY,KAAMA,SAASX,KAAKY,OAClC,KAAMD,SAASX,KAAKY,OACpB,KAAMC,UArCkB,0DAAV,wDgCtbT6S,CAAW,CAACtT,GAAG+N,EAAK/K,IAAKrK,OAAMuG,QAAOqF,cAcnC,UAEI,eAACtM,EAAA,EAAKoS,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACrS,EAAA,EAAKsS,MAAN,UAAa1S,EAAE,oCACf,cAACI,EAAA,EAAKQ,QAAN,CACIC,KAAK,OACLE,YAAa,aACbG,MAAQJ,EACRE,SAAU,SAACV,GAAD,OAAO4a,EAAQ5a,EAAEW,OAAOC,aAK1C,eAACd,EAAA,EAAKoS,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACrS,EAAA,EAAKsS,MAAN,4BACA,cAACtS,EAAA,EAAKQ,QAAN,CACIC,KAAK,QACLE,YAAa,cACbG,MAAQmG,EACRrG,SAAU,SAACV,GAAD,OAAO6a,EAAS7a,EAAEW,OAAOC,aAK3C,cAACd,EAAA,EAAKoS,MAAN,CAAYC,UAAU,UAAtB,SACI,cAACrS,EAAA,EAAKsX,MAAN,CACI7W,KAAK,WACL8W,MAAS3X,EAAE,mCACX4X,QAAUlL,EACV1L,SAAU,SAACV,GAAD,OAAO8a,EAAW9a,EAAEW,OAAO2W,cAK7C,cAACzW,EAAA,EAAD,CAAQN,KAAK,SAASO,QAAQ,UAAUT,UAAU,kCAAlD,SACKX,EAAE,yCC0BhB0b,OA/Gf,YAAyC,IAAZrK,EAAW,EAAXA,QAEnB/J,EAAW4B,cACTlJ,EAAMC,cAAND,EACF8P,EAAchH,aAAY,SAAAC,GAAK,OAAIA,EAAM+G,eACxCZ,EAAyCY,EAAzCZ,QAASD,EAAgCa,EAAhCb,MAAOE,EAAyBW,EAAzBX,SAAU3C,EAAesD,EAAftD,MAAOC,EAAQqD,EAARrD,KAElCkP,EAAgB7S,aAAY,SAAAC,GAAK,OAAIA,EAAM4S,iBAClCC,EAA2DD,EAAnEzM,QAA6B2M,EAAsCF,EAA5C1M,MAA2BoL,EAAiBsB,EAAzB5J,QAE3C+J,EAAgBhT,aAAY,SAAAC,GAAK,OAAIA,EAAM+S,iBAClCC,EAAmFD,EAA3F5M,QAA6B8M,EAA8DF,EAApE7M,MAA2BgN,EAAyCH,EAAjD/J,QAA+BmK,EAAkBJ,EAA1BjR,QAGhExC,EADUS,aAAY,SAAAC,GAAK,OAAIA,EAAMT,aACrCD,SAEJvI,EAAUuR,EAAQ5Q,SAASsP,OAC/BX,qBAAU,WACN9H,EAAS,CAACzG,KAAMiN,KAEZzF,EAAS8B,SACTkH,EAAQ7Q,KAAK,UAGdyb,EACC5K,EAAQ7Q,KAAR,yBAA+B0b,EAAe/Q,IAA9C,UAEA7D,EAASuH,GAAa/O,MAG3B,CAACwH,EAAU+J,EAAShJ,EAAUgS,EAAe4B,EAAeC,EAAgBpc,IAG/E,IAAMya,EAAgB,SAACpS,GAChBgB,OAAOqR,QAAQ,kDACdlT,EvB4CiB,SAACa,GAAD,8CAAQ,WAAOb,EAAUc,GAAjB,mBAAAb,EAAA,sEAEjCD,EAAS,CACPzG,KAAM2M,KAHyB,EAQ7BpF,IADWC,EAPkB,EAO/BC,UAAaD,SAGTb,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBc,cAAc,UAAD,OAAYF,EAASG,SAbL,SAiBVX,IAAM4S,OAAN,+BAAqCtS,EAArC,KAA4CX,GAjBlC,cAiBzBO,KAERT,EAAS,CACPzG,KAAM4M,KApByB,kDAuBjCnG,EAAS,CACPzG,KAAM6M,GACNjF,QACE,KAAMC,UAAY,KAAMA,SAASX,KAAKY,OAClC,KAAMD,SAASX,KAAKY,OACpB,KAAMC,UA5BmB,0DAAR,wDuB5CRuT,CAAchU,KAQ/B,OACI,sBAAKxH,UAAU,OAAf,UACI,eAAC2J,GAAA,EAAD,CAAK3J,UAAU,qBAAf,UACI,cAAC4J,GAAA,EAAD,UACI,6BAAKvK,EAAE,wCAGX,cAACuK,GAAA,EAAD,CAAK5J,UAAU,qBAAf,SACI,eAACQ,EAAA,EAAD,CAAQR,UAAU,6BAA6BuC,QAZlC,WACzBoE,EvBwEqB,uCAAM,WAAOA,EAAUc,GAAjB,uBAAAb,EAAA,sEAE/BD,EAAS,CACPzG,KAAM8M,KAHuB,EAQ3BvF,IADWC,EAPgB,EAO7BC,UAAaD,SAGTb,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBc,cAAc,UAAD,OAAYF,EAASG,SAbP,SAiBRX,IAAMC,KAAN,wBAAoC,GAAIN,GAjBhC,gBAiBvBO,EAjBuB,EAiBvBA,KAERT,EAAS,CACPzG,KAAM+M,GACNnF,QAASV,IArBoB,kDAwB/BT,EAAS,CACPzG,KAAMgN,GACNpF,QACE,KAAMC,UAAY,KAAMA,SAASX,KAAKY,OAClC,KAAMD,SAASX,KAAKY,OACpB,KAAMC,UA7BiB,0DAAN,0DuB7DT,UACI,mBAAGjI,UAAU,gBADjB,IACqCX,EAAE,gDAK9C4b,GAAiB,cAAC,GAAD,IACjBC,GAAe,cAAC,GAAD,CAASza,QAAQ,SAAjB,SAA2Bya,IAE1CE,GAAiB,cAAC,GAAD,IACjBC,GAAe,cAAC,GAAD,CAAS5a,QAAQ,SAAjB,SAA2B4a,IAE1C9M,EACE,cAAC,GAAD,IACFD,EACM,cAAC,GAAD,CAAS7N,QAAQ,SAAjB,SAA2B6N,IAE1B,gCACA,eAAC0L,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAACpa,UAAU,WAAnD,UACI,gCACI,+BACI,oCACA,6BAAKX,EAAE,kCACP,6BAAKA,EAAE,mCACP,6BAAKA,EAAE,sCACP,6BAAKA,EAAE,mCACP,4BAIR,gCACKmP,EAASnM,KAAI,SAAA6H,GAAO,OACjB,+BACI,6BAAKA,EAAQM,MACb,6BAAKN,EAAQ/J,OACb,mCAAM+J,EAAQgB,SACd,6BAAKhB,EAAQuR,WACb,6BAAKvR,EAAQwR,QAEb,+BACI,cAAC,gBAAD,CAAe1S,GAAE,yBAAoBkB,EAAQM,IAA5B,SAAjB,SACI,cAAChK,EAAA,EAAD,CAAQC,QAAQ,UAAUT,UAAU,SAApC,SACI,mBAAG4P,MAAM,0BAGb,cAACpP,EAAA,EAAD,CAAQC,QAAQ,SAAST,UAAU,SAASuC,QAAS,kBAAMqX,EAAc1P,EAAQM,MAAjF,SACI,mBAAGoF,MAAM,wBAdhB1F,EAAQM,aAqB7B,cAAC,GAAD,CAAUqB,MAAOA,EAAOC,KAAMA,EAAMC,SAAS,W,qBCmQlD4P,OAtWf,YAA+C,IAAlBlL,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,QAGhC,EAAsCkL,IAAM1c,UAAS,GAArD,mBAAO2c,EAAP,KAAoBC,EAApB,KAKM5M,EAAU3G,cACVuH,EAAYW,EAAMY,OAAO7J,GACvBnI,EAAMC,cAAND,EACR,EAAwBH,mBAAS,IAAjC,mBAAOiB,EAAP,KAAaoa,EAAb,KACA,EAA0Brb,mBAAS,GAAnC,mBAAOgM,EAAP,KAAc6Q,EAAd,KAEA,EAA0B7c,mBAAS,IAAnC,mBAAOyL,EAAP,KAAcqR,EAAd,KAEA,EAA0C9c,mBAAS,IAAnD,mBAAO+c,EAAP,KAAsBC,EAAtB,KACA,EAAsDhd,mBAAS,IAA/D,mBAAOid,EAAP,KAA4BC,EAA5B,KAGA,EAA0Bld,mBAAS,IAAnC,mBAAOwc,EAAP,KAAcW,EAAd,KACA,EAAgCnd,mBAAS,IAAzC,mBAAOuc,EAAP,KAAiBa,EAAjB,KACA,EAAwCpd,mBAAS,GAAjD,mBAAOsS,EAAP,KAAqB+K,EAArB,KACA,EAAsCrd,mBAAS,IAA/C,oBAAOqS,GAAP,MAAoBiL,GAApB,MACA,GAAkCtd,oBAAS,GAA3C,qBAAOud,GAAP,MAAkBC,GAAlB,MACA,GAA8Cxd,oBAAS,GAAvD,qBAAOyd,GAAP,MAAwBC,GAAxB,MACA,GAAuB1d,oBAAS,GAAhC,qBAAO2d,GAAP,MAAYC,GAAZ,MACM5M,GAAiB/H,aAAY,SAAAC,GAAK,OAAIA,EAAM8H,kBAC3C5B,GAA2B4B,GAA3B5B,MAAOC,GAAoB2B,GAApB3B,QAASrE,GAAWgG,GAAXhG,QACjBvD,GAAW4B,cACXwU,GAAgB5U,aAAY,SAAAC,GAAK,OAAIA,EAAM2U,iBACpCpC,GAA6DoC,GAAnEzO,MAA2BsM,GAAwCmC,GAAhDxO,QAA+BsM,GAAiBkC,GAAzB3L,QAGzCjB,GADkBhI,aAAY,SAAAC,GAAK,OAAIA,EAAMgI,qBAC7CD,OAER9I,QAAQC,IAAI6I,IAGZ1B,qBAAU,WAEHoM,IACClU,GAAS,CAACzG,KAAKqN,KACfmD,EAAQ7Q,KAAK,uBAETqK,GAAQ/J,MAAQ+J,GAAQM,MAAQ8F,OAAOR,IAGvCyK,EAAQrQ,GAAQ/J,MAChB4b,EAAS7R,GAAQgB,OACjB8Q,EAAS9R,GAAQS,OACjB0R,EAASnS,GAAQwR,OACjBY,EAAYpS,GAAQuR,UACpBc,EAAgBrS,GAAQsH,cACxBgL,GAAetS,GAAQqH,cARvB5K,GAASwH,GAAoB2B,IAYrCZ,EAAQW,GAAkBC,MAE3B,CAACnJ,GAAUuD,GAAS4F,EAAWY,EAASmK,KAG3C,IAAMmC,GAAiB,uCAAG,WAAOrd,GAAP,uBAAAiH,EAAA,6DAChBqW,EAAOtd,EAAEW,OAAO4c,MAAM,IACtBC,EAAW,IAAIC,UAEZC,OAAO,QAASJ,GACzBE,EAASE,OAAO,aAAcvN,GAE9B4M,IAAa,GAPS,SAUZ7V,EAAS,CACXC,QAAS,CACL,eAAe,wBAZL,SAgBGI,IAAMC,KAAK,wBAAyBgW,EAAUtW,GAhBjD,gBAgBXO,EAhBW,EAgBXA,KACPC,QAAQC,IAAIF,GACZ0V,IAAO,GACPd,EAAS5U,EAAKuD,OACd+R,IAAa,GACbR,EAAiB9U,EAAK0C,MArBJ,kDAwBlB4S,IAAa,GAxBK,0DAAH,sDA6BjBY,GAAwB,uCAAG,WAAO3d,GAAP,qBAAAiH,EAAA,6DAEvBuW,EAAW,IAAIC,SACrBG,KAAEC,QAAQ7d,EAAEW,OAAO4c,OAAO,SAAAD,GACtBE,EAASE,OAAO,QAASJ,MAE7BE,EAASE,OAAO,aAAcvN,GAE9B8M,IAAmB,GARU,SAWnB/V,EAAS,CACXC,QAAS,CACL,eAAe,wBAbE,SAiBJI,IAAMC,KAAK,6BAA8BgW,EAAUtW,GAjB/C,gBAiBlBO,EAjBkB,EAiBlBA,KAEP0V,IAAO,GACPF,IAAmB,GACnBR,EAAuBhV,EAAK,GAAG0C,MArBN,kDAwBzB8S,IAAmB,GAxBM,0DAAH,sDA4F9B,OACI,sBAAK5c,UAAU,yBAAf,UACI,cAAC,QAAD,CAAMgJ,GAAG,qBAAT,SACK3J,EAAE,oCAGP,eAAC,GAAD,WACI,6BAAKA,EAAE,2CACNub,IAAiB,cAAC,GAAD,IACjBD,IAAe,cAAC,GAAD,CAASla,QAAQ,SAAjB,SAA2Bka,KAE1CpM,GAAU,cAAC,GAAD,IAAYD,GAAQ,cAAC,GAAD,CAAS7N,QAAQ,SAAjB,SAA2B6N,KAEtD,eAAC7O,EAAA,EAAD,CAAMC,SA5EA,SAACC,GACnBA,EAAEC,iBACF+G,GxBkBqB,SAACuD,GAAD,8CAAa,WAAOvD,EAAUc,GAAjB,uBAAAb,EAAA,sEAEtCD,EAAS,CACPzG,KAAMkN,KAH8B,EAQlC3F,IADWC,EAPuB,EAOpCC,UAAaD,SAGTb,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBc,cAAc,UAAD,OAAYF,EAASG,SAbA,SAiBfX,IAAM2O,IAAN,+BACG3L,EAAQM,IADX,KAErBN,EACArD,GApBoC,gBAiB9BO,EAjB8B,EAiB9BA,KAMRT,EAAS,CACPzG,KAAMmN,GACNvF,QAASV,IAGXT,EAAS,CACPzG,KAAMyM,GACN7E,QAASV,IA9B2B,kDAiCtCT,EAAS,CACPzG,KAAMoN,GACNxF,QACE,KAAMC,UAAY,KAAMA,SAASX,KAAKY,OAClC,KAAMD,SAASX,KAAKY,OACpB,KAAMC,UAtCwB,0DAAb,wDwBlBZwV,CAAc,CACnBjT,IAAIsF,EACJ3P,OACA+K,QACAP,QACA+Q,QACAD,WACAjK,eACAD,mBAkEQ,UAEI,eAAC9R,EAAA,EAAKoS,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACrS,EAAA,EAAKsS,MAAN,UAAa1S,EAAE,mCACf,cAACI,EAAA,EAAKQ,QAAN,CACIC,KAAK,OACLE,YAAa,aACbG,MAAQJ,EACRE,SAAU,SAACV,GAAD,OAAO4a,EAAQ5a,EAAEW,OAAOC,aAK1C,eAACd,EAAA,EAAKoS,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACrS,EAAA,EAAKsS,MAAN,UAAa1S,EAAE,oCACf,cAACI,EAAA,EAAKQ,QAAN,CACIC,KAAK,SACLE,YAAa,cACbG,MAAQ2K,EACR7K,SAAU,SAACV,GAAD,OAAOoc,EAASpc,EAAEW,OAAOC,aAK3C,cAACd,EAAA,EAAKoS,MAAN,CAAYC,UAAU,QAAtB,SACI,cAACrS,EAAA,EAAKsS,MAAN,UAAa1S,EAAE,sCAGnB,eAACI,EAAA,EAAKoS,MAAN,CAAYC,UAAU,QAAQ9R,UAAU,oBAAxC,UACI,cAAC2J,GAAA,EAAD,UACI,cAAClK,EAAA,EAAKie,KAAN,CACIlW,GAAG,aACHnH,SAAU2c,GACVW,QAAM,EACN3G,MAAO3X,EAAE,uCACTW,UAAU,iCAMlB,cAAC2J,GAAA,EAAD,UACI,mBAAG3J,UAAU,oBAAb,SAAmC6c,GAAMxd,EAAE4c,GAAiB,OAEhE,eAACtS,GAAA,EAAD,WACI,cAACkF,GAAA,EAAD,CACInE,IAAMC,EACN3K,UAAU,iBAEbyc,IAAa,cAAC,GAAD,UAMtB,eAAChd,EAAA,EAAKoS,MAAN,CACIC,UAAU,mBACV9R,UAAU,8BACVK,SAAUid,GAHd,UAKI,cAAC7d,EAAA,EAAKsS,MAAN,UAAa1S,EAAE,+CACf,cAACI,EAAA,EAAKQ,QAAN,CAAcC,KAAK,OAAO0d,UAAQ,OAIlC,cAACjU,GAAA,EAAD,UACI,mBAAG3J,UAAU,oBAAb,SAAmC6c,GAAMxd,EAAE8c,GAAuB,OAE1E,8BACMN,EACE,cAACrb,EAAA,EAAD,CAAQR,UAAU,8BAA8BuC,QAtQ3D,kBAAMuZ,GAAe,IAsQV,kBAGA,cAACtb,EAAA,EAAD,CAAQR,UAAU,8BAA8BuC,QA1Q5D,kBAAMuZ,GAAe,IA0QT,oBAIND,EACF,cAACpc,EAAA,EAAKoS,MAAN,UACKtD,GAAU,cAAC,GAAD,IACTD,GAAQ,cAAC,GAAD,CAAS7N,QAAQ,SAAjB,SAA2B6N,KAEjC,8BACI,eAAC3E,GAAA,EAAD,WACKwG,GAAO9N,KAAI,SAAAwb,GAAG,OACP,cAAChP,GAAA,EAAD,CAEAnE,IAAMmT,EAAI1N,OACVnQ,UAAU,gBAFL6d,EAAIrW,OAOhBmV,IAAmB,cAAC,GAAD,WAKjC,KAGH,eAACld,EAAA,EAAKoS,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACrS,EAAA,EAAKsS,MAAN,UAAa1S,EAAE,oCACf,cAACI,EAAA,EAAKQ,QAAN,CACIC,KAAK,OACLE,YAAa,cACbG,MAAQmb,EACRrb,SAAU,SAACV,GAAD,OAAO0c,EAAS1c,EAAEW,OAAOC,aAK3C,eAACd,EAAA,EAAKoS,MAAN,CAAYC,UAAU,eAAtB,UACI,cAACrS,EAAA,EAAKsS,MAAN,UAAa1S,EAAE,oCACf,cAACI,EAAA,EAAKQ,QAAN,CACIC,KAAK,SACLE,YAAa,cACbG,MAAQiR,EACRnR,SAAU,SAACV,GAAD,OAAO4c,EAAgB5c,EAAEW,OAAOC,aAKlD,eAACd,EAAA,EAAKoS,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACrS,EAAA,EAAKsS,MAAN,UAAa1S,EAAE,uCACf,cAACI,EAAA,EAAKQ,QAAN,CACIC,KAAK,OACLE,YAAa,iBACbG,MAAQkb,EACRpb,SAAU,SAACV,GAAD,OAAO2c,EAAY3c,EAAEW,OAAOC,aAK9C,eAACd,EAAA,EAAKoS,MAAN,CAAYC,UAAU,cAAtB,UACI,cAACrS,EAAA,EAAKsS,MAAN,UAAa1S,EAAE,0CACf,cAACI,EAAA,EAAKQ,QAAN,CACIC,KAAK,OACLE,YAAa,oBACbG,MAAQgR,GACRlR,SAAU,SAACV,GAAD,OAAO6c,GAAe7c,EAAEW,OAAOC,aAKjD,cAACC,EAAA,EAAD,CAAQN,KAAK,SAASO,QAAQ,UAAUT,UAAU,kCAAlD,SACKX,EAAE,6CC/QhBye,OA/Ef,YAAuC,IAAZpN,EAAW,EAAXA,QACnB/J,EAAW4B,cACTlJ,EAAMC,cAAND,EAEF0e,EAAY5V,aAAY,SAACC,GAAD,OAAWA,EAAM2V,aACvCxP,EAA2BwP,EAA3BxP,QAASD,EAAkByP,EAAlBzP,MAAOqH,EAAWoI,EAAXpI,OAGhBjO,EADUS,aAAY,SAACC,GAAD,OAAWA,EAAMT,aACvCD,SAUR,OARA+G,qBAAU,WACJ/G,GAAYA,EAAS8B,QACvB7C,EVyKoB,uCAAM,WAAOA,EAAUc,GAAjB,uBAAAb,EAAA,sEAExBD,EAAS,CACLzG,KAAMgG,KAHc,EAQpBuB,IADaC,EAPO,EAOpBC,UAAaD,SAGXb,EAAS,CACXC,QAAQ,CACJ,eAAgB,mBAChBc,cAAc,UAAD,OAAYF,EAASG,SAblB,SAiBHX,IAAMtF,IAAN,eAEjBiF,GAnBoB,gBAiBjBO,EAjBiB,EAiBjBA,KAKPT,EAAS,CACLzG,KAAMiG,GACN2B,QAASV,IAxBW,kDA4BxBT,EAAS,CACLzG,KAAMkG,GACN0B,QAAS,KAAMC,UAAY,KAAMA,SAASX,KAAKY,OAC7C,KAAMD,SAASX,KAAKY,OACpB,KAAMC,UAhCY,0DAAN,yDUvKpByI,EAAQ7Q,KAAK,YAEd,CAAC8G,EAAU+J,EAAShJ,IAGrB,sBAAK1H,UAAU,OAAf,UACE,6BAAKX,EAAE,kCACNkP,EACC,cAAC,GAAD,IACED,EACF,cAAC,GAAD,CAAS7N,QAAQ,SAAjB,SAA2B6N,IAE3B,eAAC0L,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAACpa,UAAU,WAAnD,UACE,gCACE,+BACE,oCACA,6BAAKX,EAAE,gCACP,6BAAKA,EAAE,gCACP,6BAAKA,EAAE,iCACP,6BAAKA,EAAE,gCACP,6BAAKA,EAAE,qCACP,4BAIJ,gCACGsW,EAAOtT,KAAI,SAAC+U,GAAD,OACV,+BACE,6BAAKA,EAAM5M,MACX,6BAAK4M,EAAM7B,MAAQ6B,EAAM7B,KAAKpV,OAC9B,6BAAKiX,EAAMzF,UAAUC,UAAU,EAAG,MAClC,mCAAMwF,EAAMI,cAEZ,6BACGJ,EAAMiB,OACLjB,EAAM4G,OAAOpM,UAAU,EAAG,IAE1B,mBAAG5R,UAAU,eAAegK,MAAO,CAAED,MAAO,WAIhD,6BACGqN,EAAM2B,YACL3B,EAAM4B,YAAYpH,UAAU,EAAG,IAE/B,mBAAG5R,UAAU,eAAegK,MAAO,CAAED,MAAO,WAIhD,6BACE,cAAC,gBAAD,CAAef,GAAE,iBAAYoO,EAAM5M,KAAnC,SACE,cAAChK,EAAA,EAAD,CAAQC,QAAQ,UAAUT,UAAU,SAApC,SACGX,EAAE,6CAzBF+X,EAAM5M,iBCYdyT,OAtDf,WAEI,IAAQ5e,EAAMC,cAAND,EAEFqW,EAAcvN,aAAY,SAAAC,GAAK,OAAIA,EAAMsN,eAC9BwI,EAA6CxI,EAAtDnH,QAA8B4P,EAAwBzI,EAA9BpH,MAAmBqH,EAAWD,EAAXC,OAEnD,OACI,sBAAK3V,UAAU,yBAAf,UACY,oBAAIA,UAAU,YAAd,SAA2BX,EAAE,sCAC5B6e,EACG,cAAC,GAAD,IAEAC,EACA,cAAC,GAAD,CAAS1d,QAAQ,SAAjB,SAA2B0d,IAE3B,eAACnE,GAAA,EAAD,CAAOC,SAAO,EAACG,YAAU,EAACpa,UAAU,WAApC,UACI,gCACI,+BACI,oCACA,6BAAKX,EAAE,8BACP,6BAAKA,EAAE,+BACP,6BAAKA,EAAE,8BACP,6BAAKA,EAAE,mCACP,yBANKqW,EAAYlL,OAUzB,gCACKmL,EAAOtT,KAAI,SAAA+U,GAAK,OACb,+BACI,6BAAKA,EAAM5M,MACX,6BAAK4M,EAAMzF,UAAUC,UAAU,EAAE,MACjC,mCAAMwF,EAAMI,cACZ,6BAAKJ,EAAMiB,OAASjB,EAAM4G,OAAOpM,UAAU,EAAE,IACzC,mBAAG5R,UAAU,eAAegK,MAAO,CAAED,MAAO,WAEhD,6BAAKqN,EAAM2B,YAAc3B,EAAM4B,YAAYpH,UAAU,EAAE,IACnD,mBAAG5R,UAAU,eAAegK,MAAO,CAAED,MAAO,WAEhD,6BACI,cAAC,gBAAD,CAAef,GAAE,iBAAaoO,EAAM5M,KAAOxK,UAAU,6BAArD,SACI,cAACQ,EAAA,EAAD,CAAQ4d,UAAU,WAAlB,SAA8B/e,EAAE,0DCfjEgf,OA9Bf,WAEI,IAAQhf,EAAMC,cAAND,EAER,OACI,qBAAKW,UAAU,qCAAf,SACI,eAAC2J,GAAA,EAAD,WACI,cAAC,gBAAD,CAAeX,GAAG,kBAAlB,SACI,cAACY,GAAA,EAAD,CAAK5J,UAAU,YAAf,SACKX,EAAE,0BAIX,cAAC,gBAAD,CAAe2J,GAAG,qBAAlB,SACI,cAACY,GAAA,EAAD,CAAK5J,UAAU,YAAf,SACKX,EAAE,6BAIX,cAAC,gBAAD,CAAe2J,GAAG,mBAAlB,SACI,cAACY,GAAA,EAAD,CAAK5J,UAAU,YAAf,SACKX,EAAE,iCCqFZif,OA7Ff,YAA+C,IAAtBxe,EAAqB,EAArBA,SAAU4Q,EAAW,EAAXA,QACzBrR,EAAMC,cAAND,EACFsH,EAAW4B,cACXiL,EAAW1T,EAASsP,OAAStP,EAASsP,OAAOpD,MAAM,KAAK,GAAK,IAEnE,EAAsC9M,oBAAS,GAA/C,mBAAOqf,EAAP,KAAoBC,EAApB,KACA,EAAgCtf,oBAAS,GAAzC,mBAAOoU,EAAP,KAAiBC,EAAjB,KAEM5L,EAAYQ,aAAY,SAACC,GAAD,OAAWA,EAAMT,aACvC2G,EAA6B3G,EAA7B2G,MAAOC,EAAsB5G,EAAtB4G,QAAS7G,EAAaC,EAAbD,SAExB,EAMI+L,eALFC,EADF,EACEA,SACaC,EAFf,EAEEC,UAAaD,OACbE,EAHF,EAGEA,aACAC,EAJF,EAIEA,MACAC,EALF,EAKEA,QAsBF,OAnBAtF,qBAAU,WACJ/G,GACFgJ,EAAQ7Q,KAAK2T,KAMd,CAAC9C,EAAShJ,EAAU8L,EAAUlF,IAW7BiQ,EACK,cAAC,IAAD,CAAUvV,GAAG,MAYpB,qBAAKhJ,UAAU,yBAAf,SACE,eAAC,GAAD,WACE,gDACCsT,GAAY,cAAC,GAAD,CAAS7S,QAAQ,SAAjB,SAA2BpB,EAAEiP,KACzCC,GAAW,cAAC,GAAD,IAEZ,eAAC9O,EAAA,EAAD,CAAMC,SAAUmU,GA5BL,SAACzM,GAEhB0M,IACAnN,EAASF,GAAeW,EAAKV,QAE7B8X,GAAe,GACfjL,GAAY,MAsBR,UACE,eAAC9T,EAAA,EAAKoS,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACrS,EAAA,EAAKsS,MAAN,oBACA,cAACtS,EAAA,EAAKQ,QAAN,2BACEC,KAAK,OACLE,YAAaf,EAAE,uCACXqU,EAAS,QAAS,CACpBU,SAAU/U,EAAE,wCACZgV,QAAS,CACP9T,MAAO,2CACP0H,QAAS5I,EAAE,0CAPjB,IAUEiV,QAAS,WACPP,EAAQ,UAEV5T,KAAK,WAENwT,EAAOjN,OACN,qBAAK1G,UAAU,iBAAf,SAAiC2T,EAAOjN,MAAMuB,aAIlD,cAACzH,EAAA,EAAD,CACEN,KAAK,SACLO,QAAQ,UACRT,UAAU,kCAHZ,qCCxFKye,OARf,WACI,OACI,qBAAKze,UAAU,yBAAf,0BCoDO0e,OA/Cf,YAAgD,IAAtB5e,EAAqB,EAArBA,SAAU4Q,EAAW,EAAXA,QAC1BmD,EAAiBJ,eAAjBI,aACFxC,EAASsN,cAEf,EAAwCzf,oBAAS,GAAjD,mBAAO0f,EAAP,KAAqBC,EAArB,KAKMrL,GAHMnC,EAAOyN,IACLzN,EAAOxJ,MAEJ/H,EAASsP,OAAStP,EAASsP,OAAOpD,MAAM,KAAK,GAAK,KAkBnE,OAhBiBzD,cAUjBkG,qBAAU,WACJmQ,GACFlO,EAAQ7Q,KAAK2T,KAEd,CAACoL,IAGF,sBAAK5e,UAAU,yBAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,sEAEF,cAAC,GAAD,UACE,cAACP,EAAA,EAAD,CAAMC,SAAUmU,GApBL,WACfxM,QAAQC,IAAI,4CACZuX,EAAgBjR,OAkB4B5N,UAAU,cAAlD,SACE,cAACQ,EAAA,EAAD,CACEN,KAAK,SACLO,QAAQ,UACRT,UAAU,kCAHZ,mCCuGKqT,OAtIf,YAAmC,IAAZ3C,EAAW,EAAXA,QACrB,EAAgCxR,oBAAS,GAAzC,mBAAOoU,EAAP,KAAiBC,EAAjB,KACQlU,EAAMC,cAAND,EAEFmU,GADWjL,cACAmI,EAAQ5Q,SAASsP,OAC9BsB,EAAQ5Q,SAASsP,OAAOpD,MAAM,KAAK,GACnC,KACErE,EAAYQ,aAAY,SAACC,GAAD,OAAWA,EAAMT,aACvC2G,EAA6B3G,EAA7B2G,MAAOC,EAAsB5G,EAAtB4G,QAAS7G,EAAaC,EAAbD,SAExB,EAMI+L,eALFC,EADF,EACEA,SACaC,EAFf,EAEEC,UAAaD,OACbE,EAHF,EAGEA,aACAC,EAJF,EAIEA,MACAC,EALF,EAKEA,QAuBF,OApBAtF,qBAAU,WACJ/G,GACFgJ,EAAQ7Q,KAAK2T,KAEd,CAAC9C,EAAShJ,EAAU8L,IAQvB/E,qBAAU,WACR,IAAMuF,EAAUC,YAAW,WACzBV,GAAY,KACX,KAEH,OAAO,kBAAMW,aAAaF,MACzB,CAACV,IAGF,qBAAKtT,UAAU,yBAAf,SACE,eAAC,GAAD,WACE,wCACA,6BAAKX,EAAE,uBACNiU,GAAY,cAAC,GAAD,CAAS7S,QAAQ,SAAjB,SAA2BpB,EAAEiP,KACzCC,GAAW,cAAC,GAAD,IAEZ,eAAC9O,EAAA,EAAD,CAAMC,SAAUmU,GAtBL,SAACzM,GAEhB0M,IACAP,GAAY,MAmBR,UAkBE,eAAC9T,EAAA,EAAKoS,MAAN,CAAYC,UAAU,WAAtB,UACE,cAACrS,EAAA,EAAKsS,MAAN,uBACA,cAACtS,EAAA,EAAKQ,QAAN,2BACEC,KAAK,OACLE,YAAY,kBACRsT,EAAS,WAAY,CACvBU,SAAU/U,EAAE,wCACZkV,UAAW,CACThU,MAAO,EACP0H,QAAS5I,EAAE,uCAEbgV,QAAS,CACP9T,MAAO,aACP0H,QAAS5I,EAAE,0CAXjB,IAcEiV,QAAS,WACPP,EAAQ,aAEV5T,KAAK,iBAIT,eAACV,EAAA,EAAKoS,MAAN,CAAYC,UAAU,WAAtB,UACE,cAACrS,EAAA,EAAKsS,MAAN,UAAa1S,EAAE,+BACf,cAACI,EAAA,EAAKQ,QAAN,2BACEC,KAAK,WACLE,YAAaf,EAAE,0CACXqU,EAAS,WAAY,CACvBU,SAAU/U,EAAE,2CACZkV,UAAW,CACThU,MAAO,EACP0H,QAAS5I,EAAE,gDAPjB,IAUEiV,QAAS,WACPP,EAAQ,aAEV5T,KAAK,cAENwT,EAAOQ,UACN,qBAAKnU,UAAU,iBAAf,SAAiC2T,EAAOQ,SAASlM,aAIrD,cAACzH,EAAA,EAAD,CACEN,KAAK,SACLO,QAAQ,UACRT,UAAU,kCAHZ,SAKGX,EAAE,6BAIP,cAACsK,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,UACE,cAAC,QAAD,CAAMZ,GAAG,UAAT,0CAIJ,cAACW,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,UACE,cAAC,QAAD,CAAMZ,GAAG,kBAAT,4CC9CG+V,OAjFf,YAAqD,IAAtBjf,EAAqB,EAArBA,SAAU4Q,EAAW,EAAXA,QAC/BrR,EAAMC,cAAND,EACFsH,EAAW4B,cACXiL,EAAW1T,EAASsP,OAAStP,EAASsP,OAAOpD,MAAM,KAAK,GAAK,IAEnE,EAAsC9M,oBAAS,GAA/C,mBAAoBsf,GAApB,WACA,EAAgCtf,oBAAS,GAAzC,mBAAOoU,EAAP,KAAiBC,EAAjB,KAEM5L,EAAYQ,aAAY,SAACC,GAAD,OAAWA,EAAMT,aACvC2G,EAA6B3G,EAA7B2G,MAAOC,EAAsB5G,EAAtB4G,QAAS7G,EAAaC,EAAbD,SAExB,EAMI+L,eALFC,EADF,EACEA,SACaC,EAFf,EAEEC,UAAaD,OACbE,EAHF,EAGEA,aACAC,EAJF,EAIEA,MACAC,EALF,EAKEA,QAqBF,OAlBAtF,qBAAU,WACJ/G,GACFgJ,EAAQ7Q,KAAK2T,KAEd,CAAC9C,EAAShJ,EAAU8L,IAerB,qBAAKxT,UAAU,yBAAf,SACE,eAAC,GAAD,WACE,wCACA,wDACCsT,GAAY,cAAC,GAAD,CAAS7S,QAAQ,SAAjB,SAA2BpB,EAAEiP,KACzCC,GAAW,cAAC,GAAD,IAEZ,eAAC9O,EAAA,EAAD,CAAMC,SAAUmU,GApBL,SAACzM,GAEhB0M,IACAnN,EAASF,GAAeW,EAAKV,QAC7B8X,GAAe,GACfjL,GAAY,MAeR,UACE,eAAC9T,EAAA,EAAKoS,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACrS,EAAA,EAAKsS,MAAN,oBACA,cAACtS,EAAA,EAAKQ,QAAN,2BACEC,KAAK,OACLE,YAAaf,EAAE,uCACXqU,EAAS,QAAS,CACpBU,SAAU/U,EAAE,wCACZgV,QAAS,CACP9T,MAAO,2CACP0H,QAAS5I,EAAE,0CAPjB,IAUEiV,QAAS,WACPP,EAAQ,UAEV5T,KAAK,WAENwT,EAAOjN,OACN,qBAAK1G,UAAU,iBAAf,SAAiC2T,EAAOjN,MAAMuB,aAIlD,cAACzH,EAAA,EAAD,CACEN,KAAK,SACLO,QAAQ,UACRT,UAAU,kCAHZ,qCCyDKgf,OA9Hf,YAAmD,IAAblf,EAAY,EAAZA,SAC5BT,EAAMC,cAAND,EACFsH,EAAW4B,cACjB,EAA8CrJ,mBAAS,IAAvD,mBAAOuV,EAAP,KAAwBC,EAAxB,KACA,EAAwCxV,mBAAS,IAAjD,mBAAO+f,EAAP,KAAqBC,EAArB,KACA,EAA4ChgB,mBAAS,IAArD,mBAAOigB,EAAP,KAAuBC,EAAvB,KAEM/N,EAASsN,cAETU,EAAelX,aAAY,SAACC,GAAD,OAAWA,EAAMiX,gBAC1C/Q,EAA4B+Q,EAA5B/Q,MAAgB8C,GAAYiO,EAArB9Q,QAAqB8Q,EAAZjO,SAElB0N,EAAMzN,EAAOyN,IACbjX,EAAQwJ,EAAOxJ,MAIrB,GAFiB/H,EAASsP,QAAStP,EAASsP,OAAOpD,MAAM,KAAK,GAQ1DyH,gBALFC,EADF,EACEA,SACaC,EAFf,EAEEC,UAAaD,OAEbE,GAJF,EAGEC,MAHF,EAIED,cACAE,EALF,EAKEA,QAmCF,OAlBAtF,qBAAU,WACR,IAAMuF,EAAUC,YAAW,WACrBQ,GACFC,EAAmB,IAGjBuK,GACFC,EAAgB,IAGdC,GACFC,EAAkB,MAEnB,KAEH,OAAO,kBAAMlL,aAAaF,MACzB,CAACS,EAAiBwK,EAAcE,IAGjC,qBAAKnf,UAAU,yBAAf,SACE,eAAC,GAAD,WACGyU,GACC,cAAC,GAAD,CAAShU,QAAQ,SAAjB,SAA2BpB,EAAEoV,KAE9BwK,GAAgB,cAAC,GAAD,CAASxe,QAAQ,SAAjB,SAA2BpB,EAAE4f,KAC7CE,GACC,cAAC,GAAD,CAAS1e,QAAQ,UAAjB,SAA4BpB,EAAE8f,KAEhC,gDACA,eAAC1f,EAAA,EAAD,CAAMC,SAAUmU,GA3CL,SAACzM,GACZA,EAAKkY,kBAAoBlY,EAAKmY,YAChC7K,EAAmB,yBACVpG,EACT4Q,EAAgB,2BACP9N,EACTgO,EAAkB,uCAElBzY,E3CyQJ,SAACmY,EAAKjX,EAAO2X,EAAcC,GAA3B,8CAA+C,WAAO9Y,GAAP,iBAAAC,EAAA,sEAE3CD,EAAS,CACPzG,KF7QsC,mCEgRlC2G,EAAS,CACbC,QAAS,CACP,eAAgB,qBAIdC,EAAOC,KAAKC,UAAU,CAC1B6X,MACAjX,QACA2X,eACAC,oBAhByC,SAkBrCvY,IAAMC,KAAK,sCAAuCJ,EAAMF,GAlBnB,OAoB3CF,EAAS,CACPzG,KAAM4E,KArBmC,gDAwB3C6B,EAAS,CACPzG,KAAM2E,KAzBmC,yDAA/C,sD2CxQM6a,CAAqBZ,EAAKjX,EAAOT,EAAKmY,YAAanY,EAAKkY,qBAkCxD,UACE,eAAC7f,EAAA,EAAKoS,MAAN,CAAYC,UAAU,cAAtB,UACE,cAACrS,EAAA,EAAKsS,MAAN,0BACA,cAACtS,EAAA,EAAKQ,QAAN,2BACEC,KAAK,WACLE,YAAY,eACRsT,EAAS,cAAe,CAC1BU,SAAU/U,EAAE,8CACZkV,UAAW,CACThU,MAAO,EACP0H,QAAS5I,EAAE,mDAPjB,IAUEiV,QAAS,WACPP,EAAQ,gBAEV5T,KAAK,iBAENwT,EAAO4L,aACN,qBAAKvf,UAAU,iBAAf,SAAiC2T,EAAO4L,YAAYtX,aAGxD,eAACxI,EAAA,EAAKoS,MAAN,CAAYC,UAAU,kBAAtB,UACE,cAACrS,EAAA,EAAKsS,MAAN,kCACA,cAACtS,EAAA,EAAKQ,QAAN,2BACEC,KAAK,WACLE,YAAY,uBACRsT,EAAS,kBAAmB,CAC9BU,SAAU/U,EAAE,8CACZkV,UAAW,CACThU,MAAO,EACP0H,QAAS5I,EAAE,mDAPjB,IAUEiV,QAAS,WACPP,EAAQ,oBAEV5T,KAAK,qBAENwT,EAAO2L,iBACN,qBAAKtf,UAAU,iBAAf,SACG2T,EAAO2L,gBAAgBrX,aAI9B,cAACzH,EAAA,EAAD,CACEN,KAAK,SACLO,QAAQ,UACRT,UAAU,kCAHZ,qCCnHK2f,OANf,WACE,OACE,gDCDW,SAASC,KACtB,IAAQ7f,EAAa8f,cAAb9f,SAMR,OAJA0O,qBAAU,WACRjG,OAAOqM,SAAS,EAAG,KAClB,CAAC9U,IAEG,KCqEM+f,OA9Cf,WACE,OACE,eAAC,cAAD,WACE,cAAC,GAAD,IACA,sBAAM9f,UAAU,OAAhB,SACE,eAAC+I,EAAA,EAAD,WACE,cAAC6W,GAAD,IACA,cAAC,IAAD,CAAOG,KAAK,IAAIC,UAAW/Q,GAAYgR,OAAK,IAC5C,cAAC,IAAD,CAAOF,KAAK,gBAAgBC,UAAWxP,KACvC,cAAC,IAAD,CAAOuP,KAAK,cAAcC,UAAWrN,KACrC,cAAC,IAAD,CAAOoN,KAAK,SAASC,UAAW3M,KAChC,cAAC,IAAD,CAAO0M,KAAK,YAAYC,UAAWxL,KACnC,cAAC,IAAD,CAAOuL,KAAK,kBAAkBC,UAAW1B,KACzC,cAAC,IAAD,CAAOyB,KAAK,eAAeC,UAAWvB,KACtC,cAAC,IAAD,CAAOsB,KAAK,WAAWC,UAAW7K,KAClC,cAAC,IAAD,CAAO4K,KAAK,SAASC,UAAW3B,KAChC,cAAC,IAAD,CAAO0B,KAAK,UAAUC,UAAW/B,KACjC,cAAC,IAAD,CAAO8B,KAAK,YAAYC,UAAW5J,KACnC,cAAC,IAAD,CAAO2J,KAAK,cAAcC,UAAW9I,KACrC,cAAC,IAAD,CAAO6I,KAAK,WAAWC,UAAWnJ,KAClC,cAAC,IAAD,CAAOkJ,KAAK,aAAaC,UAAWrI,KACpC,cAAC,IAAD,CAAOoI,KAAK,kBAAkBC,UAAWzG,KACzC,cAAC,IAAD,CAAOwG,KAAK,uBAAuBC,UAAW3F,KAC9C,cAAC,IAAD,CAAO0F,KAAK,qBAAqBC,UAAWjF,KAC5C,cAAC,IAAD,CAAOgF,KAAK,mBAAmBC,UAAWlC,KAC1C,cAAC,IAAD,CAAOiC,KAAK,0BAA0BC,UAAWrE,KAGjD,cAAC,IAAD,CAAOoE,KAAK,gBAAgBC,UAAWE,KACvC,cAAC,IAAD,CAAOH,KAAK,UAAUC,UAAWL,KACjC,cAAC,IAAD,CAAOI,KAAK,kBAAkBC,UAAWjB,KACzC,cAAC,IAAD,CACEgB,KAAK,sCACLC,UAAWhB,KAEb,cAAC,IAAD,CAAOe,KAAK,wBAAwBC,UAAWtB,UAMnD,cAAC,GAAD,QC9DSyB,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,mEC8BRQ,GAAUC,2BAAgB,CAC9B1R,YCAiC,WAAmC,IAAlC/G,EAAiC,uDAAzB,CAACoG,SAAS,IAAKsS,EAAU,uCACjE,OAAOA,EAAO5gB,MACV,KAAKqM,GACD,MAAO,CAAEgC,SAAS,EAAMC,SAAS,IAErC,KAAKhC,GACD,MAAO,CAAE+B,SAAS,EACdC,SAASsS,EAAOhZ,QAAQ0G,SACxB1C,KAAKgV,EAAOhZ,QAAQgE,KACpBD,MAAMiV,EAAOhZ,QAAQ+D,OAE7B,KAAKY,GACD,MAAO,CAAE8B,SAAS,EAAOD,MAAOwS,EAAOhZ,SAE3C,QACI,OAAOM,IDdjB8H,eCmCoC,WAA+C,IAA9C9H,EAA6C,uDAArC,CAAE8B,QAAS,CAACuH,QAAQ,KAAOqP,EAAU,uCAChF,OAAOA,EAAO5gB,MACV,KAAKwM,GACD,OAAO,cAAE6B,SAAS,GAASnG,GAE/B,KAAKuE,GACD,MAAO,CAAE4B,SAAS,EAAOrE,QAAS4W,EAAOhZ,SAE7C,KAAK8E,GACD,MAAO,CAAE2B,SAAS,EAAOD,MAAOwS,EAAOhZ,SAE3C,QACI,OAAOM,ID9CjB4S,cCmDmC,WAAwB,IAAvB5S,EAAsB,uDAAd,GAAI0Y,EAAU,uCACxD,OAAOA,EAAO5gB,MACV,KAAK2M,GACD,MAAO,CAAE0B,SAAS,GAEtB,KAAKzB,GACD,MAAO,CAAEyB,SAAS,EAAO6C,SAAS,GAEtC,KAAKrE,GACD,MAAO,CAAEwB,SAAS,EAAOD,MAAOwS,EAAOhZ,SAE3C,QACI,OAAOM,ID9DjB+S,cCmEmC,WAAwB,IAAvB/S,EAAsB,uDAAd,GAAI0Y,EAAU,uCACxD,OAAOA,EAAO5gB,MACV,KAAK8M,GACD,MAAO,CAAEuB,SAAS,GAEtB,KAAKtB,GACD,MAAO,CAAEsB,SAAS,EAAO6C,SAAS,EAAMlH,QAAQ4W,EAAOhZ,SAE3D,KAAKoF,GACD,MAAO,CAAEqB,SAAS,EAAOD,MAAOwS,EAAOhZ,SAE3C,KAAKqF,GACD,MAAO,GACX,QACI,OAAO/E,IDhFjB2U,cCoFmC,WAAmC,IAAlC3U,EAAiC,uDAAzB,CAAC8B,QAAS,IAAK4W,EAAU,uCACnE,OAAOA,EAAO5gB,MACV,KAAKkN,GACD,MAAO,CAAEmB,SAAS,GAEtB,KAAKlB,GACD,MAAO,CAAEkB,SAAS,EAAO6C,SAAS,EAAMlH,QAAQ4W,EAAOhZ,SAE3D,KAAKwF,GACD,MAAO,CAAEiB,SAAS,EAAOD,MAAOwS,EAAOhZ,SAE3C,KAAKyF,GACD,MAAO,CAAErD,QAAS,IACtB,QACI,OAAO9B,IDjGjB4I,oBCsGwC,WAAwB,IAAvB5I,EAAsB,uDAAd,GAAI0Y,EAAU,uCAC7D,OAAOA,EAAO5gB,MACV,KAAKsN,GACD,MAAO,CAAEe,SAAS,GAEtB,KAAKd,GACD,MAAO,CAAEc,SAAS,EAAO6C,SAAS,GAEtC,KAAK1D,GACD,MAAO,CAAEa,SAAS,EAAOD,MAAOwS,EAAOhZ,SAE3C,KAAK6F,GACD,MAAO,GACX,QACI,OAAOvF,IDnHjBiG,gBCwHoC,WAAmC,IAAlCjG,EAAiC,uDAAzB,CAACoG,SAAS,IAAKsS,EAAU,uCACpE,OAAOA,EAAO5gB,MACV,KAAK0N,GACD,MAAO,CAAEW,SAAS,EAAMC,SAAU,IAEtC,KAAKX,GACD,MAAO,CAAEU,SAAS,EAAOC,SAAUsS,EAAOhZ,SAE9C,KAAKgG,GACD,MAAO,CAAES,SAAS,EAAOD,MAAOwS,EAAOhZ,SAE3C,QACI,OAAOM,IDlIjBgI,kBCWuC,WAAiC,IAAhChI,EAA+B,uDAAvB,CAAC+H,OAAO,IAAK2Q,EAAU,uCACrE,OAAOA,EAAO5gB,MACV,KAAK6N,GACD,MAAO,CAAEQ,SAAS,EAAM4B,OAAO,IAEnC,KAAKnC,GACD,MAAO,CAAEO,SAAS,EACd4B,OAAQ2Q,EAAOhZ,SAEvB,KAAKmG,GACD,MAAO,CAAEM,SAAS,EAAOD,MAAOwS,EAAOhZ,SAE3C,QACI,OAAOM,IDtBjBoK,KExCyB,WAAuD,IAAtDpK,EAAqD,uDAA/C,CAACqK,UAAU,IAAKqO,EAA+B,uCAC7E,OAAOA,EAAO5gB,MACV,KAAK+R,GACD,IAAMa,EAAOgO,EAAOhZ,QACdiZ,EAAY3Y,EAAMqK,UAAUzQ,MAAK,SAAAoK,GAAC,OAAIA,EAAElC,UAAY4I,EAAK5I,WAE/D,OAAG6W,EACC,6BACO3Y,GADP,IAEIqK,UAAWrK,EAAMqK,UAAUpQ,KAAI,SAAA+J,GAAC,OAC5BA,EAAElC,UAAY6W,EAAU7W,QAAU4I,EAAO1G,OAOjD,6BACOhE,GADP,IAEIqK,UAAU,GAAD,oBAAKrK,EAAMqK,WAAX,CAAsBK,MAI3C,KAAKZ,GACD,oCACO9J,GADP,IAEIqK,UAAUrK,EAAMqK,UAAUuO,QAAO,SAAA5U,GAAC,OAAIA,EAAElC,UAAY4W,EAAOhZ,aAGnE,KAAKqK,GACD,oCACO/J,GADP,IAEIiO,gBAAiByK,EAAOhZ,UAGhC,KAAKsK,GACD,OAAO,6BACAhK,GADP,IAEI0O,cAAegK,EAAOhZ,UAG9B,KAAKuK,GACD,OAAO,6BACAjK,GADP,IAEIqK,UAAW,KAGnB,QACI,OAAOrK,IFNjBT,UGmE+B,WAAyB,IAAxBS,EAAuB,uDAAf,GAAI0Y,EAAW,uCACvD,OAAQA,EAAO5gB,MACb,KAAK0C,EACH,MAAO,CAAE2L,SAAS,GAEpB,KAAK1L,EACH,MAAO,CAAE0L,SAAS,EAAO7G,SAAUoZ,EAAOhZ,SAE5C,KAAKhF,EACH,MAAO,CAAEyL,SAAS,EAAOD,MAAOwS,EAAOhZ,SAEzC,KAAK/E,EACH,MAAO,GAET,QACE,OAAOqF,IHjFXuM,aGqFkC,WAAyB,IAAxBvM,EAAuB,uDAAf,GAAI0Y,EAAW,uCAC1D,OAAQA,EAAO5gB,MACb,KAAK8C,EACH,MAAO,CAAEuL,SAAS,GAEpB,KAAKtL,EACH,MAAO,CAAEsL,SAAS,EAAO7G,SAAUoZ,EAAOhZ,QAASsJ,SAAS,GAE9D,KAAKlO,EACH,MAAO,CAAEqL,SAAS,EAAOD,MAAOwS,EAAOhZ,SAEzC,KAAK3E,EAGL,KAAKJ,EACH,MAAO,GAET,QACE,OAAOqF,IHtGXkN,YG2JiC,WAAmC,IAAlClN,EAAiC,uDAAzB,CAAEmN,KAAM,IAAMuL,EAAW,uCACnE,OAAQA,EAAO5gB,MACb,KAAKqD,EACH,OAAO,6BAAK6E,GAAZ,IAAmBmG,SAAS,IAE9B,KAAK/K,EACH,MAAO,CAAE+K,SAAS,EAAOgH,KAAMuL,EAAOhZ,SAExC,KAAKrE,EACH,MAAO,CAAE8K,SAAS,EAAOD,MAAOwS,EAAOhZ,SAEzC,KAAKpE,EACH,MAAO,CAAE6R,KAAM,IAEjB,QACE,OAAOnN,IHzKXoN,kBG6KuC,WAAyB,IAAxBpN,EAAuB,uDAAf,GAAI0Y,EAAW,uCAC/D,OAAQA,EAAO5gB,MACb,KAAKyD,EACH,MAAO,CAAE4K,SAAS,GAEpB,KAAK3K,EACH,MAAO,CAAE2K,SAAS,EAAO6C,SAAS,EAAM1J,SAAUoZ,EAAOhZ,SAE3D,KAAKjE,EACH,MAAO,CAAE0K,SAAS,EAAOD,MAAOwS,EAAOhZ,SAEzC,KAAKhE,EACH,MAAO,GAET,QACE,OAAOsE,IH3LXoR,SG+L8B,WAAoC,IAAnCpR,EAAkC,uDAA1B,CAAEqR,MAAO,IAAMqH,EAAW,uCACjE,OAAQA,EAAO5gB,MACb,KAAK6D,EACH,MAAO,CAAEwK,SAAS,GAEpB,KAAKvK,EACH,MAAO,CAAEuK,SAAS,EAAOkL,MAAOqH,EAAOhZ,SAEzC,KAAK7D,EACH,MAAO,CAAEsK,SAAS,EAAOD,MAAOwS,EAAOhZ,SAEzC,KAAK5D,GACH,MAAO,CAAEuV,MAAO,IAElB,QACE,OAAOrR,IH7MXuR,WGiNgC,WAAyB,IAAxBvR,EAAuB,uDAAf,GAAI0Y,EAAW,uCACxD,OAAQA,EAAO5gB,MACb,KAAKiE,GACH,MAAO,CAAEoK,SAAS,GAEpB,KAAKnK,GACH,MAAO,CAAEmK,SAAS,EAAO6C,SAAS,GAEpC,KAAK/M,GACH,MAAO,CAAEkK,SAAS,EAAOD,MAAOwS,EAAOhZ,SAEzC,QACE,OAAOM,IH5NXsS,WGgOgC,WAAmC,IAAlCtS,EAAiC,uDAAzB,CAAEmN,KAAM,IAAMuL,EAAW,uCAClE,OAAQA,EAAO5gB,MACb,KAAKoE,GACH,MAAO,CAAEiK,SAAS,GAEpB,KAAKhK,GACH,MAAO,CAAEgK,SAAS,EAAO6C,SAAS,GAEpC,KAAK5M,GACH,MAAO,CAAE+J,SAAS,EAAOD,MAAOwS,EAAOhZ,SAEzC,KAAKrD,GACH,MAAO,CAAE8Q,KAAM,IAEjB,QACE,OAAOnN,IH7OXiX,aGoGuC,WAAyB,IAAxBjX,EAAuB,uDAAf,GAAI0Y,EAAW,uCAC/D,OAAQA,EAAO5gB,MACb,KAAKwE,GACH,MAAO,CAAE6J,SAAS,GAEpB,KAAK3J,GACH,MAAO,CACL2J,SAAS,EACT0S,QAAQ,EACRva,MAAOoa,EAAOhZ,SAGlB,KAAKnD,GACH,MAAO,CAAE4J,SAAS,EAAOD,MAAOwS,EAAOhZ,SAEzC,KAAKhD,GACH,MAAO,CAAEyJ,SAAS,EAAO0S,QAAQ,GAKnC,KAAKpc,GACH,MAAO,CAAE0J,SAAS,EAAOD,OAAO,GAMlC,QACE,OAAOlG,IHhIX8Y,aGXkC,WAAyB,IAAxB9Y,EAAuB,uDAAf,GAAI0Y,EAAW,uCAC1D,OAAQA,EAAO5gB,MACb,KAAK6E,GACH,MAAO,CAAEwJ,SAAS,GAEpB,KAAKvJ,GACH,MAAO,CAAEuJ,SAAS,EAAO4S,eAAgBL,EAAOhZ,QAASsJ,SAAS,GAEpE,KAAKnM,GACH,MAAO,CAAEsJ,SAAS,EAAOD,MAAOwS,EAAOhZ,SAEzC,KAAK5C,GACH,MAAO,GAET,QACE,OAAOkD,IHHXgZ,eGmIoC,WAAyB,IAAxBhZ,EAAuB,uDAAf,GAAI0Y,EAAW,uCAC5D,OAAQA,EAAO5gB,MACb,KAAKkD,EACH,MAAO,CAAEmL,SAAS,GAEpB,KAAKlL,EACH,MAAO,CAAEkL,SAAS,EAAO0S,QAAQ,GAEnC,KAAK3d,EACH,MAAO,CAAEiL,SAAS,EAAOD,MAAOwS,EAAOhZ,SAEzC,QACE,OAAOM,IH7IX+O,YI7BgC,WAAsB,IAArB/O,EAAoB,uDAAd,GAAI0Y,EAAU,uCACnD,OAAOA,EAAO5gB,MACV,KAAKiF,GACD,MAAO,CACHoJ,SAAQ,GAGhB,KAAKnJ,GACD,MAAO,CACHmJ,SAAQ,EACR6C,SAAS,EACTgG,MAAO0J,EAAOhZ,SAGtB,KAAKzC,GACD,MAAO,CACHkJ,SAAQ,EACRD,MAAOwS,EAAOhZ,SAGtB,KAAKxC,GACD,MAAO,GAGX,QACI,OAAO8C,IJKjB2P,aIDiC,WAAqE,IAApE3P,EAAmE,uDAA7D,CAACmG,SAAQ,EAAMmJ,WAAW,GAAIrB,gBAAgB,IAAKyK,EAAU,uCACnG,OAAOA,EAAO5gB,MACV,KAAKqF,GACD,OAAO,6BACA6C,GADP,IAEImG,SAAQ,IAGhB,KAAK/I,GACD,MAAO,CACH+I,SAAQ,EACR6I,MAAO0J,EAAOhZ,SAGtB,KAAKrC,GACD,MAAO,CACH8I,SAAQ,EACRD,MAAOwS,EAAOhZ,SAGtB,QACI,OAAOM,IJnBjB4P,SIwB6B,WAAsB,IAArB5P,EAAoB,uDAAd,GAAI0Y,EAAU,uCAChD,OAAOA,EAAO5gB,MACV,KAAKwF,GACD,MAAO,CACH6I,SAAQ,GAGhB,KAAK5I,GACD,MAAO,CACH4I,SAAQ,EACR6C,SAAS,GAGjB,KAAKxL,GACD,MAAO,CACH2I,SAAQ,EACRD,MAAOwS,EAAOhZ,SAGtB,KAAKjC,GACD,MAAO,GAEX,QACI,OAAOuC,IJ9CjBsN,YI8EgC,WAA+B,IAA9BtN,EAA6B,uDAAvB,CAACuN,OAAO,IAAKmL,EAAU,uCAC5D,OAAOA,EAAO5gB,MACV,KAAK4F,GACD,MAAO,CACHyI,SAAQ,GAGhB,KAAKxI,GACD,MAAO,CACHwI,SAAQ,EACRoH,OAAQmL,EAAOhZ,SAGvB,KAAK9B,GACD,MAAO,CACHuI,SAAQ,EACRD,MAAOwS,EAAOhZ,SAGtB,KAAK7B,GACD,MAAO,CACH0P,OAAQ,IAGhB,QACI,OAAOvN,IJtGjB2V,UI2G8B,WAA+B,IAA9B3V,EAA6B,uDAAvB,CAACuN,OAAO,IAAKmL,EAAU,uCAC1D,OAAOA,EAAO5gB,MACV,KAAKgG,GACD,MAAO,CACHqI,SAAQ,GAGhB,KAAKpI,GACD,MAAO,CACHoI,SAAQ,EACRoH,OAAQmL,EAAOhZ,SAGvB,KAAK1B,GACD,MAAO,CACHmI,SAAQ,EACRD,MAAOwS,EAAOhZ,SAGtB,QACI,OAAOM,IJ9HjB+P,aIiDiC,WAAsB,IAArB/P,EAAoB,uDAAd,GAAI0Y,EAAU,uCACpD,OAAOA,EAAO5gB,MACV,KAAKmG,GACD,MAAO,CACHkI,SAAQ,GAGhB,KAAKjI,GACD,MAAO,CACHiI,SAAQ,EACR6C,SAAS,GAGjB,KAAK7K,GACD,MAAO,CACHgI,SAAQ,EACRD,MAAOwS,EAAOhZ,SAGtB,KAAKtB,GACD,MAAO,GAEX,QACI,OAAO4B,MJrEbiZ,GAAuB/X,aAAagY,QAAQ,aAC9Cta,KAAKua,MAAMjY,aAAagY,QAAQ,cAChC,GAEEE,GAAqBlY,aAAagY,QAAQ,YAC5Cta,KAAKua,MAAMjY,aAAagY,QAAQ,aAChC,KAMEG,GAAe,CACnBjP,KAAM,CACJC,UAAW4O,GACXhL,gBAP+B/M,aAAagY,QAAQ,mBACpDta,KAAKua,MAAMjY,aAAagY,QAAQ,oBAChC,IAOF3Z,UAAW,CAAED,SAAU8Z,KAGnBE,GAAa,CAACC,MAQLC,GANDC,uBACZjB,GACAa,GACAK,+BAAoBC,mBAAe,WAAf,EAAmBL,M,OK5EzCM,IACGC,IAAIC,MACJD,IAAIE,MACJF,IAAIG,MAcJC,KAAK,CACJC,UAAW,CACTC,GAAI,CACFC,YAAa,CACXC,gBAAiB,kBAEjBC,gBAAiB,OACjBC,0BAA2B,UAC3BC,6BAA8B,SAC9BC,yBAA0B,SAC1BC,uBAAwB,QACxBC,2BAA4B,WAC5BC,yBAA0B,SAC1BC,wBAAyB,QAEzBC,mBAAoB,QACpBC,sBAAuB,WACvBC,oBAAqB,SAErBC,sBAAuB,oBAEvBC,gBAAiB,oBAEjBC,6BAA8B,gBAC9BC,0BAA2B,OAE3BC,2BAA4B,UAC5BC,0BAA2B,SAC3BC,yBAA0B,YAC1BC,+BAAgC,OAChCC,gCAAiC,QAEjCC,0BAA2B,UAC3BC,8BAA+B,cAC/BC,8BAA+B,SAC/BC,oBAAqB,QACrBC,0BAA2B,cAC3BC,qBAAsB,SACtBC,8BAA+B,WAC/BC,kCAAmC,eACnCC,kBAAmB,8BACnBC,sBAAuB,UACvBC,6BAA8B,iBAC9BC,qBAAsB,SACtBC,mCAAoC,YACpCC,+BAAgC,WAChCC,+BAAgC,WAChCC,+BAAgC,WAChCC,oCAAqC,gBACrCC,oCAAqC,gBACrCC,kCAAmC,UAEnCC,uBAAwB,UACxBC,+BAAgC,sBAChCC,iBAAkB,gBAClBC,8BAA+B,qBAC/BC,gCAAiC,iBAEjCC,oBAAqB,YACrBC,uBAAwB,WACxBC,uBAAwB,WACxBC,0BAA2B,cAE3BC,2BAA4B,WAC5BC,qBAAsB,WACtBC,2BAA4B,UAC5BC,wBAAyB,OACzBC,2BAA4B,cAC5BC,uBAAwB,UAExBC,oBAAqB,gBACrBC,0BAA2B,WAE3BC,gCAAiC,WACjCC,0BAA2B,UAC3BC,sCAAuC,iBACvCC,gCAAiC,SACjCC,oCAAqC,cACrCC,4BAA6B,qBAC7BC,2CAA4C,gBAC5CC,6BAA8B,QAC9BC,gCAAiC,WACjCC,2BAA4B,MAC5BC,6BAA8B,QAE9BC,2BAA4B,WAC5BC,0BAA2B,OAC3BC,8BAA+B,WAC/BC,oCAAqC,WACrCC,kCAAmC,gBACnCC,iCAAkC,eAClCC,iCAAkC,iBAClCC,2BAA4B,SAC5BC,6BAA8B,WAC9BC,4BAA6B,UAC7BC,8BAA+B,eAC/BC,sCAAuC,gBACvCC,wBAAyB,QACzBC,2BAA4B,WAC5BC,sBAAuB,MACvBC,wBAAyB,QAEzBC,iCAAkC,mBAClCC,qCAAsC,iBACtCC,6BAA8B,OAC9BC,8BAA+B,QAC/BC,iCAAkC,WAClCC,8BAA+B,QAE/B,qBAAsB,qBACtB,sBAAuB,sBACvBC,+BAAgC,UAChCC,oCAAqC,eACrCC,0CAA2C,cAC3CC,8BAA+B,SAC/BC,sCAAuC,eACvCC,8BAA+B,OAC/BC,+BAAgC,QAChCC,+BAAgC,cAChCC,+BAAgC,QAChCC,+BAAgC,QAChCC,kCAAmC,WACnCC,qCAAsC,cAEtCC,6BAA8B,SAC9BC,kCAAmC,UACnCC,2BAA4B,OAC5BC,2BAA4B,OAC5BC,4BAA6B,QAC7BC,2BAA4B,OAC5BC,gCAAiC,YAEjCC,kCAAmC,SACnCC,yBAA0B,SAC1BC,gCAAiC,cACjCC,+BAAgC,OAChCC,2CAA4C,aAC5CC,4CAA6C,cAC7CC,mCAAoC,WACpCC,+CAAgD,iBAChDC,2CAA4C,mBAC5CC,uDACE,4BAEFC,sCAAuC,mBACvCC,uCACE,2CACFC,0CAA2C,2BAC3CC,uCAAwC,oBACxCC,qCAAsC,uBACtCC,0CAA2C,oBAC3CC,2CACE,8CAEFC,iCAAkC,YAClCC,yBAA0B,OAC1BC,0BAA2B,QAC3BC,yBAA0B,OAC1BC,8BAA+B,YAE/BC,qBAAsB,UACtBC,kBAAmB,UACnBC,mCAAoC,cACpCC,0BAA2B,WAC3BC,sCAAuC,WACvCC,yBAA0B,gBAC1BC,2CAA4C,mBAC5CC,qBAAsB,WACtBC,2BAA4B,iBAC5BC,qCAAsC,oBACtCC,mCAAoC,uBACpCC,wCAAyC,oBACzCC,yCACE,kDACFC,sBAAuB,iCAEvB,qDACE,qDAEFC,4BAA6B,WAC7BC,qBAAsB,WACtBC,yBAA0B,OAC1BC,qCAAsC,aACtCC,sCAAuC,cACvCC,6BAA8B,WAC9BC,yCAA0C,iBAC1CC,qCAAsC,mBACtCC,iDAAkD,mBAClDC,+BAAgC,mBAChCC,uBAAwB,UAExBC,uCAAwC,mBACxCC,wCACE,2CACFC,2CACE,2BACFC,wCAAyC,oBACzCC,sCAAuC,uBACvCC,2CAA4C,oBAC5CC,4CACE,8CAEF,sCACE,sCACF,wBAAyB,0BAI7BC,GAAI,CACFpK,YAAa,CACXC,gBAAiB,qBAEjBC,gBAAiB,SACjBC,0BAA2B,SAC3BC,6BAA8B,gBAC9BC,yBAA0B,UAC1BC,uBAAwB,mBACxBC,2BAA4B,WAC5BC,yBAA0B,gBAC1BC,wBAAyB,gBAEzBC,mBAAoB,mBACpBC,sBAAuB,WACvBC,oBAAqB,gBAErBC,sBAAuB,yBAEvBC,gBAAiB,eAEjBC,6BAA8B,6BAC9BC,0BAA2B,QAE3BC,2BAA4B,SAC5BC,0BAA2B,aAC3BC,yBAA0B,0BAC1BC,+BAAgC,QAChCC,gCAAiC,gBAEjCC,0BAA2B,SAC3BC,8BAA+B,mBAC/BC,8BAA+B,YAC/BC,oBAAqB,OACrBC,0BAA2B,OAC3BC,qBAAsB,SACtBC,8BAA+B,cAC/BC,kCAAmC,4BACnCC,kBAAmB,oCACnBC,sBAAuB,SACvBC,6BAA8B,gBAC9BC,qBAAsB,QACtBC,mCAAoC,aACpCC,+BAAgC,wBAChCC,+BAAgC,iBAChCC,+BAAgC,uBAChCC,oCAAqC,aACrCC,oCAAqC,oBACrCC,kCAAmC,YAEnCC,uBAAwB,SACxBC,+BAAgC,sBAChCC,iBAAkB,eAClBC,8BAA+B,6BAC/BC,gCAAiC,yCAEjCC,oBAAqB,QACrBC,uBAAwB,QACxBC,uBAAwB,sBACxBC,0BAA2B,mCAE3BC,2BAA4B,YAC5BC,qBAAsB,wBACtBC,2BAA4B,qBAC5BC,wBAAyB,SACzBC,2BAA4B,eAC5BC,uBAAwB,eAExBC,oBAAqB,oCACrBC,0BAA2B,YAE3BC,gCAAiC,qBACjCC,0BAA2B,QAC3BC,sCAAuC,6BACvCC,gCAAiC,6BACjCC,oCAAqC,cACrCC,4BAA6B,8BAC7BC,2CAA4C,6BAC5CC,6BAA8B,WAC9BC,gCAAiC,eACjCC,2BAA4B,UAC5BC,6BAA8B,OAE9BC,2BAA4B,uBAC5BC,0BAA2B,yBAC3BC,8BAA+B,QAC/BE,kCAAmC,kBACnCC,iCAAkC,cAClCC,iCAAkC,6BAClCC,2BAA4B,SAC5BC,6BAA8B,qBAC9BC,4BAA6B,sCAC7BC,8BAA+B,yBAC/BC,sCAAuC,6BACvCC,wBAAyB,WACzBC,2BAA4B,eAC5BC,sBAAuB,UACvBC,wBAAyB,OAEzBC,iCAAkC,qBAClCC,qCAAsC,gBACtCC,6BAA8B,QAC9BC,8BAA+B,OAC/BC,iCAAkC,YAClCC,8BAA+B,QAE/B,qBAAsB,sCACtB,sBAAuB,uCACvBE,oCAAqC,uBACrCC,0CAA2C,8BAC3CC,8BAA+B,aAC/BC,sCAAuC,kBACvCC,8BAA+B,QAC/BC,+BAAgC,OAChCC,+BAAgC,0BAChCC,+BAAgC,QAChCC,+BAAgC,oCAChCC,kCAAmC,YACnCC,qCAAsC,OAEtCC,6BAA8B,gBAC9BC,kCAAmC,SACnCC,2BAA4B,kBAC5BC,2BAA4B,OAC5BC,4BAA6B,OAC7BC,2BAA4B,iBAC5BC,gCAAiC,cAEjCE,yBAA0B,aAC1BD,kCAAmC,SACnCE,gCAAiC,kBACjCC,+BAAgC,yBAChCC,2CACE,4CACFC,4CAA6C,sBAC7CC,mCAAoC,aACpCC,+CAAgD,2BAChDC,2CAA4C,4BAC5CC,uDACE,4BACFQ,iCAAkC,qBAClCC,yBAA0B,OAC1BC,0BAA2B,OAC3BC,yBAA0B,iBAC1BC,8BAA+B,cAE/BX,sCACE,uCACFC,uCACE,gFACFC,0CAA2C,0CAC3CC,uCAAwC,qBACxCC,qCAAsC,2BACtCC,0CAA2C,qBAC3CC,2CACE,oDAEFM,qBAAsB,mBACtBC,kBAAmB,YACnBC,mCAAoC,cACpCC,0BAA2B,aAC3BC,sCAAuC,mBACvCC,yBAA0B,kBAC1BE,qBAAsB,uBACtBC,2BAA4B,wBAC5BF,2CAA4C,oCAC5CG,qCAAsC,gBACtCC,mCAAoC,kCACpCC,wCAAyC,gBACzCC,yCACE,mEACFC,sBAAuB,wCAEvB,qDACE,4EAEFC,4BAA6B,uBAC7BC,qBAAsB,kBACtBC,yBAA0B,yBAC1BC,qCAAsC,uCACtCC,sCAAuC,sBACvCC,6BAA8B,aAC9BC,yCAA0C,2BAC1CC,qCAAsC,2BACtCC,iDAAkD,4BAClDC,+BAAgC,uBAChCC,uBAAwB,mBAExBC,uCACE,uCACFC,wCACE,gFACFC,2CACE,0CACFC,wCAAyC,qBACzCC,sCAAuC,2BACvCC,2CAA4C,qBAC5CC,4CACE,oDAEF,sCACE,wDACF,wBAAyB,8CAK/BE,YAAa,KACbC,UAAW,CACT1V,MAAO,CAAC,SAAU,UAAW,eAAgB,OAAQ,aACrD2V,OAAQ,CAAC,WAEXC,QAAS,CACPC,SAAU,+BAIhBC,IAASC,OACP,cAAC,IAAD,CAAUvL,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEFpJ,SAAS4U,eAAe,SAG1BjN,O","file":"static/js/main.28f7034a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useTranslation} from \"react-i18next\"\r\n\r\nfunction SearchBox() {\r\n\r\n    const [keyword, setKeyword] = useState('')\r\n    const { t } = useTranslation()\r\n\r\n    let historyy = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            historyy.push(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            historyy.push(historyy.push(historyy.location.pathname))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} className=\"d-flex search-position\">\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                placeholder={t('SearchBox_placeholder')}\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5 rounded'\r\n            ></Form.Control>\r\n\r\n            <Button\r\n                type='submit'\r\n                variant='outline-success'\r\n                className='p-1.5 mx-2 rounded'\r\n            >\r\n                <i className=\"fas fa-search\"></i>\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react'\r\n\r\nfunction globeIcon() {\r\n    const GlobeIcon = ({ width=32, height=32 }) => (\r\n        <svg \r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width={width} height={height}\r\n            fill=\"currentColor\"\r\n            viewBox=\"0 0 16 16\"\r\n        >\r\n            \r\n        <path d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm7.5-6.923c-.67.204-1.335.82-1.887\r\n                1.855A7.97 7.97 0 0 0 5.145 4H7.5V1.077zM4.09 4a9.267 9.267 0 0 1 .64-1.539 6.7 6.7 0 0 1\r\n                .597-.933A7.025 7.025 0 0 0 2.255 4H4.09zm-.582 3.5c.03-.877.138-1.718.312-2.5H1.674a6.958\r\n                6.958 0 0 0-.656 2.5h2.49zM4.847 5a12.5 12.5 0 0 0-.338 2.5H7.5V5H4.847zM8.5 5v2.5h2.99a12.495\r\n                12.495 0 0 0-.337-2.5H8.5zM4.51 8.5a12.5 12.5 0 0 0 .337 2.5H7.5V8.5H4.51zm3.99\r\n                0V11h2.653c.187-.765.306-1.608.338-2.5H8.5zM5.145 12c.138.386.295.744.468 1.068.552 1.035 1.218 1.65 1.887\r\n                1.855V12H5.145zm.182 2.472a6.696 6.696 0 0 1-.597-.933A9.268 9.268 0 0 1 4.09 12H2.255a7.024 7.024 0 0 0\r\n                3.072 2.472zM3.82 11a13.652 13.652 0 0 1-.312-2.5h-2.49c.062.89.291 1.733.656 2.5H3.82zm6.853 3.472A7.024\r\n                7.024 0 0 0 13.745 12H11.91a9.27 9.27 0 0 1-.64 1.539 6.688 6.688 0 0 1-.597.933zM8.5 12v2.923c.67-.204 1.335-.82\r\n                1.887-1.855.173-.324.33-.682.468-1.068H8.5zm3.68-1h2.146c.365-.767.594-1.61.656-2.5h-2.49a13.65 13.65 0 0 1-.312 \r\n                2.5zm2.802-3.5a6.959 6.959 0 0 0-.656-2.5H12.18c.174.782.282 1.623.312 2.5h2.49zM11.27 2.461c.247.464.462.98.64 1.539h1.835a7.024 \r\n                7.024 0 0 0-3.072-2.472c.218.284.418.598.597.933zM10.855 4a7.966 7.966 0 0 0-.468-1.068C9.835 1.897 9.17 1.282 8.5 1.077V4h2.355z\"/>\r\n        </svg>\r\n    )\r\n\r\n    return(\r\n        <GlobeIcon />\r\n    )\r\n    \r\n}\r\n\r\nexport default globeIcon","import React, { useState } from \"react\";\r\nimport { Nav, NavDropdown } from 'react-bootstrap';\r\nimport i18next from \"i18next\";\r\nimport Flags from 'country-flag-icons/react/3x2'\r\nimport cookies from 'js-cookie'\r\nimport GlobeIcon from '../images/globeIcon.js'\r\n\r\n\r\nfunction LanguageSwitcher_supp(props){\r\n\r\n    const Flag = Flags[props.country_flag];\r\n\r\n    return(\r\n        <Flag className='flag'/> \r\n    )\r\n}\r\n\r\nfunction LanguageSwitcher() {\r\n\r\n    const language = [\r\n        {\r\n            code: 'en',\r\n            name: 'English',\r\n            country: 'GB',\r\n        },\r\n\r\n        {\r\n            code: 'pl',\r\n            name: 'Polski',\r\n            country: 'PL',\r\n        },\r\n        \r\n    ]    \r\n\r\n    const [currentLanguageCode, setCurrentLanguageCode] = useState(cookies.get('i18next') || 'en') \r\n    const currentLanguage = language.find(l => l.code === currentLanguageCode)\r\n\r\n    const handleChangeLng = (countryCode) => {\r\n        i18next.changeLanguage(countryCode)\r\n        setCurrentLanguageCode(countryCode) \r\n    }\r\n\r\n    return (\r\n        <Nav className=\"ml-auto lng-position\">\r\n            <LanguageSwitcher_supp country_flag={currentLanguage.country} />\r\n            <NavDropdown \r\n                title={<GlobeIcon />}  \r\n            >\r\n                  \r\n                {language.map(({code, name, country}) => (\r\n                <div className=\"btn-lgn\" key={country}>\r\n                    <NavDropdown.Item                              \r\n                        onClick = {() => handleChangeLng(code)}\r\n                        disabled = {currentLanguage.code === code}\r\n                        className= 'btn-language'\r\n                    > \r\n                        <LanguageSwitcher_supp country_flag={country} />\r\n                            {name}                       \r\n                    </NavDropdown.Item>\r\n                </div>\r\n                ))}\r\n            </NavDropdown>    \r\n        </Nav>\r\n               \r\n    )\r\n\r\n}\r\n\r\nexport default LanguageSwitcher","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\nexport const USER_REGISTER_RESET = \"USER_REGISTER_RESET\";\r\n\r\nexport const USER_EMAIL_EXIST_REQUEST = \"USER_EMAIL_EXIST_REQUEST\";\r\nexport const USER_EMAIL_EXIST_SUCCESS = \"USER_EMAIL_EXIST_SUCCESS\";\r\nexport const USER_EMAIL_EXIST_FAIL = \"USER_EMAIL_EXIST_FAIL\";\r\n\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\r\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\r\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\";\r\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\";\r\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\";\r\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET\";\r\n\r\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\";\r\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\";\r\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\";\r\nexport const USER_LIST_RESET = \"USER_LIST_RESET\";\r\n\r\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\";\r\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\r\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\";\r\n\r\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\r\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\r\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\";\r\n\r\nexport const PASSWORD_RESET_REQUEST = \"PASSWORD_RESET_REQUEST\";\r\nexport const PASSWORD_RESET_FAIL = \"PASSWORD_RESET_FAIL\";\r\nexport const PASSWORD_RESET_SUCCESS = \"PASSWORD_RESET_SUCCESS\";\r\n\r\nexport const PASSWORD_RESET_CONFIRM_REQUEST = \"PASSWORD_RESET_CONFIRM_REQUEST\";\r\nexport const PASSWORD_RESET_CONFIRM_FAIL = \"PASSWORD_RESET_CONFIRM_FAIL\";\r\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = \"PASSWORD_RESET_CONFIRM_SUCCESS\";\r\n\r\n//Djoser\r\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const USER_LOADED_SUCCESS = \"USER_LOADED_SUCCESS\";\r\nexport const USER_LOADED_FAIL = \"USER_LOADED_FAIL\";\r\n\r\nexport const ACTIVATE_REQUEST = \"ACTIVATE_REQUEST\";\r\nexport const ACTIVATE_SUCCESS = \"ACTIVATE_SUCCESS\";\r\nexport const ACTIVATE_FAIL = \"ACTIVATE_FAIL\";\r\nexport const ACTIVATE_RESET = \"ACTIVATE_RESET\";\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n\r\n\r\n","import axios from \"axios\";\r\nimport {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_RESET,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  PASSWORD_RESET_REQUEST,\r\n  PASSWORD_RESET_FAIL,\r\n  PASSWORD_RESET_SUCCESS,\r\n  PASSWORD_RESET_CONFIRM_REQUEST,\r\n  PASSWORD_RESET_CONFIRM_FAIL,\r\n  PASSWORD_RESET_CONFIRM_SUCCESS,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  USER_LOADED_SUCCESS,\r\n  USER_LOADED_FAIL,\r\n  ACTIVATE_REQUEST,\r\n  ACTIVATE_SUCCESS,\r\n  ACTIVATE_FAIL,\r\n  USER_EMAIL_EXIST_REQUEST,\r\n  USER_EMAIL_EXIST_SUCCESS,\r\n  USER_EMAIL_EXIST_FAIL,\r\n} from \"../constants/UserConstants\";\r\n\r\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\r\n\r\nexport const activate = (uid, token) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: ACTIVATE_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify({ uid, token });\r\n\r\n    console.log(\"body\", body);\r\n\r\n    const { data } = await axios.post(\r\n      //\"http://127.0.0.1:8000/auth/users/activation/\",\r\n      \"/auth/users/activation/\",\r\n      body,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ACTIVATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    console.log(\"Action response\", data);\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ACTIVATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// export const load_user = () => async (dispatch) => {\r\n//   if (localStorage.getItem(\"access\")) {\r\n//     const config = {\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//         Authorization: `JWT ${localStorage.getItem(\"access\")}`,\r\n//         Accept: \"application/json\",\r\n//       },\r\n//     };\r\n\r\n//     try {\r\n//       const res = await axios.get(`/auth/users/me/`, config);\r\n\r\n//       dispatch({\r\n//         type: USER_LOADED_SUCCESS,\r\n//         payload: res.data,\r\n//       });\r\n//     } catch (err) {\r\n//       dispatch({\r\n//         type: USER_LOADED_FAIL,\r\n//       });\r\n//     }\r\n//   } else {\r\n//     dispatch({\r\n//       type: USER_LOADED_FAIL,\r\n//     });\r\n//   }\r\n// };\r\n\r\n// export const login2 = (password, userName) => async (dispatch) => {\r\n//   try {\r\n//     dispatch({\r\n//       type: LOGIN_REQUEST,\r\n//     });\r\n\r\n//     const config = {\r\n//       headers: {\r\n//         \"Content-type\": \"application/json\",\r\n//       },\r\n//     };\r\n\r\n//     const { data } = await axios.post(\r\n//       \"/auth/users/\",\r\n//       { username: userName, password: password },\r\n//       config\r\n//     );\r\n\r\n//     dispatch({\r\n//       type: LOGIN_SUCCESS,\r\n//       payload: data,\r\n//     });\r\n\r\n//     const body = JSON.stringify(data);\r\n\r\n//     dispatch(load_user());\r\n//   } catch (error) {\r\n//     dispatch({\r\n//       type: LOGIN_FAIL,\r\n//     });\r\n//   }\r\n// };\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users/login/\",\r\n      { username: email, password: password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: ORDER_LIST_MY_RESET });\r\n  dispatch({ type: USER_LIST_RESET });\r\n};\r\n\r\nexport const registerUser = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    // const { data } = await axios.post(\r\n    //   \"/api/users/register/\",\r\n    //   { name: name, email: email, password: password },\r\n    //   config\r\n    // );\r\n\r\n    //Djoser\r\n    const { data } = await axios.post(\r\n      //\"http://localhost:8000/auth/users/\",\r\n      \"/auth/users/\",\r\n      {\r\n        username: name,\r\n        email: email,\r\n        password: password,\r\n        re_password: password,\r\n      },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const reset_password = (email) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: PASSWORD_RESET_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify({ email });\r\n\r\n    const { data } = await axios.post(\r\n      //\"api/users/reset_password/\",\r\n      \"/auth/users/reset_password/\",\r\n      body,\r\n      config\r\n    );\r\n\r\n    console.log(\"data\", data);\r\n\r\n    dispatch({\r\n      type: PASSWORD_RESET_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PASSWORD_RESET_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const email_exist = (email) => async (dispatch) => {\r\n  console.log(\"wchodzę do email_exist\", email);\r\n\r\n  try {\r\n    dispatch({\r\n      type: USER_EMAIL_EXIST_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify({ email });\r\n\r\n    const { data } = await axios.post(\"api/users/email_exist/\", body, config);\r\n\r\n    dispatch({\r\n      type: USER_EMAIL_EXIST_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_EMAIL_EXIST_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const resetPasswordConfirm =\r\n  (uid, token, new_password, re_new_password) => async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: PASSWORD_RESET_CONFIRM_REQUEST,\r\n      });\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const body = JSON.stringify({\r\n        uid,\r\n        token,\r\n        new_password,\r\n        re_new_password,\r\n      });\r\n      await axios.post(\"/auth/users/reset_password_confirm/\", body, config);\r\n\r\n      dispatch({\r\n        type: PASSWORD_RESET_CONFIRM_SUCCESS,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PASSWORD_RESET_CONFIRM_FAIL,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/users/profile/update/`,\r\n      user,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/`, config);\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.delete(`/api/users/delete/${id}/`, config);\r\n\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/users/update/${user.id}/`,\r\n      user,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_SUCCESS,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport LanguageSwitcher from \"./LanguageSwitcher\";\r\nimport { logout } from \"../actions/userActions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nfunction Header() {\r\n  const { t } = useTranslation();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const [navbar, setNavbar] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  const changeNavbar = () => {\r\n    if (window.scrollY >= 50) {\r\n      setNavbar(true);\r\n    } else {\r\n      setNavbar(false);\r\n    }\r\n  };\r\n\r\n  window.addEventListener(\"scroll\", changeNavbar);\r\n\r\n  return (\r\n    <header>\r\n      <Navbar\r\n        id=\"navbar\"\r\n        variant=\"dark\"\r\n        expand=\"xl\"\r\n        fixed=\"top\"\r\n        collapseOnSelect\r\n        data-aos=\"fade-down\"\r\n        className={navbar ? \"navbaractive\" : \"navbarcss\"}\r\n      >\r\n        <Container>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand>JKMCODE SHOP</Navbar.Brand>\r\n          </LinkContainer>\r\n\r\n          <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ml-auto\">\r\n              <SearchBox />\r\n              <LinkContainer to=\"/cart\">\r\n                <Nav.Link className=\"margin\">\r\n                  <i className=\"fas fa-shopping-cart\"></i>\r\n                  {t(\"Header_btn_cart\")}\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.username}>\r\n                  <LinkContainer to=\"/profile\">\r\n                    <NavDropdown.Item>\r\n                      {t(\"Header_navdrodown_profile\")}\r\n                    </NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/orders\">\r\n                    <NavDropdown.Item>\r\n                      {t(\"Header_navdrodown_user_order\")}\r\n                    </NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    {t(\"Header_navdrodown_logout\")}\r\n                  </NavDropdown.Item>\r\n\r\n                  {userInfo && userInfo.IsAdmin && (\r\n                    <div>\r\n                      <NavDropdown.Divider />\r\n                      <LinkContainer to=\"/admin\">\r\n                        <NavDropdown.Item>\r\n                          {t(\"Header_navdrodown_admin\")}\r\n                        </NavDropdown.Item>\r\n                      </LinkContainer>\r\n                    </div>\r\n                  )}\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to=\"/login\">\r\n                  <Nav.Link className=\"margin\">\r\n                    <i className=\"fas fa-user\"></i>\r\n                    Login\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n            </Nav>\r\n\r\n            {/* <Nav className=\"ml-auto\">\r\n                                {userInfo && userInfo.IsAdmin && (\r\n                                    <NavDropdown title='Admin' id='adminmenue' className=\"text-right\">\r\n                                        <LinkContainer to='/admin/userlist'>\r\n                                            <NavDropdown.Item>{t('Header_navdrodown_user')}</NavDropdown.Item>\r\n                                        </LinkContainer>\r\n                                        <NavDropdown.Divider />\r\n                                        <LinkContainer to='/admin/productlist'>\r\n                                            <NavDropdown.Item>{t('Header_navdrodown_products')}</NavDropdown.Item>\r\n                                        </LinkContainer>\r\n                                        <NavDropdown.Divider />\r\n                                        <LinkContainer to='/admin/orderlist'>\r\n                                            <NavDropdown.Item>{t('Header_navdrodown_orders')}</NavDropdown.Item>\r\n                                        </LinkContainer>\r\n                                    </NavDropdown>           \r\n                                )}\r\n                        </Nav> */}\r\n\r\n            <LanguageSwitcher />\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3 \">Copyright &copy; JKMCODE SHOP</Col>       \r\n                </Row>\r\n            </Container>    \r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nfunction Rating({value, text, color}) {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style = {{color}} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style = {{color}} className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style = {{color}} className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style = {{color}} className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style = {{color}} className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React, {MauseEventHandler, useState} from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\nimport { useTranslation} from \"react-i18next\"\r\n\r\nfunction Product({ product }) {\r\n\r\n    const [choosePicker, setChoosePicker] = useState(false)\r\n    \r\n\r\n    const EnterchoosePicker = () =>{\r\n        setChoosePicker(true)\r\n    }\r\n\r\n    const LeavechoosePicker = () =>{\r\n        setChoosePicker(false)\r\n    }\r\n    \r\n    return (\r\n        <div >\r\n            <Card className= {choosePicker ? 'enterpicker my-3 p-3 rounded' : 'leavepicker my-3 p-3 rounded'}\r\n                 onMouseEnter={EnterchoosePicker}\r\n                 onMouseLeave={LeavechoosePicker}>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Img src={product.image} />\r\n                </Link>\r\n\r\n                <Card.Body>\r\n                    <Link to={`/product/${product._id}`}>\r\n                        <Card.Title as=\"div\">\r\n                            <strong>{product.name}</strong>\r\n                        </Card.Title>\r\n                    </Link>\r\n                \r\n\r\n                    <Card.Text as=\"div\">\r\n                        <div className=\"my-3\">\r\n                            <Rating value={product.rating} text={` number of reviews: ${product.numReviews}`} color={'#f8e825'} />\r\n                        </div>\r\n                    </Card.Text>\r\n\r\n                    <Card.Text as=\"h3\">\r\n                        ${product.price}\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                height:'100px',\r\n                width:'100px',\r\n                margin:'auto',\r\n                display:'block'\r\n\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({variant, children}) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({pages, page, keyword='', isAdmin=false}) {\r\n    if(keyword){\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) =>(\r\n                <LinkContainer \r\n                key={x + 1}\r\n                to={!isAdmin ?\r\n                    `/?keyword=${keyword}&page=${x+1}`\r\n                    : `/admin/productlist/?keyword=${keyword}&page=${x+1}`\r\n                    } \r\n                >\r\n                    <Pagination.Item active={x + 1 === page }>\r\n                        {x+1}\r\n                    </Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import React, {useState}  from 'react'\r\nimport Calendar from 'react-calendar'\r\nimport 'react-calendar/dist/Calendar.css'\r\n\r\n//https://www.npmjs.com/package/react-calendar\r\n//C:\\Users\\jakub\\Desktop\\ecommerce\\frontend\\node_modules\\react-calendar\\dist\r\n\r\nfunction BookingCalendar() {\r\n\r\n\r\n    const props = { placeholder: 'Please Select...' };\r\n    const [openPicker, setOpenPicker] = React.useState(false);\r\n    const show = () => {\r\n        setOpenPicker(true);\r\n    };\r\n    const onClose = () => {\r\n        setOpenPicker(false);\r\n    };\r\n\r\n    \r\n    const [value, onChange] = useState(new Date());\r\n    console.log(value.getDate)\r\n\r\n    return (\r\n        <div className='picker-calendar'>\r\n            <Calendar\r\n            className = 'datePicker'\r\n            locale='pl'\r\n            minDate={new Date()}\r\n            maxDetail = 'month'\r\n            onChange={onChange}\r\n            value={value}\r\n            //calendarType = 'US'\r\n            next2Label = {null}\r\n            prev2Label = {null}\r\n            showDoubleView = {true}\r\n            selectRange = {true}\r\n        />\r\n\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default BookingCalendar\r\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n\r\nexport const PRODUCT_LIST_IMAGES_REQUEST = 'PRODUCT_LIST_IMAGES_REQUEST'\r\nexport const PRODUCT_LIST_IMAGES_SUCCESS = 'PRODUCT_LIST_IMAGES_SUCCESS'\r\nexport const PRODUCT_LIST_IMAGES_FAIL = 'PRODUCT_LIST_IMAGES_FAIL'","import axios from \"axios\";\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from \"../constants/productsConstants\";\r\n\r\nexport const listProducts =\r\n  (keyword = \"\") =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n      const { data } = await axios.get(`/api/products${keyword}`);\r\n\r\n      dispatch({\r\n        type: PRODUCT_LIST_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_TOP_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/top/`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_TOP_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProductsDetails = (_id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/${_id}`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.delete(`/api/products/delete/${id}/`, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/products/create/`, {}, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/update/${product._id}/`,\r\n      product,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProductReview =\r\n  (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        `/api/products/${productId}/reviews/`,\r\n        review,\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_FAIL,\r\n        payload:\r\n          error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n\r\n    useEffect(() =>{\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return ( loading ? <Loader/>\r\n    :error \r\n    ? <Message variant='danger'>{error}</Message>\r\n    : (\r\n        <Carousel pause='hover' className='bg-css'>\r\n            {products.map((product, index) => (\r\n                <Carousel.Item key={index}>\r\n                    <Link to={`/product/${product._id}`}>\r\n                        <Image src={product.image} alt={product.name} fluid/>\r\n                        <Carousel.Caption className='carousel.caption'>\r\n                            <h4>{product.name} (${product.price})</h4>\r\n                        </Carousel.Caption>\r\n                    </Link>\r\n                </Carousel.Item>\r\n            ))}\r\n        </Carousel>\r\n    )\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, {useState, useEffect}  from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Button} from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport BookingCalendar from '../components/BookingCalendar'\r\nimport ExampleDatePicker from '../components/DatePicker'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\nimport { useTranslation} from \"react-i18next\"\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nfunction HomeScreen() {\r\n    const { t } = useTranslation()\r\n    const dispach = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const {error, loading, products, page, pages} = productList\r\n\r\n    let historyy = useHistory()\r\n    let keyword = historyy.location.search\r\n\r\n    console.log('historyy', historyy)\r\n    console.log('keyword', keyword)\r\n\r\n    useEffect(() => {\r\n        dispach(listProducts(keyword))\r\n    },[dispach, keyword]) \r\n\r\n    return (\r\n        <div className='margin-top-from-navbar'>\r\n            {/* <div className='test-date-picker'>\r\n                <ExampleDatePicker />\r\n            \r\n            <LinkContainer to={'/tutorial'}>\r\n                <Button className='btn-sm'>\r\n                    Tutorial\r\n                </Button>                                     \r\n            </LinkContainer>\r\n            </div> */}\r\n\r\n            {!keyword && <ProductCarousel />}\r\n                <h3>{t('latest_products')}</h3>\r\n            \r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <div className='zoom'>\r\n                            <Row>\r\n                                {products.map(product => (\r\n                                    <Col key={product._id} sm={12} md={6} lg={4} xl={3} >\r\n                                        <Product product={product} />\r\n                                    </Col>\r\n                                ))}\r\n                            </Row>\r\n                        </div>\r\n                            <Paginate page={page} pages={pages} keyword={keyword} />\r\n                    </div> \r\n                    \r\n            \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React from 'react'\r\n\r\n//https://github.com/Ziratsu/Slider-React\r\n//https://www.youtube.com/watch?v=og3wCO98HkQ\r\nfunction BtnSlider({direction, moveSlide}) {\r\n    return (\r\n        <button\r\n            onClick = {moveSlide} \r\n            className={direction === \"next\" ? 'btn-slide next' : 'btn-slide prev'}\r\n        >\r\n\r\n\r\n            {direction === 'next' ? <i class=\"fas fa-arrow-right\"></i> : <i class=\"fas fa-arrow-left\"></i>}\r\n        </button>\r\n            \r\n        \r\n    )\r\n}\r\n\r\nexport default BtnSlider\r\n","import axios from 'axios'\r\n\r\nimport {\r\n\r\n    PRODUCT_LIST_IMAGES_REQUEST,\r\n    PRODUCT_LIST_IMAGES_SUCCESS,\r\n    PRODUCT_LIST_IMAGES_FAIL,\r\n\r\n} from '../constants/productsConstants'\r\n\r\n\r\n\r\nexport const listProductImages = (productId) => async(dispatch) => {\r\n    \r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_IMAGES_REQUEST })\r\n        console.log('product_id', productId)\r\n        const { data } = await axios.get(`/api/products/images/${productId}`)\r\n        console.log('ImagesAcrion', data)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_IMAGES_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch(error){\r\n        dispatch({\r\n            type: PRODUCT_LIST_IMAGES_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n\r\n    }\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport BtnSlider from './BtnSlider'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { listProductImages } from '../actions/imagesActions'\r\nimport Loader from '../components/Loader'\r\n\r\nfunction ImageSlider() {\r\n\r\n    const [slideIndex, setSlideIndex] = useState(1)\r\n\r\n    const productDetails= useSelector(state => state.productDetails)\r\n    const { product } = productDetails\r\n\r\n    const productImagesList = useSelector(state => state.productImagesList)\r\n    const { images } = productImagesList\r\n    console.log('ImageSlider',images)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const nextSlide = () => {\r\n        \r\n        if(slideIndex !== images.length){\r\n            setSlideIndex(slideIndex + 1)\r\n        } \r\n        else if (slideIndex === images.length){\r\n            setSlideIndex(1)\r\n        }\r\n    }\r\n\r\n    const prevSlide = () => {\r\n        if(slideIndex !== 1){\r\n            setSlideIndex(slideIndex - 1)\r\n        }\r\n        else if (slideIndex === 1){\r\n            setSlideIndex(images.length)\r\n        }\r\n    }\r\n\r\n    const moveDot = index => {\r\n        setSlideIndex(index)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (product._id != NaN){\r\n            dispatch(listProductImages(Number(product._id)))\r\n        } \r\n    }, [product])\r\n\r\n    return (\r\n        <div className='container-slider'>\r\n            { !images ? <Loader/> :\r\n                images.map((image, index) => {\r\n                return (\r\n                    <div key={index} className= { slideIndex === index + 1 ? 'slide_img active-anim' : 'slide_img' } >\r\n                        <img src={image.images} />\r\n                    </div>\r\n                ) \r\n            })}\r\n\r\n            <BtnSlider moveSlide={nextSlide} direction={'next'} />\r\n            <BtnSlider moveSlide={prevSlide} direction={'prev'} />\r\n\r\n            {/* <div className=\"container-dots\">\r\n                {Array.from({length: images.length}).map((item, index) => (\r\n                    <div \r\n                    onClick={() => moveDot(index + 1)}\r\n                    className={slideIndex === index + 1 ? \"dot active\" : \"dot\"}\r\n                    key={index}\r\n                    ></div>\r\n                ))}\r\n            </div> */}\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ImageSlider\r\n","import React, {useState, useEffect}  from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector }from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from \"react-bootstrap\"\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport ImageSlider from '../components/ImageSlider'\r\nimport SwitcherLanguag3 from '../components/LanguageSwitcher'\r\nimport { listProductsDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productsConstants'\r\nimport { useTranslation} from \"react-i18next\"\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n    const { t } = useTranslation()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const stock = {\r\n        inStock: t('ProductScreen_status_in_stock')\r\n    }\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading:loadingProductReview,\r\n        error:errorProductReview,\r\n        success:successProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if(successProductReview){\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({type:PRODUCT_CREATE_REVIEW_RESET})\r\n        }\r\n\r\n        dispatch(listProductsDetails(match.params._id))\r\n    \r\n    },[dispatch, match, successProductReview]) \r\n\r\n    const addToCartHandler = () =>{\r\n        history.push(`/cart/${match.params._id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params._id, {\r\n                rating,\r\n                comment\r\n            }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div className='margin-top-from-navbar'>\r\n            <Link to='/'\r\n                className = 'btn btn-success my-3 rounded bg-brown'\r\n                >\r\n                {t('ProductScreen_btn_go_back')}</Link>  \r\n            {loading ?\r\n                <Loader/>\r\n                : error \r\n                    ? <Message variant='danger'>{error}</Message>\r\n                :(\r\n                    <div>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                {/* <Image src={product.image} alt={product.image} fluid /> */}\r\n                                <ImageSlider className='img-slider'/>\r\n                            </Col>\r\n            \r\n                            <Col md={5}>\r\n                                <ListGroup>\r\n                                    <ListGroup.Item>\r\n                                        <h4>{product.name}</h4>\r\n                                    </ListGroup.Item>\r\n                                    \r\n                                    <ListGroup.Item>\r\n                                    <Row>\r\n                                        \r\n                                        <Col><Rating value={product.rating} color={'#f8e825'} /></Col>\r\n                                        \r\n                                        <Col><Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} /></Col>\r\n                                    </Row>\r\n                                    </ListGroup.Item>\r\n            \r\n                                    <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col><strong>{t('ProductScreen_price')}:</strong></Col>\r\n                                        <Col>${product.price}</Col>\r\n                                    </Row>\r\n                                    </ListGroup.Item>\r\n            \r\n                                    <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col><strong>{t('ProductScreen_description')}:</strong></Col>\r\n                                        <Col>{product.description}</Col>\r\n                                    </Row>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                                <Card>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>{t('ProductScreen_status')}:</Col>\r\n                                                <Col>\r\n                                                    {/* <SwitcherLanguag3 /> */}\r\n                                                    {product.countInStock > 0 ? t('ProductScreen_status_in_stock') : t('ProductScreen_status_out_of_stock') }\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                        {product.countInStock > 0 &&(\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col className='vertical-center'>\r\n                                                        {t('ProductScreen_qty')}:\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <Form.Control\r\n                                                            as=\"select\"\r\n                                                            value = {qty}\r\n                                                            onChange = {(e) => setQty(e.target.value)}\r\n                                                        >\r\n                                                            {\r\n                                                                [...Array(product.countInStock).keys()].map((x) =>(\r\n                                                                    <option key={x + 1} value={x + 1}>\r\n                                                                        {x + 1}\r\n                                                                    </option>\r\n                                                                ))\r\n                                                            }\r\n                                                            \r\n                                                        </Form.Control>\r\n                                                    </Col>\r\n\r\n                                                </Row>\r\n                                            </ListGroup.Item>                             \r\n\r\n                                        )}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <div className=\"d-grid gap-2\">\r\n                                                <Button\r\n                                                onClick={addToCartHandler}\r\n                                                type='button'\r\n                                                className= 'bg-brown rounded'\r\n                                                disabled={product.countInStock==0}\r\n                                                >\r\n                                                {t('ProductScreen_btn_add_to_cart')}\r\n                                                </Button>\r\n                                            </div>\r\n                                        </ListGroup.Item>     \r\n                                    </ListGroup>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col md={6} className='my-5'>\r\n                                <h4>{t('ProductScreen_reviews')}</h4>\r\n                                {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n\r\n                                <ListGroup variant='flush'>\r\n                                    {product.reviews.map((review) =>(\r\n                                        <ListGroup.Item key={review._id}>\r\n                                            <strong>{review.name}</strong>\r\n                                            <Rating value={review.rating} color='#f8e825'/>\r\n                                            <p>{review.createdAt.substring(0, 10)}</p>\r\n                                            <p>{review.comment}</p>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n\r\n                                    <ListGroup.Item>\r\n                                        <h4>{t('ProductScreen_write_a_review')}</h4>\r\n\r\n                                        {loadingProductReview && <Loader/>}\r\n                                        {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                        {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                        {userInfo ? (\r\n                                            <Form onSubmit={submitHandler}>\r\n                                                <Form.Group controlId='rating'>\r\n                                                    <Form.Label>{t('ProductScreen_rating')}</Form.Label>\r\n                                                    <Form.Control\r\n                                                        as='select'\r\n                                                        value={rating}\r\n                                                        onChange={(e) => setRating(e.target.value)}\r\n                                                    >\r\n                                                        <option value=''>{t('ProductScreen_form_review_selector')}</option>\r\n                                                        <option value='1'>{t('ProductScreen_form_review_poor')}</option>\r\n                                                        <option value='2'>{t('ProductScreen_form_review_fair')}</option>\r\n                                                        <option value='3'>{t('ProductScreen_form_review_good')}</option>\r\n                                                        <option value='4'>{t('ProductScreen_form_review_very_good')}</option>\r\n                                                        <option value='5'>{t('ProductScreen_form_review_excellent')}</option>\r\n                                                    </Form.Control>\r\n                                                </Form.Group>\r\n\r\n                                                <Form.Group controlId='comment' className='mb-3'>\r\n                                                    <Form.Label>{t('ProductScreen_form_review_comment')}</Form.Label>\r\n                                                    <Form.Control\r\n                                                        as='textarea'\r\n                                                        row='10'\r\n                                                        value={comment}\r\n                                                        onChange={(e) => setComment(e.target.value)}\r\n                                                    ></Form.Control>\r\n                                                </Form.Group>\r\n\r\n                                                    \r\n                                                <Button\r\n                                                    disabled={loadingProductReview}\r\n                                                    type= 'submit'\r\n                                                    variant = 'primary'\r\n                                                    className= 'bg-brown rounded'\r\n                                                >\r\n                                                    {t('ProductScreen_btn_form_submit')}\r\n                                                </Button>\r\n                                            \r\n                                            </Form>\r\n                                            \r\n                                        ) : (\r\n                                            <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\r\n                                        )}\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'","import axios from 'axios'\r\nimport {\r\n    CART_ADD_ITEM, \r\n    CART_REMOVE_ITEM, \r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstans'\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) =>{\r\n    const {data} = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload:{\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type:CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })    \r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type:CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })    \r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type:CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })    \r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, {useEffect, useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\nimport { useTranslation} from \"react-i18next\"\r\n\r\nfunction CartScreen({match, location, history}) {\r\n\r\n    const { t } = useTranslation()\r\n    const productId = match.params._id\r\n    const qty =location.search ? Number(location.search.split('=')[1]) :1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {cartItems} = cart \r\n\r\n    useEffect(() =>{\r\n        if(productId){\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromVartHandler = (id) =>{\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHendler = () =>{\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <div className='margin-top-from-navbar'>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <h1>{t('CartScreen_title')}</h1>\r\n                    {cartItems.length === 0 ? (\r\n                        <Message variant='info'>\r\n                            {t('CartScreen_empty_cart_message')} <Link to='/'> {t('CartScreen_btn_go_back')}</Link>\r\n                        </Message>\r\n\r\n                    ) : (\r\n                            <ListGroup variant='flush'>\r\n                                {cartItems.map(item => (\r\n                                    <ListGroup.Item key={item.product}>\r\n                                        <Row className=\"CartScreenRow\">\r\n                                            <Col md={2}>\r\n                                                <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                            </Col>\r\n                                            <Col md={3}>\r\n                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                            </Col>\r\n                                            <Col md={2}>\r\n                                                ${item.price}\r\n                                            </Col>\r\n                                            <Col md={3}>\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    value = {item.qty}\r\n                                                    onChange = {(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                                >\r\n                                                    {\r\n                                                        [...Array(item.countInStock).keys()].map((x) =>(\r\n                                                            <option key={x + 1} value={x + 1}>\r\n                                                                {x + 1}\r\n                                                            </option>\r\n                                                        ))\r\n                                                    }\r\n                                                            \r\n                                                </Form.Control>\r\n                                            </Col>\r\n\r\n                                            <Col md={1}>\r\n                                                <Button\r\n                                                    type='button'\r\n                                                    variant = 'light'\r\n                                                    onClick = {() => removeFromVartHandler(item.product)}\r\n                                                >\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                            </Col>\r\n\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                            </ListGroup>\r\n\r\n\r\n                        )}\r\n                    \r\n                    \r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>{t('CartScreen_empty_subtotal_items')} ({cartItems.reduce((acc, item) => acc + item.qty, 0)})</h2>\r\n                                ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n\r\n\r\n                        <ListGroup.Item variant='flush'>\r\n                        <div className=\"d-grid gap-2\">\r\n                            <Button\r\n                                type='button'\r\n                                className='bnt-block bg-brown rounded'\r\n                                disabled = {cartItems.length === 0}\r\n                                onClick = {checkoutHendler}\r\n                            >\r\n                                {t('CartScreen_proceed_to_checkout')} \r\n                            </Button>\r\n                        </div>\r\n                        </ListGroup.Item>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({children}) {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={9}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { login } from \"../actions/userActions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nfunction LoginScreen({ history }) {\r\n  const [msgEmail, setMsgEmail] = useState(false);\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const redirect = history.location.search\r\n    ? history.location.search.split(\"=\")[1]\r\n    : \"/\";\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { error, loading, userInfo } = userLogin;\r\n\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    reset,\r\n    trigger,\r\n  } = useForm();\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const onSubmit = (data) => {\r\n    dispatch(login(data.email, data.password));\r\n    reset();\r\n    //setMsgEmail(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setMsgEmail(false);\r\n    }, 10000);\r\n\r\n    return () => clearTimeout(timeout);\r\n  }, [msgEmail]);\r\n\r\n  return (\r\n    <div className=\"margin-top-from-navbar\">\r\n      <FormContainer>\r\n        <h1>{t(\"LoginScreen_title\")}</h1>\r\n        {msgEmail && <Message variant=\"danger\">{t(error)}</Message>}\r\n        {loading && <Loader />}\r\n\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder={t(\"LoginScreen_form_email_placeholder\")}\r\n              {...register(\"email\", {\r\n                required: t(\"LoginScreen_required_error_msg_email\"),\r\n                pattern: {\r\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                  message: t(\"LoginScreen_inproper_pattern_email\"),\r\n                },\r\n              })}\r\n              onKeyUp={() => {\r\n                trigger(\"email\");\r\n              }}\r\n              name=\"email\"\r\n            ></Form.Control>\r\n            {errors.email && (\r\n              <div className=\"form-msg-style\">{errors.email.message}</div>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>{t(\"LoginScreen_form_password\")}</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder={t(\"LoginScreen_form_password_placeholder\")}\r\n              {...register(\"password\", {\r\n                required: t(\"LoginScreen_required_error_msg_password\"),\r\n                minLength: {\r\n                  value: 8,\r\n                  message: t(\"LoginScreen_minlength_error_msg_password\"),\r\n                },\r\n              })}\r\n              onKeyUp={() => {\r\n                trigger(\"password\");\r\n              }}\r\n              name=\"password\"\r\n            ></Form.Control>\r\n            {errors.password && (\r\n              <div className=\"form-msg-style\">{errors.password.message}</div>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"primary\"\r\n            className=\"bnt-block bg-brown rounded my-3\"\r\n          >\r\n            {t(\"LoginScreen_btn_form\")}\r\n          </Button>\r\n        </Form>\r\n\r\n        <Row>\r\n          <Col>\r\n            {t(\"LoginScreen_new_customer\")}{\" \"}\r\n            <Link\r\n              to={redirect ? `/register?redirect=${redirect}` : \"/register\"}\r\n            >\r\n              {t(\"LoginScreen_register\")}\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col>\r\n            {t(\"LoginScreen_password_reset_forgot_password\")}{\" \"}\r\n            <Link\r\n              to={\r\n                // redirect\r\n                //   ? `/forgotpassword?forgotpassword=${redirect}`\r\n                //   : \"/forgotpassword\"\r\n                \"/reset-password\"\r\n              }\r\n            >\r\n              {t(\"LoginScreen_password_reset\")}\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { registerUser } from \"../actions/userActions\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { USER_REGISTER_RESET } from \"../constants/UserConstants\";\r\nimport { scroller } from \"react-scroll\";\r\n\r\nimport {\r\n  REQUEST_FAILED_WITH_STATUS_CODE_500,\r\n  REQUEST_FAILED_WITH_STATUS_CODE_500_EN,\r\n  REQUEST_FAIL_WITH_STATUS_CODE_404,\r\n  REQUEST_FAIL_WITH_STATUS_CODE_404_EN,\r\n  REQUEST_FAILED_WITH_STATUS_CODE_400,\r\n  REQUEST_FAILED_WITH_STATUS_CODE_400_EN,\r\n} from \"../constants/EnvConstans\";\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n  const [msgEmail, setMsgEmail] = useState(\"\");\r\n  const [messagePassword, setMessagePassword] = useState(\"\");\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { error, loading, userInfo, success } = userRegister;\r\n\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    reset,\r\n    handleSubmit,\r\n    trigger,\r\n  } = useForm();\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      //history.push(redirect);\r\n    }\r\n\r\n    if (error === REQUEST_FAILED_WITH_STATUS_CODE_500) {\r\n      setMsgEmail(REQUEST_FAILED_WITH_STATUS_CODE_500_EN);\r\n    } else if (error === REQUEST_FAIL_WITH_STATUS_CODE_404) {\r\n      setMsgEmail(REQUEST_FAIL_WITH_STATUS_CODE_404_EN);\r\n    } else if (error === REQUEST_FAILED_WITH_STATUS_CODE_400) {\r\n      setMsgEmail(REQUEST_FAILED_WITH_STATUS_CODE_400_EN);\r\n    }\r\n  }, [history, userInfo, redirect, error]);\r\n\r\n  const onSubmit = (data) => {\r\n    scroller.scrollTo(\"navbar\", { smooth: true, offset: -200, duration: 10 });\r\n    if (data.password != data.passwordConfirm) {\r\n      setMessagePassword(\"Password do not match\");\r\n    } else {\r\n      dispatch(registerUser(data.name, data.email, data.password));\r\n      reset();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      //setMsgEmail(\"\");\r\n      setMessagePassword(\"\");\r\n      if (error) {\r\n        dispatch({ type: USER_REGISTER_RESET });\r\n        setMsgEmail(\"\");\r\n      }\r\n    }, 5000);\r\n\r\n    return () => clearTimeout(timeout);\r\n  }, [msgEmail, messagePassword, success, error]);\r\n\r\n  return (\r\n    <div className=\"margin-top-from-navbar\">\r\n      {!success ? (\r\n        <FormContainer>\r\n          {messagePassword && (\r\n            <Message variant=\"danger\">{t(messagePassword)}</Message>\r\n          )}\r\n          {msgEmail && <Message variant=\"danger\">{msgEmail}</Message>}\r\n          {loading && <Loader />}\r\n          <h1>{t(\"RegisterScreen_title\")}</h1>\r\n          <Form onSubmit={handleSubmit(onSubmit)}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>{t(\"RegisterScreen_form_name\")}</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder={t(\"RegisterScreen_form_name_placeholder\")}\r\n                {...register(\"name\", {\r\n                  required: t(\"RegisterScreen_required_error_msg_name\"),\r\n                  minLength: {\r\n                    value: 2,\r\n                    message: t(\"RegisterScreen_minlength_error_msg_name\"),\r\n                  },\r\n                  pattern: {\r\n                    value: /[A-Za-z -]/,\r\n                    message: t(\"RegisterScreen_only_letters_error_msg_name\"),\r\n                  },\r\n                })}\r\n                onKeyUp={() => {\r\n                  trigger(\"name\");\r\n                }}\r\n                name=\"name\"\r\n              ></Form.Control>\r\n              {errors.name && (\r\n                <div className=\"form-msg-style\">{errors.name.message}</div>\r\n              )}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder={t(\"RegisterScreen_form_email_placeholder\")}\r\n                {...register(\"email\", {\r\n                  required: t(\"RegisterScreen_required_error_msg_email\"),\r\n                  pattern: {\r\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                    message: t(\"RegisterScreen_inproper_pattern_email\"),\r\n                  },\r\n                })}\r\n                onKeyUp={() => {\r\n                  trigger(\"email\");\r\n                }}\r\n                name=\"email\"\r\n              ></Form.Control>\r\n              {errors.email && (\r\n                <div className=\"form-msg-style\">{errors.email.message}</div>\r\n              )}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>{t(\"RegisterScreen_form_password\")}</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder={t(\"RegisterScreen_form_password_placeholder\")}\r\n                {...register(\"password\", {\r\n                  required: t(\"RegisterScreen_required_error_msg_password\"),\r\n                  minLength: {\r\n                    value: 8,\r\n                    message: t(\"RegisterScreen_minlength_error_msg_password\"),\r\n                  },\r\n                })}\r\n                onKeyUp={() => {\r\n                  trigger(\"password\");\r\n                }}\r\n                name=\"password\"\r\n              ></Form.Control>\r\n              {errors.password && (\r\n                <div className=\"form-msg-style\">{errors.password.message}</div>\r\n              )}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"passwordConfirm\">\r\n              <Form.Label>\r\n                {t(\"RegisterScreen_from_confirm_password\")}\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder={t(\"RegisterScreen_form_password_placeholder\")}\r\n                {...register(\"passwordConfirm\", {\r\n                  required: t(\"RegisterScreen_required_error_msg_password\"),\r\n                  minLength: {\r\n                    value: 8,\r\n                    message: t(\"RegisterScreen_minlength_error_msg_password\"),\r\n                  },\r\n                })}\r\n                onKeyUp={() => {\r\n                  trigger(\"passwordConfirm\");\r\n                }}\r\n                name=\"passwordConfirm\"\r\n              ></Form.Control>\r\n              {errors.passwordConfirm && (\r\n                <div className=\"form-msg-style\">\r\n                  {errors.passwordConfirm.message}\r\n                </div>\r\n              )}\r\n            </Form.Group>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"primary\"\r\n              className=\"my-3 bnt-block bg-brown rounded\"\r\n            >\r\n              {t(\"RegisterScreen_btn_register\")}\r\n            </Button>\r\n          </Form>\r\n\r\n          <Row className=\"py-3\">\r\n            <Col>\r\n              {t(\"RegisterScreen_have_an_account\")}{\" \"}\r\n              <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\r\n                {t(\"RegisterScreen_sign_in\")}\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </FormContainer>\r\n      ) : (\r\n        <div className=\"title\">\r\n          <h2>\r\n            Email has been sent. Please click to the link in order to activate\r\n            user account.\r\n          </h2>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterScreen;\r\n","//Errors and Success\r\nexport const REQUEST_FAILED_WITH_STATUS_CODE_500 =\r\n  \"Request failed with status code 500\";\r\nexport const REQUEST_FAILED_WITH_STATUS_CODE_500_EN =\r\n  \"Server error or no internet access. Check your internet connection and run the application again.\";\r\nexport const REQUEST_FAIL_WITH_STATUS_CODE_404 =\r\n  \"Request failed with status code 404\";\r\nexport const REQUEST_FAIL_WITH_STATUS_CODE_404_EN =\r\n  \"No connection to the server\";\r\nexport const REQUEST_FAILED_WITH_STATUS_CODE_400 =\r\n  \"Request failed with status code 400\";\r\nexport const REQUEST_FAILED_WITH_STATUS_CODE_400_EN = \"Email already exist\";\r\nexport const REQUEST_FAILED_REST_OF_STATUS_CODE =\r\n  \"Network error. Check your internet connection and run the application again.\";\r\nexport const REQUEST_FAIL_WITH_STATUS_CODE_204 =\r\n  \"Network error. Check your internet connection and run the application again.\";\r\n","import React,{ useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useForm } from \"react-hook-form\"\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/UserConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { useTranslation} from \"react-i18next\"\r\n\r\nfunction ProfileScreen({history}) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [passwordConfirm, setPasswordConfirm] = useState('')\r\n    const [messagePassword, setMessagePassword] = useState('')\r\n    const [errorUserUpdate, setErrorUserUpdate] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const { t } = useTranslation()\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const {error, loading, user} = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success, error:errorUserUpdateProfile } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error:errorOrders, orders } = orderListMy\r\n\r\n    const preloadedValues = {\r\n        name : 'name',\r\n        email : 'email'\r\n    }\r\n\r\n    const {\r\n        register,\r\n        formState: { errors },\r\n        reset,\r\n        handleSubmit,\r\n        trigger,\r\n    } = useForm( {defaultValues: preloadedValues})\r\n\r\n    useEffect(() =>{\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }else{\r\n            if(!user || !user.name || success || userInfo._id !== user._id ){\r\n                dispatch({type:USER_UPDATE_PROFILE_RESET})\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            }else {\r\n                reset({name:user.name, email:user.email})\r\n            }\r\n        }\r\n    }, [dispatch, reset, history, userInfo, user, success]) \r\n\r\n    const submitHandler = (data) => {\r\n        if(data.password != data.passwordConfirm){\r\n            setMessagePassword('Password do not match')\r\n            reset({password:'', passwordConfirm:''})\r\n        }\r\n        else{\r\n            dispatch(updateUserProfile({\r\n                'id':user._id,\r\n                'name':data.name,\r\n                'email': data.email,\r\n                'password': data.password\r\n            }))\r\n            history.push('/')\r\n            setMessagePassword('')\r\n            setErrorUserUpdate(true)\r\n            reset({password:'', passwordConfirm:''})\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() =>{\r\n            setMessagePassword('')\r\n            setErrorUserUpdate(false)\r\n        }, 5000)\r\n\r\n        return () => clearTimeout(timeout)\r\n    }, [messagePassword, errorUserUpdate])\r\n\r\n    return (\r\n        <div className='margin-top-from-navbar'>\r\n            <FormContainer>\r\n                <h1 className='font-size'>{t('ProfileScreen_update_form_title')}</h1>\r\n                {messagePassword && <Message variant='danger'>{t(messagePassword)}</Message>}\r\n                {/* {error && <Message variant='danger'>{error}</Message>} */}\r\n                {errorUserUpdate && <Message variant='danger'>{t(errorUserUpdateProfile)}</Message>}\r\n                {loading && <Loader/>}\r\n\r\n                <Form onSubmit={handleSubmit(submitHandler)}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>{t('ProfileScreen_update_form_name')}</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder = {t('ProfileScreen_update_form_name_placeholder')}\r\n                            //value ={name}\r\n                            {...register(\"name\", \r\n                                {\r\n                                    required: t('ProfileScreen_required_error_msg_name'),\r\n                                    pattern: {\r\n                                        value: /[A-Za-z -]/,\r\n                                        message: t('ProfileScreen_only_letters_error_msg_name'),\r\n                                    },\r\n                                    minLength: {\r\n                                        value: 2,\r\n                                        message: t('ProfileScreen_minlength_error_msg_name'),\r\n                                    },\r\n                                }                               \r\n                            )}\r\n                            onKeyUp={() => {trigger(\"name\")}}\r\n                            name = 'name'\r\n                        >\r\n                        </Form.Control>\r\n                        {errors.name && (<div className='form-msg-style'>{errors.name.message}</div>)}\r\n                    </Form.Group>                    \r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder = {t('ProfileScreen_update_form_email_placeholder')}\r\n                                // value ={email}\r\n                                {...register(\"email\", {required: t('ProfileScreen_required_error_msg_email'),\r\n                                    pattern: {\r\n                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                                    message: t('ProfileScreen_inproper_pattern_email'),                                \r\n                            \r\n                                }})}\r\n                                // onChange={(e) => setEmail(e.target.value)}\r\n                                onKeyUp={() => {trigger(\"email\")}}\r\n                                name = 'email'\r\n                            >\r\n                            </Form.Control>\r\n                            {errors.email && (<div className='form-msg-style'>{errors.email.message}</div>)}\r\n                    </Form.Group> \r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>{t('ProfileScreen_update_form_password')}</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder = {t('ProfileScreen_update_form_password_placeholder')}\r\n                            {...register(\"password\", \r\n                                {\r\n                                    required: t('ProfileScreen_required_error_msg_password'),\r\n                                    minLength: {\r\n                                        value: 8,\r\n                                        message: t('ProfileScreen_minlength_error_msg_password'),\r\n                                    },\r\n                                }                               \r\n                            )}\r\n                            onKeyUp={() => {trigger(\"password\")}}\r\n                            name = 'password'\r\n                        >\r\n                        </Form.Control>\r\n                        {errors.password && (<div className='form-msg-style'>{errors.password.message}</div>)}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>{t('ProfileScreen_update_form_confirm_password')}</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder = {t('ProfileScreen_update_form_confirm_password_placeholder')}\r\n                            {...register(\"passwordConfirm\", \r\n                                {\r\n                                    required: t('ProfileScreen_required_error_msg_password'),\r\n                                    minLength: {\r\n                                        value: 8,\r\n                                        message: t('ProfileScreen_minlength_error_msg_password'),\r\n                                    },\r\n                                }                               \r\n                            )}\r\n                            onKeyUp={() => {trigger(\"passwordConfirm\")}}\r\n                            name = 'passwordConfirm'\r\n                        >\r\n                        </Form.Control>\r\n                        {errors.passwordConfirm && (<div className='form-msg-style'>{errors.passwordConfirm.message}</div>)}\r\n                    </Form.Group>  \r\n\r\n                    <Button type='submit' variant='primary' className='my-3 bnt-block bg-brown rounded'>\r\n                        {t('ProfileScreen_btn_update')}\r\n                    </Button>\r\n\r\n                </Form>\r\n\r\n                {/* <Col className='margin-top' md={9}> */}\r\n                    {/* <h2 className='font-size'>{t('ProfileScreen_table_orders_title')}</h2>\r\n                    {loadingOrders ? (\r\n                        <Loader/>\r\n\r\n                    ) : errorOrders ?(\r\n                        <Message variant='danger'>{errorOrders}</Message>\r\n                    ) : (\r\n                        <Table striped responsive className='table=sm'>\r\n                            <thead>\r\n                                <tr key={orderListMy._id}>\r\n                                    <th>ID</th>\r\n                                    <th>{t('ProfileScreen_table_data')}</th>\r\n                                    <th>{t('ProfileScreen_table_total')}</th>\r\n                                    <th>{t('ProfileScreen_table_paid')}</th>\r\n                                    <th>{t('ProfileScreen_table_delivered')}</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.createdAt.substring(0,10)}</td>\r\n                                        <td>${order.totalPrice}</td>\r\n                                        <td>{order.isPaid ? order.paidAt.substring(0,10) : (\r\n                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                        )}</td>\r\n                                        <td>{order.isDelivered ? order.deliveredAt.substring(0,10) : (\r\n                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                        )}</td>\r\n                                        <td>\r\n                                            <LinkContainer to ={`/order/${order._id}`} className='bnt-block bg-brown rounded'>\r\n                                                <Button classname='bg-brown'>{t('ProfileScreen_btn_table_delivered')}</Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>    \r\n                    )} */}\r\n                {/* </Col> */}\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios'\r\nimport { \r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    \r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstans'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data,\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useTranslation} from \"react-i18next\"\r\n\r\nfunction CheckoutSteps({step1, step2, step3, step4}) {\r\n\r\n    const { t } = useTranslation()\r\n\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link className='font-bold'>{t('CheckoutSteps_login')}</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link className='font-bold' disabled>{t('CheckoutSteps_login')}</Nav.Link>\r\n                )}\r\n\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link className='font-bold'>{t('CheckoutSteps_shipping')}</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link className='font-bold' disabled>{t('CheckoutSteps_shipping')}</Nav.Link>\r\n                )}\r\n\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link className='font-bold'>{t('CheckoutSteps_payments')}</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link className='font-bold' disabled>{t('CheckoutSteps_payments')}</Nav.Link>\r\n                )}\r\n\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link className='font-bold'>{t('CheckoutSteps_place_order')}</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link className='font-bold' disabled>{t('CheckoutSteps_place_order')}</Nav.Link>\r\n                )}\r\n\r\n            </Nav.Item>\r\n\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React,{ useState, useEffect } from 'react'\r\nimport { Form, Button,} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\nimport { useTranslation} from \"react-i18next\"\r\n\r\nfunction ShippingScreen({history}) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {shippingAddress} = cart\r\n    const { t } = useTranslation()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setpostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({address, city, postalCode, country}))\r\n        history.push('/payment')\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='margin-top-from-navbar'>\r\n            <FormContainer>\r\n                <CheckoutSteps step1 step2 />\r\n                <h1 className='btn-font-size'>{t('ShippingScreen_title')}</h1>\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='address' className=\"form-margin\">\r\n                            <Form.Label className='font-bold'>{t('ShippingScreen_btn_address')}</Form.Label>                       \r\n                            <Form.Control\r\n                                required\r\n                                type='text'\r\n                                placeholder ='Enter address'\r\n                                className=\"form-bg rounded\"\r\n                                value ={address ? address : ''}\r\n                                onChange={(e) => setAddress(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='city' className=\"form-margin\">\r\n                            <Form.Label className='font-bold'>{t('ShippingScreen_btn_city')}</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                type='text'\r\n                                placeholder ='Enter city'\r\n                                className=\"form-bg rounded\"\r\n                                value ={city ? city : ''}\r\n                                onChange={(e) => setCity(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='postalCode' className=\"form-margin\">\r\n                            <Form.Label className='font-bold'>{t('ShippingScreen_postal_code')}</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                type='text'\r\n                                placeholder ='Enter postal code'\r\n                                className=\"form-bg rounded\"\r\n                                value ={postalCode ? postalCode : ''}\r\n                                onChange={(e) => setpostalCode(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='country'>\r\n                            <Form.Label className='font-bold'>{t('ShippingScreen_country')}</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                type='text'\r\n                                placeholder ='Enter postal code'\r\n                                className=\"form-bg rounded\"\r\n                                value ={country ? country : ''}\r\n                                onChange={(e) => setCountry(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary' className='bg-brown rounded my-3'>\r\n                        {t('ShippingScreen_btn_country')}\r\n                    </Button>\r\n                </Form>\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React,{ useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\nimport { useTranslation} from \"react-i18next\"\r\n\r\nfunction PaymentScreen({history}) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {shippingAddress} = cart\r\n    const { t } = useTranslation()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if(!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <div className='margin-top-from-navbar'>\r\n            <FormContainer>\r\n                <CheckoutSteps step1 step2 step3/>\r\n\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group>\r\n                        <Form.Label as='legend'>{t('PaymentScreen_title')}</Form.Label>\r\n                        <Col>\r\n                            <Form.Check\r\n                                label='PayPal or Credit Card'\r\n                                id='paypal'\r\n                                name='paymentMethod'\r\n                                checked\r\n                                onChange = {(e) => savePaymentMethod(e.target.value)}\r\n                            >\r\n\r\n                            </Form.Check>\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary' className='bg-brown rounded my-3'>\r\n                        {t('PaymentScreen_btn_country')}\r\n                    </Button>\r\n                </Form>\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React,{ useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card} from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\nimport { useTranslation} from \"react-i18next\"\r\n\r\nfunction PlaceOrderScreen({history}) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success} = orderCreate\r\n    const { t } = useTranslation()\r\n\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart);\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2);\r\n    cart.shippingPrice = (cart.itemsPrice >100 || cart.itemsPrice == 0 ? 0: 10).toFixed(2);\r\n    cart.taxPrice = Number((0.23) * cart.itemsPrice).toFixed(2)\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    if(!cart.paymentMethod){\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(success){\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({type: ORDER_CREATE_RESET})\r\n\r\n        }\r\n    },[success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>{t('PlaceOrderScreen_title_shipping')}</h2>\r\n                            <p>\r\n                                <strong>{t('PlaceOrderScreen_shipping')}: </strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>{t('PlaceOrderScreen_title_payment_method')}</h2>\r\n                            <p>\r\n                                <strong>{t('PlaceOrderScreen_payment_method')}: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>{t('PlaceOrderScreen_title_orders_items')}</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                {t('PlaceOrderScreen_empty_cart')} \r\n                            </Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={2}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={5}>\r\n                                                    {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>{t('PlaceOrderScreen_table_title_order_summary')}</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>{t('PlaceOrderScreen_table_items')}:</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>{t('PlaceOrderScreen_table_shipping')}:</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>{t('PlaceOrderScreen_table_tax')}:</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>{t('PlaceOrderScreen_table_total')}:</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                            <div className=\"d-grid gap-2\">\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block bg-brown rounded'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </div>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n\r\n                    </Card>\r\n                    <ListGroup.Item  className='border-0' >\r\n                        {error && <Message variant='danger'>{error}</Message>}\r\n                    </ListGroup.Item>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React,{ useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card} from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\nimport { useTranslation} from \"react-i18next\"\r\n\r\nfunction OrderScreen({ match }){\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n    const { t } = useTranslation()\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading} = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading:loadingPay, success:successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading:loadingDeliver, success:successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    if(!loading && !error){\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2);\r\n    }\r\n\r\n  \r\n    const addPayPalScript = () =>{\r\n        const script = document.createElement('script')\r\n        script.type ='text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AdPCHwjt0XfTPOjRQqj2TMpagWCjF65O_MiIFwgygPKEkuxMA7qgqVj61HK2cyJCwup3ukwEJIfTrvlT'\r\n        script.async = true\r\n        script.onload = () =>{\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(!order || successPay || order._id !== Number(orderId) || successDeliver){\r\n            dispatch({type: ORDER_PAY_RESET})\r\n            dispatch({type: ORDER_DELIVER_RESET})\r\n            dispatch(getOrderDetails(orderId))\r\n\r\n        }else if(!order.isPaid){\r\n            if(!window.paypal){\r\n                addPayPalScript()\r\n            }else{\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n        \r\n    },[dispatch, order, orderId, successPay, successDeliver])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () =>{\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return  loading ? (\r\n        <div className='margin-top-from-navbar'>\r\n            <Loader/>\r\n        </div>\r\n    ) : error ? (\r\n        <div className='margin-top-from-navbar'>\r\n            <Message variant='danger' >{error}</Message>\r\n        </div>\r\n    ) : (\r\n        <div className='margin-top-from-navbar'>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>{t('OrderScreen_title_shipping')}</h2>\r\n                            <p><strong>{t('OrderScreen_shipping_name')}: </strong>{order.user.name}</p>\r\n                            <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                            <p>\r\n                                <strong>{t('OrderScreen_shipping_shipping')}: </strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city}\r\n                                {'  '}\r\n                                {order.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n\r\n                            {order.isDelivered ? (\r\n                                <Message variant='success'>{t('OrderScreen_message_delivered_on')} {order.deliveredAt}</Message>\r\n                            ) : (\r\n                                <Message variant='warning'>{t('OrderScreen_message_not_delivered')} {order.padAt}</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>{t('OrderScreen_title_payment_method')}</h2>                           \r\n                            <p>\r\n                                <strong>{t('OrderScreen_payment_method')}: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? (\r\n                                <Message variant='success'>{t('OrderScreen_message_paid_on')} {order.padAt}</Message>\r\n                            ) : (\r\n                                <Message variant='warning'>{t('OrderScreen_message_not_paid')}{order.padAt}</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>{t('OrderScreen_title_order_items')}</h2>\r\n                            {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                Order is empty \r\n                            </Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={2}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={5}>\r\n                                                    {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>{t('OrderScreen_table_title_order_summary')}</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>{t('OrderScreen_table_items')}:</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>{t('OrderScreen_table_shipping')}:</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>{t('OrderScreen_table_tax')}:</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>{t('OrderScreen_table_total')}:</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader/>}\r\n\r\n                                    {!sdkReady ? (\r\n                                       <Loader/>\r\n                                    ) : (\r\n                                        <PayPalButton\r\n                                            amount={order.totalPrice}\r\n                                            onSuccess={successPaymentHandler}\r\n                                        \r\n                                        />\r\n                                    )}\r\n\r\n                                </ListGroup.Item>\r\n                            )}\r\n\r\n                        </ListGroup>\r\n\r\n                        {userInfo && userInfo.IsAdmin && order.isPaid && !order.isDelivered && (\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn btn-block'\r\n                                    onClick={deliverHandler}\r\n                                >\r\n                                    Mark as Deliver\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        )}\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )  \r\n}\r\n\r\nexport default OrderScreen","import React,{ useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\nimport { useTranslation} from \"react-i18next\"\r\n\r\nfunction UserListScreen({ history }) {\r\n\r\n    const { t } = useTranslation()\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const {loading, error, users} = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success:successDelete } = userDelete\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.IsAdmin){\r\n            dispatch(listUsers())\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n        \r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n\r\n    const deleteHandler = (id) =>{\r\n        if(window.confirm('Are you sure you want to delete this user?')){\r\n            dispatch(deleteUser(id))\r\n        }\r\n\r\n       \r\n    }\r\n\r\n    return (\r\n        <div className='mt-3'>\r\n            <div>\r\n                <h1>{t('UserListScreen_list_of_users')}</h1>\r\n            </div>\r\n            {loading\r\n            ? (<Loader/>)\r\n            :error\r\n                ? (<Message variant='danger'>{error}</Message>)\r\n                : (\r\n                    <Table striped bordered hover responsive className='table-lg'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>{t('UserListScreen_table_name')}</th>\r\n                                <th>EMAIL</th>\r\n                                <th>ADMIN</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {users.map(user => (\r\n                                <tr key={user._id}>\r\n                                    <td>{user._id}</td>\r\n                                    <td>{user.name}</td>\r\n                                    <td>{user.email}</td>\r\n                                    <td>{user.IsAdmin ? (\r\n                                        <i className = 'fas fa-check' style={{ color: 'green'}}></i>\r\n                                    ) : (\r\n                                        <i className = 'fas fa-check' style={{ color: 'red'}}></i>\r\n                                    )}</td>\r\n\r\n                                    <td>\r\n                                        <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                            <Button variant='success' className='btn-sm'>\r\n                                                <i class=\"fas fa-pencil-alt\"></i>\r\n                                            </Button>                                     \r\n                                        </LinkContainer>\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                                <i class=\"fas fa-trash\"></i>\r\n                                            </Button>   \r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n\r\n                    </Table>\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React,{ useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/UserConstants'\r\nimport { useTranslation} from \"react-i18next\"\r\n\r\nfunction UserEditScreen({ match, history}) {\r\n\r\n    const userId = match.params.id\r\n    const { t } = useTranslation()\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const {error, loading, user} = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading:loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() =>{\r\n\r\n        if(successUpdate){\r\n            dispatch({type:USER_UPDATE_RESET})\r\n            history.push('/admin/userlist')\r\n        }else{\r\n            if(!user.name || user._id !== Number(userId)){\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.IsAdmin)          \r\n            }\r\n        }\r\n\r\n    }, [user, userId, successUpdate, history]) \r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({id:user._id, name, email, isAdmin}))\r\n    }\r\n    return (\r\n        <div className='margin-top-from-navbar'>\r\n            <Link to='/admin/userlist'>\r\n                {t('UserEditScreen_btn_go_back')}\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>{t('UserEditScreen_edit_user')}</h1>\r\n                {loadingUpdate && <Loader/>}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message>\r\n                : (\r\n                    <Form onSubmit={submitHandler}>\r\n\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>{t('UserListScreen_form_label_name')}</Form.Label>\r\n                            <Form.Control\r\n                                type='name'\r\n                                placeholder ='Enter name'\r\n                                value ={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label>Email Address</Form.Label>\r\n                            <Form.Control\r\n                                type='email'\r\n                                placeholder ='Enter Email'\r\n                                value ={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='isadmin'>\r\n                            <Form.Check\r\n                                type='checkbox'\r\n                                label = {t('UserListScreen_form_label_admin')}\r\n                                checked ={isAdmin}\r\n                                onChange={(e) => setIsAdmin(e.target.checked)}\r\n                            >\r\n                            </Form.Check>\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' variant='primary' className='bnt-block bg-brown rounded my-3'>\r\n                            {t('UserEditScreen_btn_update')}\r\n                        </Button>\r\n\r\n                    </Form>\r\n                        \r\n                    )}\r\n                    \r\n                </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React,{ useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productsConstants'\r\nimport { useTranslation} from \"react-i18next\"\r\n\r\nfunction ProductListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n    const { t } = useTranslation()\r\n    const productList = useSelector(state => state.productList)\r\n    const {loading, error, products, pages, page} = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete )\r\n    const {loading:loadingDelete, error:errorDelete, success:successDelete} = productDelete \r\n\r\n    const productCreate = useSelector(state => state.productCreate )\r\n    const {loading:loadingCreate, error:errorCreate, success:successCreate, product:createdProduct} = productCreate \r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        dispatch({type: PRODUCT_CREATE_RESET})\r\n\r\n        if(!userInfo.IsAdmin){\r\n            history.push('/login')\r\n        }\r\n\r\n        if(successCreate){\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        }else{\r\n            dispatch(listProducts(keyword))\r\n        }\r\n        \r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n\r\n    const deleteHandler = (id) =>{\r\n        if(window.confirm('Are you sure you want to delete this product?')){\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () =>{\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div className='mt-3'>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>{t('ProductListScreen_title_products')}</h1>\r\n                </Col>\r\n\r\n                <Col className='btn-position-right'>\r\n                    <Button className='bnt-block bg-brown rounded' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> {t('ProductListScreen_btn_create_product')}\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader/>}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n            {loadingCreate && <Loader/>}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n            \r\n            {loading\r\n            ? (<Loader/>)\r\n            :error\r\n                ? (<Message variant='danger'>{error}</Message>)\r\n                : (\r\n                    <div>\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>{t('ProductListScreen_table_name')}</th>\r\n                                <th>{t('ProductListScreen_table_price')}</th>\r\n                                <th>{t('ProductListScreen_table_category')}</th>\r\n                                <th>{t('ProductListScreen_table_brand')}</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {products.map(product => (\r\n                                <tr key={product._id}>\r\n                                    <td>{product._id}</td>\r\n                                    <td>{product.name}</td>\r\n                                    <td>${product.price}</td>\r\n                                    <td>{product.category}</td>\r\n                                    <td>{product.brand}</td>\r\n\r\n                                    <td>\r\n                                        <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                            <Button variant='success' className='btn-sm'>\r\n                                                <i class=\"fas fa-pencil-alt\"></i>\r\n                                            </Button>                                     \r\n                                        </LinkContainer>\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                                <i class=\"fas fa-trash\"></i>\r\n                                            </Button>   \r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                    <Paginate pages={pages} page={page} isAdmin={true}/>\r\n                    </div>\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import React,{ useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useTranslation} from \"react-i18next\"\r\nimport axios from 'axios'\r\nimport _ from 'lodash'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Image, Row, Col } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductsDetails, updateProduct } from '../actions/productActions'\r\nimport { listProductImages } from '../actions/imagesActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productsConstants'\r\n\r\n\r\n\r\nfunction ProductEditScreen({ match, history}) {\r\n\r\n    \r\n    const [showResults, setShowResults] = React.useState(false)\r\n    const onClick = () => setShowResults(true)\r\n    const onClick2 = () => setShowResults(false)\r\n\r\n\r\n    const dispach = useDispatch()\r\n    const productId = match.params.id\r\n    const { t } = useTranslation()\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n\r\n    const [image, setImage] = useState([])\r\n\r\n    const [msgTextUpload, setMsgTextUpload] = useState('')\r\n    const [msgTextUploadImages, setMsgTextUploadImages] = useState('')\r\n\r\n\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n    const [uploadingImages, setUploadingImages] = useState(false)\r\n    const [msg, setMsg ] = useState(false) \r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const {error, loading, product} = productDetails\r\n    const dispatch = useDispatch()\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const {error:errorUpdate, loading:loadingUpdate, success:successUpdate} = productUpdate\r\n\r\n    const productImagesList = useSelector(state => state.productImagesList)\r\n    const { images } = productImagesList\r\n\r\n    console.log(images)\r\n   \r\n    \r\n    useEffect(() =>{\r\n\r\n        if(successUpdate){\r\n            dispatch({type:PRODUCT_UPDATE_RESET})\r\n            history.push('/admin/productlist')\r\n        }else {\r\n            if(!product.name || product._id !== Number(productId)){\r\n                dispatch(listProductsDetails(productId))\r\n            } else {\r\n                setName(product.name)  \r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)    \r\n            }\r\n        }\r\n\r\n        dispach(listProductImages(productId))\r\n\r\n    }, [dispatch, product, productId, history, successUpdate]) \r\n\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try{\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type':'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const {data} = await axios.post('/api/products/upload/', formData, config)\r\n            console.log(data)\r\n            setMsg(true)\r\n            setImage(data.image)\r\n            setUploading(false)\r\n            setMsgTextUpload(data.text)\r\n\r\n        }catch(error){\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n\r\n    const uploadMultiFilesHandler2 = async (e) => {\r\n\r\n        const formData = new FormData();\r\n        _.forEach(e.target.files, file =>{\r\n            formData.append('files', file)\r\n        })\r\n        formData.append('product_id', productId) \r\n\r\n        setUploadingImages(true)\r\n\r\n        try{\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type':'multipart/form-data'\r\n                }\r\n            }\r\n    \r\n            const {data} = await axios.post('/api/products/multiupload/', formData, config)\r\n            //console.log('zdjecia', data)\r\n            setMsg(true)         \r\n            setUploadingImages(false)\r\n            setMsgTextUploadImages(data[0].text)\r\n               \r\n        }catch(error){\r\n            setUploadingImages(false)\r\n        }\r\n\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id:productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n\r\n        }))\r\n    }\r\n\r\n    //const uploadMultiFilesHandler = async (e) => {\r\n        //https://stackoverflow.com/questions/58381990/react-axios-multiple-files-upload\r\n        //https://fontawesome.com/v5.15/icons/cloud-upload-alt?style=solid\r\n        //https://www.youtube.com/watch?v=bTC_qODZ1bQ \r\n\r\n        // const files = e.target.files\r\n        // const numFiles = files.length\r\n        // const formData = new FormData()\r\n        // const test2 = 'j'\r\n        \r\n        // //const productimages = [];\r\n\r\n        // for (let i = 0 ; i < numFiles; i++) {\r\n        //     //console.log(files[i].name)\r\n        //     const formData = new FormData()\r\n        //     //productimages.push(files[i]);\r\n        //     //console.log(productimages.push(files[i]))\r\n        //     formData.append('image', files[i])\r\n        //     formData.append('product_id', productId) \r\n\r\n        //     setUploading(true)\r\n\r\n        //     try{\r\n        //         const config = {\r\n        //             headers: {\r\n        //                 'Content-Type':'multipart/form-data'\r\n        //             }\r\n        //         }\r\n    \r\n        //         const {data} = await axios.post('/api/products/multiupload/', formData, config)\r\n        //         //images_depot = 'j'\r\n        //         console.log(data.images)\r\n        //         setTest(data.images)\r\n        //         setUploading(false)\r\n    \r\n        //     }catch(error){\r\n        //         setUploading(false)\r\n        //     }\r\n\r\n        // }    \r\n        \r\n        //console.log(productimages[1].name)\r\n        //formData.append('image', productimages)\r\n        //console.log('formData',formData)   \r\n    //}\r\n\r\n\r\n\r\n    return (\r\n        <div className='margin-top-from-navbar'>\r\n            <Link to='/admin/productlist'>\r\n                {t('ProductsEditScreen_btn_go_back')}\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>{t('ProductsEditScreen_title_edit_product')}</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message>\r\n                : (\r\n                    <Form onSubmit={submitHandler}>\r\n\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>{t('ProductsEditScreen_table_name')}</Form.Label>\r\n                            <Form.Control\r\n                                type='name'\r\n                                placeholder ='Enter name'\r\n                                value ={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='price'>\r\n                            <Form.Label>{t('ProductsEditScreen_table_price')}</Form.Label>\r\n                            <Form.Control\r\n                                type='number'\r\n                                placeholder ='Enter price'\r\n                                value ={price}\r\n                                onChange={(e) => setPrice(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='image'>\r\n                            <Form.Label>{t('ProductsEditScreen_table_image')}</Form.Label>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='image' className='choose_main_image'>\r\n                            <Row>\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    onChange={uploadFileHandler}\r\n                                    custom\r\n                                    label={t('ProductsEditScreen_btn_choose_photo')}\r\n                                    className=\"m-3 btn-img-upload rounded\"\r\n                                        \r\n                                >\r\n                                </Form.File>\r\n                                \r\n                            </Row>\r\n                            <Row>\r\n                                <p className='text_img_uploaded'>{ msg ? t(msgTextUpload) : ''}</p>\r\n                            </Row>\r\n                            <Row>\r\n                                <Image\r\n                                    src={ image }\r\n                                    className='currentImage'\r\n                                />\r\n                                {uploading && <Loader/>}\r\n                            </Row>\r\n\r\n                        </Form.Group>\r\n                        \r\n\r\n                        <Form.Group\r\n                            controlId=\"formFileMultiple\"\r\n                            className=\"btn-img-upload rounded mb-3\"\r\n                            onChange={uploadMultiFilesHandler2}>\r\n                        \r\n                            <Form.Label>{t('ProductsEditScreen_btn_choose_more_photos')}</Form.Label>\r\n                            <Form.Control type=\"file\" multiple />\r\n\r\n                        </Form.Group>\r\n\r\n                            <Row>\r\n                                <p className='text_img_uploaded'>{ msg ? t(msgTextUploadImages) : ''}</p>\r\n                            </Row>\r\n                        <div>\r\n                            { showResults ?\r\n                                <Button className=\"btn-img-upload rounded mb-3\" onClick={onClick2}>Hide</Button>\r\n\r\n                                : \r\n                                <Button className=\"btn-img-upload rounded mb-3\" onClick={onClick}>Show</Button> \r\n                            }\r\n                        </div>\r\n\r\n                        { showResults ?    \r\n                        <Form.Group>\r\n                            {loading ? <Loader />\r\n                            : error ? <Message variant='danger'>{error}</Message>\r\n                                :\r\n                                <div>\r\n                                    <Row>\r\n                                        {images.map(img => (  \r\n                                                <Image\r\n                                                key={img.id}\r\n                                                src={ img.images }\r\n                                                className='currentImage'\r\n                                                />\r\n                                                \r\n                                        ))}\r\n                                        \r\n                                        {uploadingImages && <Loader/>}\r\n                                    </Row> \r\n                                </div>\r\n                            }\r\n                        </Form.Group>\r\n                         : null}\r\n                            \r\n\r\n                        <Form.Group controlId='brand'>\r\n                            <Form.Label>{t('ProductsEditScreen_table_brand')}</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder ='Enter brand'\r\n                                value ={brand}\r\n                                onChange={(e) => setBrand(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='countinstock'>\r\n                            <Form.Label>{t('ProductsEditScreen_table_stock')}</Form.Label>\r\n                            <Form.Control\r\n                                type='number'\r\n                                placeholder ='Enter stock'\r\n                                value ={countInStock}\r\n                                onChange={(e) => setCountInStock(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='category'>\r\n                            <Form.Label>{t('ProductsEditScreen_table_category')}</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder ='Enter category'\r\n                                value ={category}\r\n                                onChange={(e) => setCategory(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='description'>\r\n                            <Form.Label>{t('ProductsEditScreen_table_description')}</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder ='Enter description'\r\n                                value ={description}\r\n                                onChange={(e) => setDescription(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' variant='primary' className='my-3 bnt-block bg-brown rounded'>\r\n                            {t('ProductsEditScreen_btn_update')}\r\n                        </Button>\r\n\r\n                    </Form>\r\n                        \r\n                    )}\r\n                    \r\n                </FormContainer>\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { listOrders } from \"../actions/orderActions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nfunction OrderListScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading, error, orders } = orderList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.IsAdmin) {\r\n      dispatch(listOrders());\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  return (\r\n    <div className=\"mt-3\">\r\n      <h1>{t(\"OrderListScreen_title_orders\")}</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>{t(\"OrderListScreen_table_user\")}</th>\r\n              <th>{t(\"OrderListScreen_table_date\")}</th>\r\n              <th>{t(\"OrderListScreen_table_total\")}</th>\r\n              <th>{t(\"OrderListScreen_table_paid\")}</th>\r\n              <th>{t(\"OrderListScreen_table_delivered\")}</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>${order.totalPrice}</td>\r\n\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className=\"fas fa-check\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className=\"fas fa-check\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button variant=\"success\" className=\"btn-sm\">\r\n                      {t(\"OrderListScreen_table_btn_details\")}\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderListScreen;\r\n","import React from 'react'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { useTranslation} from \"react-i18next\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nfunction UserOrders() {\r\n\r\n    const { t } = useTranslation()\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error:errorOrders, orders } = orderListMy\r\n\r\n    return (\r\n        <div className='margin-top-from-navbar'>\r\n                    <h2 className='font-size'>{t('ProfileScreen_table_orders_title')}</h2>\r\n                    {loadingOrders ? (\r\n                        <Loader/>\r\n\r\n                    ) : errorOrders ?(\r\n                        <Message variant='danger'>{errorOrders}</Message>\r\n                    ) : (\r\n                        <Table striped responsive className='table=sm'>\r\n                            <thead>\r\n                                <tr key={orderListMy._id}>\r\n                                    <th>ID</th>\r\n                                    <th>{t('ProfileScreen_table_data')}</th>\r\n                                    <th>{t('ProfileScreen_table_total')}</th>\r\n                                    <th>{t('ProfileScreen_table_paid')}</th>\r\n                                    <th>{t('ProfileScreen_table_delivered')}</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.createdAt.substring(0,10)}</td>\r\n                                        <td>${order.totalPrice}</td>\r\n                                        <td>{order.isPaid ? order.paidAt.substring(0,10) : (\r\n                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                        )}</td>\r\n                                        <td>{order.isDelivered ? order.deliveredAt.substring(0,10) : (\r\n                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                        )}</td>\r\n                                        <td>\r\n                                            <LinkContainer to ={`/order/${order._id}`} className='bnt-block bg-brown rounded'>\r\n                                                <Button classname='bg-brown'>{t('ProfileScreen_btn_table_delivered')}</Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>    \r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserOrders\r\n","import React from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useTranslation} from \"react-i18next\"\r\n\r\nfunction AdminScreen() {\r\n\r\n    const { t } = useTranslation()\r\n\r\n    return (\r\n        <div className='margin-top-from-navbar text-center'>\r\n            <Row>\r\n                <LinkContainer to='/admin/userlist'> \r\n                    <Col className='btn-admin'>\r\n                        {t('Admin_userlist_btn')}\r\n                    </Col>\r\n                </LinkContainer>\r\n\r\n                <LinkContainer to='/admin/productlist'> \r\n                    <Col className='btn-admin'>\r\n                        {t('Admin_productlist_btn')}\r\n                    </Col>\r\n                </LinkContainer>\r\n\r\n                <LinkContainer to='/admin/orderlist'> \r\n                    <Col className='btn-admin'>\r\n                        {t('Admin_orderlist_btn')}\r\n                    </Col>\r\n                </LinkContainer>\r\n\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminScreen\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { reset_password, email_exist } from \"../actions/userActions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport {\r\n  REQUEST_FAILED_WITH_STATUS_CODE_500,\r\n  REQUEST_FAILED_WITH_STATUS_CODE_500_EN,\r\n  REQUEST_FAIL_WITH_STATUS_CODE_404,\r\n  REQUEST_FAIL_WITH_STATUS_CODE_404_EN,\r\n} from \"../constants/EnvConstans\";\r\n\r\nfunction ResetPassword({ location, history }) {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  const [msgEmail, setMsgEmail] = useState(false);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { error, loading, userInfo } = userLogin;\r\n\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    reset,\r\n    trigger,\r\n  } = useForm();\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n\r\n    // if(error){\r\n    //     if(error===)\r\n    // }\r\n  }, [history, userInfo, redirect, error]);\r\n\r\n  const onSubmit = (data) => {\r\n    //dispatch(login(data.email, data.password))\r\n    reset();\r\n    dispatch(reset_password(data.email));\r\n    //dispatch(email_exist(data.email));\r\n    setRequestSent(true);\r\n    setMsgEmail(true);\r\n  };\r\n\r\n  if (requestSent) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //     const timeout = setTimeout(() =>{\r\n  //         setMsgEmail(false)\r\n  //     }, 10000)\r\n\r\n  //     return () => clearTimeout(timeout)\r\n  // }, [msgEmail])\r\n\r\n  return (\r\n    <div className=\"margin-top-from-navbar\">\r\n      <FormContainer>\r\n        <h2>Password Reset</h2>\r\n        {msgEmail && <Message variant=\"danger\">{t(error)}</Message>}\r\n        {loading && <Loader />}\r\n\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder={t(\"LoginScreen_form_email_placeholder\")}\r\n              {...register(\"email\", {\r\n                required: t(\"LoginScreen_required_error_msg_email\"),\r\n                pattern: {\r\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                  message: t(\"LoginScreen_inproper_pattern_email\"),\r\n                },\r\n              })}\r\n              onKeyUp={() => {\r\n                trigger(\"email\");\r\n              }}\r\n              name=\"email\"\r\n            ></Form.Control>\r\n            {errors.email && (\r\n              <div className=\"form-msg-style\">{errors.email.message}</div>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"primary\"\r\n            className=\"bnt-block bg-brown rounded my-3\"\r\n          >\r\n            Reset Password\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;\r\n","import React from 'react'\r\n\r\nfunction NewPassword() {\r\n    return (\r\n        <div className='margin-top-from-navbar'>\r\n            działa\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewPassword\r\n","import React, { useState, useEffect } from \"react\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { activate } from \"../actions/userActions\";\r\nimport { PRODUCT_TOP_REQUEST } from \"../constants/productsConstants\";\r\n\r\nfunction ActivateScreen({ location, history }) {\r\n  const { handleSubmit } = useForm();\r\n  const params = useParams();\r\n\r\n  const [confActivate, setConfActivate] = useState(false);\r\n\r\n  const uid = params.uid;\r\n  const token = params.token;\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = () => {\r\n    console.log(\"Działa aktywowanie użytkownika\");\r\n    setConfActivate(PRODUCT_TOP_REQUEST);\r\n\r\n    //dispatch(registerUser(data.name, data.email, data.password));\r\n    //dispatch(activate(uid, token));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (confActivate) {\r\n      history.push(redirect);\r\n    }\r\n  }, [confActivate]);\r\n\r\n  return (\r\n    <div className=\"margin-top-from-navbar\">\r\n      <div className=\"activate-title\">\r\n        <h2>Aktywowanie konta użytkownika</h2>\r\n      </div>\r\n      <FormContainer>\r\n        <Form onSubmit={handleSubmit(onSubmit)} className=\"form-center\">\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"primary\"\r\n            className=\"my-3 bnt-block bg-brown rounded\"\r\n          >\r\n            Aktywuj konto\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ActivateScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { login2 } from \"../actions/userActions\";\r\n\r\nfunction LoginScreen({ history }) {\r\n  const [msgEmail, setMsgEmail] = useState(false);\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const redirect = history.location.search\r\n    ? history.location.search.split(\"=\")[1]\r\n    : \"/\";\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { error, loading, userInfo } = userLogin;\r\n\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    reset,\r\n    trigger,\r\n  } = useForm();\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const onSubmit = (data) => {\r\n    //dispatch(login2(data.password, data.userName));\r\n    reset();\r\n    setMsgEmail(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setMsgEmail(false);\r\n    }, 10000);\r\n\r\n    return () => clearTimeout(timeout);\r\n  }, [msgEmail]);\r\n\r\n  return (\r\n    <div className=\"margin-top-from-navbar\">\r\n      <FormContainer>\r\n        <h1>Djoser</h1>\r\n        <h1>{t(\"LoginScreen_title\")}</h1>\r\n        {msgEmail && <Message variant=\"danger\">{t(error)}</Message>}\r\n        {loading && <Loader />}\r\n\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          {/* <Form.Group controlId='email'>\r\n                        <Form.Label>Email</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder = {t('LoginScreen_form_email_placeholder')}\r\n                                {...register(\"email\", {required: t('LoginScreen_required_error_msg_email'),\r\n                                    pattern: {\r\n                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                                    message: t('LoginScreen_inproper_pattern_email'),                                \r\n                            \r\n                                }})}\r\n                                onKeyUp={() => {trigger(\"email\")}}\r\n                                name = 'email'\r\n                            >\r\n                            </Form.Control>\r\n                            {errors.email && (<div className='form-msg-style'>{errors.email.message}</div>)}\r\n                    </Form.Group>  */}\r\n          <Form.Group controlId=\"userName\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter username\"\r\n              {...register(\"userName\", {\r\n                required: t(\"LoginScreen_required_error_msg_email\"),\r\n                minLength: {\r\n                  value: 2,\r\n                  message: t(\"LoginScreen_inproper_pattern_email\"),\r\n                },\r\n                pattern: {\r\n                  value: /[A-Za-z -]/,\r\n                  message: t(\"LoginScreen_inproper_pattern_email\"),\r\n                },\r\n              })}\r\n              onKeyUp={() => {\r\n                trigger(\"userName\");\r\n              }}\r\n              name=\"userName\"\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>{t(\"LoginScreen_form_password\")}</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder={t(\"LoginScreen_form_password_placeholder\")}\r\n              {...register(\"password\", {\r\n                required: t(\"LoginScreen_required_error_msg_password\"),\r\n                minLength: {\r\n                  value: 8,\r\n                  message: t(\"LoginScreen_minlength_error_msg_password\"),\r\n                },\r\n              })}\r\n              onKeyUp={() => {\r\n                trigger(\"password\");\r\n              }}\r\n              name=\"password\"\r\n            ></Form.Control>\r\n            {errors.password && (\r\n              <div className=\"form-msg-style\">{errors.password.message}</div>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"primary\"\r\n            className=\"bnt-block bg-brown rounded my-3\"\r\n          >\r\n            {t(\"LoginScreen_btn_form\")}\r\n          </Button>\r\n        </Form>\r\n\r\n        <Row>\r\n          <Col>\r\n            <Link to=\"/signup\">Dont't have an anccount?</Link>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col>\r\n            <Link to=\"/reset-password\">Forgot you Password?</Link>\r\n          </Col>\r\n        </Row>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { reset_password } from \"../actions/userActions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nfunction ResetPasswordScreen({ location, history }) {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  const [msgEmail, setMsgEmail] = useState(false);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { error, loading, userInfo } = userLogin;\r\n\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    reset,\r\n    trigger,\r\n  } = useForm();\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const onSubmit = (data) => {\r\n    //dispatch(login(data.email, data.password))\r\n    reset();\r\n    dispatch(reset_password(data.email));\r\n    setRequestSent(true);\r\n    setMsgEmail(true);\r\n  };\r\n\r\n  // if (requestSent) {\r\n  //   return <Redirect to=\"/\" />;\r\n  // }\r\n\r\n  return (\r\n    <div className=\"margin-top-from-navbar\">\r\n      <FormContainer>\r\n        <h3>Djoser</h3>\r\n        <h2>Request Password Reset</h2>\r\n        {msgEmail && <Message variant=\"danger\">{t(error)}</Message>}\r\n        {loading && <Loader />}\r\n\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder={t(\"LoginScreen_form_email_placeholder\")}\r\n              {...register(\"email\", {\r\n                required: t(\"LoginScreen_required_error_msg_email\"),\r\n                pattern: {\r\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                  message: t(\"LoginScreen_inproper_pattern_email\"),\r\n                },\r\n              })}\r\n              onKeyUp={() => {\r\n                trigger(\"email\");\r\n              }}\r\n              name=\"email\"\r\n            ></Form.Control>\r\n            {errors.email && (\r\n              <div className=\"form-msg-style\">{errors.email.message}</div>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"primary\"\r\n            className=\"bnt-block bg-brown rounded my-3\"\r\n          >\r\n            Reset Password\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetPasswordScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Message from \"../components/Message\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { resetPasswordConfirm } from \"../actions/userActions\";\r\n\r\nfunction ResetPasswordConfirmScreen({ location }) {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const [messagePassword, setMessagePassword] = useState(\"\");\r\n  const [messageError, setMessageError] = useState(\"\");\r\n  const [messageSuccess, setMessageSuccess] = useState(\"\");\r\n\r\n  const params = useParams();\r\n\r\n  const userPassword = useSelector((state) => state.userPassword);\r\n  const { error, loading, success } = userPassword;\r\n\r\n  const uid = params.uid;\r\n  const token = params.token;\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    reset,\r\n    handleSubmit,\r\n    trigger,\r\n  } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    if (data.confNewPassword !== data.newPassword) {\r\n      setMessagePassword(\"Password do not match\");\r\n    } else if (error) {\r\n      setMessageError(\"Błąd sieciowy\");\r\n    } else if (success) {\r\n      setMessageSuccess(\"Hasło zmienione pomyślnie\");\r\n    } else {\r\n      dispatch(\r\n        resetPasswordConfirm(uid, token, data.newPassword, data.confNewPassword)\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      if (messagePassword) {\r\n        setMessagePassword(\"\");\r\n      }\r\n\r\n      if (messageError) {\r\n        setMessageError(\"\");\r\n      }\r\n\r\n      if (messageSuccess) {\r\n        setMessageSuccess(\"\");\r\n      }\r\n    }, 5000);\r\n\r\n    return () => clearTimeout(timeout);\r\n  }, [messagePassword, messageError, messageSuccess]);\r\n\r\n  return (\r\n    <div className=\"margin-top-from-navbar\">\r\n      <FormContainer>\r\n        {messagePassword && (\r\n          <Message variant=\"danger\">{t(messagePassword)}</Message>\r\n        )}\r\n        {messageError && <Message variant=\"danger\">{t(messageError)}</Message>}\r\n        {messageSuccess && (\r\n          <Message variant=\"success\">{t(messageSuccess)}</Message>\r\n        )}\r\n        <h2>Reset password</h2>\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <Form.Group controlId=\"newPassword\">\r\n            <Form.Label>New pasword</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"New pasword\"\r\n              {...register(\"newPassword\", {\r\n                required: t(\"RegisterScreen_required_error_msg_password\"),\r\n                minLength: {\r\n                  value: 8,\r\n                  message: t(\"RegisterScreen_minlength_error_msg_password\"),\r\n                },\r\n              })}\r\n              onKeyUp={() => {\r\n                trigger(\"newPassword\");\r\n              }}\r\n              name=\"newPassword\"\r\n            ></Form.Control>\r\n            {errors.newPassword && (\r\n              <div className=\"form-msg-style\">{errors.newPassword.message}</div>\r\n            )}\r\n          </Form.Group>\r\n          <Form.Group controlId=\"confNewPassword\">\r\n            <Form.Label>Confirm new pasword</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm new pasword\"\r\n              {...register(\"confNewPassword\", {\r\n                required: t(\"RegisterScreen_required_error_msg_password\"),\r\n                minLength: {\r\n                  value: 8,\r\n                  message: t(\"RegisterScreen_minlength_error_msg_password\"),\r\n                },\r\n              })}\r\n              onKeyUp={() => {\r\n                trigger(\"confNewPassword\");\r\n              }}\r\n              name=\"confNewPassword\"\r\n            ></Form.Control>\r\n            {errors.confNewPassword && (\r\n              <div className=\"form-msg-style\">\r\n                {errors.confNewPassword.message}\r\n              </div>\r\n            )}\r\n          </Form.Group>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"primary\"\r\n            className=\"my-3 bnt-block bg-brown rounded\"\r\n          >\r\n            Potwierdź\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetPasswordConfirmScreen;\r\n","import React from 'react'\r\n\r\nfunction SignupScreen() {\r\n  return (\r\n    <div>SignupScreen</div>\r\n  )\r\n}\r\n\r\nexport default SignupScreen","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport { Container } from \"react-bootstrap\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport PaymentScreen from \"./screens/PaymentScreen\";\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\nimport OrderScreen from \"./screens/OrderScreen\";\nimport UserListScreen from \"./screens/UserListScreen\";\nimport UserEditScreen from \"./screens/UserEditScreen\";\nimport ProductListScreen from \"./screens/ProductListScreen\";\nimport ProductEditScreen from \"./screens/ProductsEditScreen\";\nimport OrderListScreen from \"./screens/OrderListScreen\";\nimport UserOrders from \"./screens/UserOrders\";\nimport AdminScreen from \"./screens/AdminScreen\";\nimport ResetPassword from \"./screens/ResetPassword\";\nimport NewPassword from \"./screens/NewPassword\";\n\n//Djoser\nimport ActivateScreen from \"./screens/ActivateScreen\";\nimport LoginDjoserScreen from \"./screens/LoginDjoserScreen\";\nimport ResetPasswordScreen from \"./screens/ResetPasswordScreen\";\nimport ResetPasswordConfirmScreen from \"./screens/ResetPasswordConfirmScreen\";\nimport SignupScreen from \"./screens/SignupScreen\";\n\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport ScrollToTop from \"./components/ScrollToTop\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className=\"mt-5\">\n        <Container>\n          <ScrollToTop />\n          <Route path=\"/\" component={HomeScreen} exact />\n          <Route path=\"/product/:_id\" component={ProductScreen} />\n          <Route path=\"/cart/:_id?\" component={CartScreen} />\n          <Route path=\"/login\" component={LoginScreen} />\n          <Route path=\"/register\" component={RegisterScreen} />\n          <Route path=\"/forgotpassword\" component={ResetPassword} />\n          <Route path=\"/newpassword\" component={NewPassword} />\n          <Route path=\"/profile\" component={ProfileScreen} />\n          <Route path=\"/admin\" component={AdminScreen} />\n          <Route path=\"/orders\" component={UserOrders} />\n          <Route path=\"/shipping\" component={ShippingScreen} />\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n          <Route path=\"/payment\" component={PaymentScreen} />\n          <Route path=\"/order/:id\" component={OrderScreen} />\n          <Route path=\"/admin/userlist\" component={UserListScreen} />\n          <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n          <Route path=\"/admin/productlist\" component={ProductListScreen} />\n          <Route path=\"/admin/orderlist\" component={OrderListScreen} />\n          <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\n\n          {/* Djoser */}\n          <Route path=\"/login-djoser\" component={LoginDjoserScreen} />\n          <Route path=\"/signup\" component={SignupScreen} />\n          <Route path=\"/reset-password\" component={ResetPasswordScreen} />\n          <Route\n            path=\"/password/reset/confirm/:uid/:token\"\n            component={ResetPasswordConfirmScreen}\n          />\n          <Route path=\"/activate/:uid/:token\" component={ActivateScreen} />\n\n          {/* //Tutorial\n          <Route path='/tutorial' component={ReactTutorial}/> */}\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  productListReducers,\r\n  productDetailsReducers,\r\n  productDeleteReducers,\r\n  productCreateReducers,\r\n  productUpdateReducers,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer,\r\n  productImagesListReducers,\r\n} from \"./reducers/productReducers\";\r\n\r\nimport { cartReducer } from \"./reducers/cartReducers\";\r\nimport {\r\n  userLoginReducers,\r\n  userRegisterReducers,\r\n  userDetailsReducers,\r\n  userUpdateProfileReducers,\r\n  userListReducers,\r\n  userDeleteReducers,\r\n  userUpdateReducers,\r\n  userPasswordResetReducers,\r\n  userActivateReducers,\r\n  userEmailExistReducers,\r\n} from \"./reducers/userReducers\";\r\n\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n  orderDeliverReducer,\r\n} from \"./reducers/orderReducers\";\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducers,\r\n  productDetails: productDetailsReducers,\r\n  productDelete: productDeleteReducers,\r\n  productCreate: productCreateReducers,\r\n  productUpdate: productUpdateReducers,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productTopRated: productTopRatedReducer,\r\n\r\n  productImagesList: productImagesListReducers,\r\n\r\n  cart: cartReducer,\r\n\r\n  userLogin: userLoginReducers,\r\n  userRegister: userRegisterReducers,\r\n  userDetails: userDetailsReducers,\r\n  userUpdateProfile: userUpdateProfileReducers,\r\n  userList: userListReducers,\r\n  userDelete: userDeleteReducers,\r\n  userUpdate: userUpdateReducers,\r\n\r\n  userPassword: userPasswordResetReducers,\r\n  userActivate: userActivateReducers,\r\n  userEmailExist: userEmailExistReducers,\r\n\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\nconst userIfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\r\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n  : {};\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userIfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import { \r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,   \r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL, \r\n    \r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,  \r\n    PRODUCT_CREATE_RESET, \r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,  \r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,  \r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n    PRODUCT_LIST_IMAGES_REQUEST,\r\n    PRODUCT_LIST_IMAGES_SUCCESS,\r\n    PRODUCT_LIST_IMAGES_FAIL,\r\n } from '../constants/productsConstants'\r\n\r\n\r\nexport const productListReducers = (state = {products:[]}, action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products:[] }\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { loading: false,\r\n                products:action.payload.products,\r\n                page:action.payload.page,\r\n                pages:action.payload.pages }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productImagesListReducers = (state = {images:[]}, action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_LIST_IMAGES_REQUEST:\r\n            return { loading: true, images:[] }\r\n\r\n        case PRODUCT_LIST_IMAGES_SUCCESS:\r\n            return { loading: false,\r\n                images: action.payload, }\r\n\r\n        case PRODUCT_LIST_IMAGES_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducers = (state = { product: {reviews:[]} }, action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDeleteReducers = (state = {}, action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productCreateReducers = (state = {}, action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product:action.payload }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return { }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReducers = (state = {product: {}}, action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product:action.payload }\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true, }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productTopRatedReducer = (state = {products:[]}, action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload, }\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n     CART_ADD_ITEM, \r\n     CART_REMOVE_ITEM, \r\n     CART_SAVE_SHIPPING_ADDRESS,\r\n     CART_SAVE_PAYMENT_METHOD,\r\n     CART_CLEAR_ITEMS,\r\n} from '../constants/cartConstans'\r\n\r\nexport const cartReducer = (state={cartItems:[]}, action, shippingAddress={}) => {  \r\n    switch(action.type){\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if(existItem){\r\n                return{\r\n                    ...state, //returns current state\r\n                    cartItems: state.cartItems.map(x => \r\n                        x.product === existItem.product ? item : x\r\n                    )         //x.product and existItem.product returns id products. \r\n                              //find product(old) that matches the new item and replace the old one. \r\n                              //when we doesnt have new item which maches, we return the old one ( \": x\" )\r\n\r\n                }\r\n            }else{\r\n                return{\r\n                    ...state, //returns current state\r\n                    cartItems:[...state.cartItems, item] //add item to original state\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return{\r\n                ...state,\r\n                cartItems:state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return{\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_EMAIL_EXIST_REQUEST,\r\n  USER_EMAIL_EXIST_SUCCESS,\r\n  USER_EMAIL_EXIST_FAIL,\r\n  USER_REGISTER_RESET,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_RESET,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_RESET,\r\n  PASSWORD_RESET_REQUEST,\r\n  PASSWORD_RESET_FAIL,\r\n  PASSWORD_RESET_SUCCESS,\r\n  PASSWORD_RESET_CONFIRM_REQUEST,\r\n  PASSWORD_RESET_CONFIRM_FAIL,\r\n  PASSWORD_RESET_CONFIRM_SUCCESS,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  USER_LOADED_SUCCESS,\r\n  USER_LOADED_FAIL,\r\n  ACTIVATE_REQUEST,\r\n  ACTIVATE_SUCCESS,\r\n  ACTIVATE_FAIL,\r\n  ACTIVATE_RESET,\r\n} from \"../constants/UserConstants\";\r\n\r\nexport const userActivateReducers = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ACTIVATE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case ACTIVATE_SUCCESS:\r\n      return { loading: false, activationInfo: action.payload, success: true };\r\n\r\n    case ACTIVATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case ACTIVATE_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// const initialState = {\r\n//     access: localStorage.getItem('access'),\r\n//     refresh: localStorage.getItem('refresh'),\r\n//     isAuthenticated: null,\r\n//     user: null\r\n// }\r\n\r\n// export const userLogin2Reducers = (state = initialState, action) =>{\r\n//     switch(action.type){\r\n//         case LOGIN_REQUEST:\r\n//             return { loading: true}\r\n\r\n//         case LOGIN_SUCCESS:\r\n//             localStorage.setItem('access', action.payload.access)\r\n//             return {\r\n//                 loading: false,\r\n//                 ...state,\r\n//                 isAuthenticated: true,\r\n//                 access: action.payload.access,\r\n//                 refresh: action.payload.refresh\r\n//             }\r\n\r\n//         case USER_LOADED_SUCCESS:\r\n//             return {\r\n//                 ...state,\r\n//                 user: action.payload\r\n//             }\r\n\r\n//         case LOGIN_FAIL:\r\n//             localStorage.removeItem('access')\r\n//             localStorage.removeItem('refresh')\r\n//             return {\r\n//                 loading: false,\r\n//                 access: null,\r\n//                 refresh: null,\r\n//                 isAuthenticated: false,\r\n//                 user: null\r\n//             }\r\n\r\n//         case USER_LOADED_FAIL:\r\n//             return {\r\n//                 ...state,\r\n//                 user: null\r\n//             }\r\n\r\n//         default:\r\n//             return state\r\n//     }\r\n// }\r\n\r\nexport const userLoginReducers = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_LOGOUT:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducers = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload, success: true };\r\n\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_REGISTER_RESET:\r\n      return {};\r\n\r\n    case USER_LOGOUT:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userPasswordResetReducers = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PASSWORD_RESET_REQUEST:\r\n      return { loading: true };\r\n\r\n    case PASSWORD_RESET_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        succes: true,\r\n        email: action.payload,\r\n      };\r\n\r\n    case PASSWORD_RESET_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case PASSWORD_RESET_CONFIRM_SUCCESS:\r\n      return { loading: false, succes: true };\r\n\r\n    // case PASSWORD_RESET_CONFIRM_FAIL:\r\n    //   return { loading: false, error: action.payload };\r\n\r\n    case PASSWORD_RESET_CONFIRM_FAIL:\r\n      return { loading: false, error: true };\r\n\r\n    // return {\r\n    //     ...state\r\n    // }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userEmailExistReducers = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_EMAIL_EXIST_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_EMAIL_EXIST_SUCCESS:\r\n      return { loading: false, succes: true };\r\n\r\n    case USER_EMAIL_EXIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDetailsReducers = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload };\r\n\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateProfileReducers = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload };\r\n\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userListReducers = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload };\r\n\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_LIST_RESET:\r\n      return { users: [] };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDeleteReducers = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateReducers = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_UPDATE_RESET:\r\n      return { user: {} };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { \r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const orderCreateReducer = (state={}, action) =>{\r\n    switch(action.type){\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading:true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading:false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state={loading:true, orderItems:[], shippingAddress:{}}, action) =>{\r\n    switch(action.type){\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading:true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading:false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderPayReducer = (state={}, action) =>{\r\n    switch(action.type){\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading:true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading:false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDeliverReducer = (state={}, action) =>{\r\n    switch(action.type){\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading:true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading:false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state={orders:[]}, action) =>{\r\n    switch(action.type){\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading:true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading:false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListReducer = (state={orders:[]}, action) =>{\r\n    switch(action.type){\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading:true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading:false,\r\n                error: action.payload\r\n            }\r\n            \r\n        default:\r\n            return state\r\n    }\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./bootstrap.min.css\";\n\n//import 'bootstrap/dist/css/bootstrap.min.css'\n//import 'bootstrap/dist/js/bootstrap.js'\n\nimport i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport HttpApi from \"i18next-http-backend\";\n\nimport store from \"./store\";\nimport \"./index.css\";\n\ni18n\n  .use(initReactI18next)\n  .use(LanguageDetector)\n  .use(HttpApi)\n  // .init({\n  //   supportedLngs: [\"en\", \"pl\"],\n  //   fallbackLng: \"en\",\n  //   detection: {\n  //     order: [\"cookie\", \"htmlTag\", \"localStorage\", \"path\", \"subdomain\"],\n  //     caches: [\"cookie\"],\n  //   },\n  //   backend: {\n  //     loadPath: \"/translation/{{lng}}.json\",\n  //   },\n  //   react: { useSuspense: false },\n  // });\n\n  .init({\n    resources: {\n      en: {\n        translation: {\n          latest_products: \"Latest Products\",\n\n          Header_btn_cart: \"cart\",\n          Header_navdrodown_profile: \"Profile\",\n          Header_navdrodown_user_order: \"Orders\",\n          Header_navdrodown_logout: \"Logout\",\n          Header_navdrodown_user: \"Users\",\n          Header_navdrodown_products: \"Products\",\n          Header_navdrodown_orders: \"Orders\",\n          Header_navdrodown_admin: \"Admin\",\n\n          Admin_userlist_btn: \"Users\",\n          Admin_productlist_btn: \"Products\",\n          Admin_orderlist_btn: \"Orders\",\n\n          SearchBox_placeholder: \"Search product...\",\n\n          Product_reviews: \"number of reviews\",\n\n          UserListScreen_list_of_users: \"List of users\",\n          UserListScreen_table_name: \"NAME\",\n\n          UserEditScreen_btn_go_back: \"Go back\",\n          UserEditScreen_btn_update: \"Update\",\n          UserEditScreen_edit_user: \"EDIT USER\",\n          UserListScreen_form_label_name: \"Name\",\n          UserListScreen_form_label_admin: \"Admin\",\n\n          ProductScreen_btn_go_back: \"GO BACK\",\n          ProductScreen_btn_add_to_cart: \"ADD TO CART\",\n          ProductScreen_btn_form_submit: \"SUBMIT\",\n          ProductScreen_price: \"Price\",\n          ProductScreen_description: \"Description\",\n          ProductScreen_status: \"Status\",\n          ProductScreen_status_in_stock: \"In Stock\",\n          ProductScreen_status_out_of_stock: \"Out of Stock\",\n          ProductScreen_qty: \"Number of products in stock\",\n          ProductScreen_reviews: \"REVIEWS\",\n          ProductScreen_write_a_review: \"WRITE A REVIEW\",\n          ProductScreen_rating: \"Rating\",\n          ProductScreen_form_review_selector: \"Select...\",\n          ProductScreen_form_review_poor: \"1 - Poor\",\n          ProductScreen_form_review_fair: \"2 - Fair\",\n          ProductScreen_form_review_good: \"3 - Good\",\n          ProductScreen_form_review_very_good: \"4 - Very good\",\n          ProductScreen_form_review_excellent: \"5 - Excellent\",\n          ProductScreen_form_review_comment: \"Comment\",\n\n          CartScreen_btn_go_back: \"Go back\",\n          CartScreen_proceed_to_checkout: \"PROCEED TO CHECKOUT\",\n          CartScreen_title: \"SHOPPING CART\",\n          CartScreen_empty_cart_message: \"Your cart is empty\",\n          CartScreen_empty_subtotal_items: \"SUBTOTAL ITEMS\",\n\n          CheckoutSteps_login: \"LOGOWANIE\",\n          CheckoutSteps_shipping: \"SHIPPING\",\n          CheckoutSteps_payments: \"PAYMENTS\",\n          CheckoutSteps_place_order: \"PLACE ORDER\",\n\n          ShippingScreen_btn_country: \"CONTINUE\",\n          ShippingScreen_title: \"SHIPPING\",\n          ShippingScreen_btn_address: \"Address\",\n          ShippingScreen_btn_city: \"City\",\n          ShippingScreen_postal_code: \"Postal Code\",\n          ShippingScreen_country: \"Country\",\n\n          PaymentScreen_title: \"Select Method\",\n          PaymentScreen_btn_country: \"CONTINUE\",\n\n          PlaceOrderScreen_title_shipping: \"SHIPPING\",\n          PlaceOrderScreen_shipping: \"Address\",\n          PlaceOrderScreen_title_payment_method: \"PAYMENT METHOD\",\n          PlaceOrderScreen_payment_method: \"Method\",\n          PlaceOrderScreen_title_orders_items: \"ORDER ITEMS\",\n          PlaceOrderScreen_empty_cart: \"Your cart is empty\",\n          PlaceOrderScreen_table_title_order_summary: \"ORDER SUMMARY\",\n          PlaceOrderScreen_table_items: \"Items\",\n          PlaceOrderScreen_table_shipping: \"Shipping\",\n          PlaceOrderScreen_table_tax: \"Tax\",\n          PlaceOrderScreen_table_total: \"Total\",\n\n          OrderScreen_title_shipping: \"SHIPPING\",\n          OrderScreen_shipping_name: \"Name\",\n          OrderScreen_shipping_shipping: \"Shipping\",\n          OrderScreen_title_shipping_shipping: \"Shipping\",\n          OrderScreen_message_not_delivered: \"Not Delivered\",\n          OrderScreen_message_delivered_on: \"Delivered on\",\n          OrderScreen_title_payment_method: \"PAYMENT METHOD\",\n          OrderScreen_payment_method: \"Method\",\n          OrderScreen_message_not_paid: \"Not paid\",\n          OrderScreen_message_paid_on: \"paid on\",\n          OrderScreen_title_order_items: \"ORDERS ITEMS\",\n          OrderScreen_table_title_order_summary: \"ORDER SUMMARY\",\n          OrderScreen_table_items: \"Items\",\n          OrderScreen_table_shipping: \"Shipping\",\n          OrderScreen_table_tax: \"Tax\",\n          OrderScreen_table_total: \"Total\",\n\n          ProductListScreen_title_products: \"LIST OF PRODUCTS\",\n          ProductListScreen_btn_create_product: \"CREATE PRODUCT\",\n          ProductListScreen_table_name: \"NAME\",\n          ProductListScreen_table_price: \"PRICE\",\n          ProductListScreen_table_category: \"CATEGORY\",\n          ProductListScreen_table_brand: \"BRAND\",\n\n          \"Image was uploaded\": \"Image was uploaded\",\n          \"Images was uploaded\": \"Images was uploaded\",\n          ProductsEditScreen_btn_go_back: \"Go back\",\n          ProductsEditScreen_btn_choose_photo: \"Choose photo\",\n          ProductsEditScreen_btn_choose_more_photos: \"More photos\",\n          ProductsEditScreen_btn_update: \"Update\",\n          ProductsEditScreen_title_edit_product: \"EDIT PRODUCT\",\n          ProductsEditScreen_table_name: \"NAME\",\n          ProductsEditScreen_table_price: \"PRICE\",\n          ProductsEditScreen_table_image: \" MAIN IMAGE\",\n          ProductsEditScreen_table_brand: \"BRAND\",\n          ProductsEditScreen_table_stock: \"STOCK\",\n          ProductsEditScreen_table_category: \"CATOGORY\",\n          ProductsEditScreen_table_description: \"DESCRIPTION\",\n\n          OrderListScreen_title_orders: \"ORDERS\",\n          OrderListScreen_table_btn_details: \"DETAILS\",\n          OrderListScreen_table_user: \"USER\",\n          OrderListScreen_table_date: \"DATE\",\n          OrderListScreen_table_total: \"TOTAL\",\n          OrderListScreen_table_paid: \"PAID\",\n          OrderListScreen_table_delivered: \"DELIVERED\",\n\n          ProfileScreen_btn_table_delivered: \"ZOBACZ\",\n          ProfileScreen_btn_update: \"UPDATE\",\n          ProfileScreen_update_form_title: \"UPDATE DATA\",\n          ProfileScreen_update_form_name: \"Name\",\n          ProfileScreen_update_form_name_placeholder: \"Enter name\",\n          ProfileScreen_update_form_email_placeholder: \"Enter email\",\n          ProfileScreen_update_form_password: \"Password\",\n          ProfileScreen_update_form_password_placeholder: \"Enter password\",\n          ProfileScreen_update_form_confirm_password: \"Confirm password\",\n          ProfileScreen_update_form_confirm_password_placeholder:\n            \"Potwierdź hasło\",\n\n          ProfileScreen_required_error_msg_name: \"Name is required\",\n          ProfileScreen_minlength_error_msg_name:\n            \"Username must be at least 2 letters long\",\n          ProfileScreen_only_letters_error_msg_name: \"Only letters can be used\",\n          ProfileScreen_required_error_msg_email: \"Field is required\",\n          ProfileScreen_inproper_pattern_email: \"Invalid email format\",\n          ProfileScreen_required_error_msg_password: \"Field is required\",\n          ProfileScreen_minlength_error_msg_password:\n            \"Password must be at least 8 characters long\",\n\n          ProfileScreen_table_orders_title: \"MY ORDERS\",\n          ProfileScreen_table_data: \"DATE\",\n          ProfileScreen_table_total: \"TOTAL\",\n          ProfileScreen_table_paid: \"PAID\",\n          ProfileScreen_table_delivered: \"DELIVERED\",\n\n          LoginScreen_btn_form: \"SIGN IN\",\n          LoginScreen_title: \"SIGN IN\",\n          LoginScreen_form_email_placeholder: \"Enter emial\",\n          LoginScreen_form_password: \"Password\",\n          LoginScreen_form_password_placeholder: \"Password\",\n          LoginScreen_new_customer: \"New Customer?\",\n          LoginScreen_password_reset_forgot_password: \"Forgot password?\",\n          LoginScreen_register: \"Register\",\n          LoginScreen_password_reset: \"Reset password\",\n          LoginScreen_required_error_msg_email: \"Field is required\",\n          LoginScreen_inproper_pattern_email: \"Invalid email format\",\n          LoginScreen_required_error_msg_password: \"Field is required\",\n          LoginScreen_minlength_error_msg_password:\n            \"The password must be at least 8 characters long\",\n          LoginScreen_Error_msg: \"email or password is incorrect\",\n\n          \"No active account found with the given credentials\":\n            \"No active account found with the given credentials\",\n\n          RegisterScreen_btn_register: \"REGISTER\",\n          RegisterScreen_title: \"REGISTER\",\n          RegisterScreen_form_name: \"Name\",\n          RegisterScreen_form_name_placeholder: \"Enter name\",\n          RegisterScreen_form_email_placeholder: \"Enter emial\",\n          RegisterScreen_form_password: \"Password\",\n          RegisterScreen_form_password_placeholder: \"Enter password\",\n          RegisterScreen_from_confirm_password: \"Confirm password\",\n          RegisterScreen_form_confirm_password_placeholder: \"Confirm password\",\n          RegisterScreen_have_an_account: \"Have an Account?\",\n          RegisterScreen_sign_in: \"Sign In\",\n\n          RegisterScreen_required_error_msg_name: \"Name is required\",\n          RegisterScreen_minlength_error_msg_name:\n            \"Username must be at least 2 letters long\",\n          RegisterScreen_only_letters_error_msg_name:\n            \"Only letters can be used\",\n          RegisterScreen_required_error_msg_email: \"Field is required\",\n          RegisterScreen_inproper_pattern_email: \"Invalid email format\",\n          RegisterScreen_required_error_msg_password: \"Field is required\",\n          RegisterScreen_minlength_error_msg_password:\n            \"Password must be at least 8 characters long\",\n\n          \"User with this email already exists\":\n            \"User with this email already exists\",\n          \"Password do not match\": \"Password do not match\",\n        },\n      },\n\n      pl: {\n        translation: {\n          latest_products: \"Najnowsze produkty\",\n\n          Header_btn_cart: \"koszyk\",\n          Header_navdrodown_profile: \"Profil\",\n          Header_navdrodown_user_order: \"Zamówienia\",\n          Header_navdrodown_logout: \"Wyloguj\",\n          Header_navdrodown_user: \"Użytkownicy\",\n          Header_navdrodown_products: \"Produkty\",\n          Header_navdrodown_orders: \"Zamówienia\",\n          Header_navdrodown_admin: \"Administrator\",\n\n          Admin_userlist_btn: \"Użytkownicy\",\n          Admin_productlist_btn: \"Produkty\",\n          Admin_orderlist_btn: \"Zamówienia\",\n\n          SearchBox_placeholder: \"Znajdź produkt...\",\n\n          Product_reviews: \"liczba opini\",\n\n          UserListScreen_list_of_users: \"Lista użytkowników\",\n          UserListScreen_table_name: \"NAZWA\",\n\n          UserEditScreen_btn_go_back: \"Wstecz\",\n          UserEditScreen_btn_update: \"Zmień\",\n          UserEditScreen_edit_user: \"EDYCJA UŻYTKOWNIKA\",\n          UserListScreen_form_label_name: \"Nazwa\",\n          UserListScreen_form_label_admin: \"Administrator\",\n\n          ProductScreen_btn_go_back: \"Wstecz\",\n          ProductScreen_btn_add_to_cart: \"DODAJ DO KOSZYKA\",\n          ProductScreen_btn_form_submit: \"OPUBLIKUJ\",\n          ProductScreen_price: \"Cena\",\n          ProductScreen_description: \"Opis\",\n          ProductScreen_status: \"Status\",\n          ProductScreen_status_in_stock: \"W magazynie\",\n          ProductScreen_status_out_of_stock: \"Brak produktu w magazynie\",\n          ProductScreen_qty: \"Ilość sztuk w magazynie\",\n          ProductScreen_reviews: \"OPINIE\",\n          ProductScreen_write_a_review: \"NAPISZ OPINIE\",\n          ProductScreen_rating: \"Ocena\",\n          ProductScreen_form_review_selector: \"Wybierz...\",\n          ProductScreen_form_review_poor: \"1 - Bradzo słabo\",\n          ProductScreen_form_review_fair: \"2 - Słabo\",\n          ProductScreen_form_review_good: \"3 - Przeciętnie\",\n          ProductScreen_form_review_very_good: \"4 - Dobrze\",\n          ProductScreen_form_review_excellent: \"5 - Bardzo dobrze\",\n          ProductScreen_form_review_comment: \"Komentarz\",\n\n          CartScreen_btn_go_back: \"Wstecz\",\n          CartScreen_proceed_to_checkout: \"PRZEJĆ DO KASY\",\n          CartScreen_title: \"TWOJE ZAKUPY\",\n          CartScreen_empty_cart_message: \"Brak wbranych produktów\",\n          CartScreen_empty_subtotal_items: \"ILOŚĆ WYBRANYCH PRODUKTÓW\",\n\n          CheckoutSteps_login: \"LOGIN\",\n          CheckoutSteps_shipping: \"ADRES\",\n          CheckoutSteps_payments: \"PŁATNOŚCI\",\n          CheckoutSteps_place_order: \"ZŁOŻENIE ZAMÓWIENIA\",\n\n          ShippingScreen_btn_country: \"KONTYNUUJ\",\n          ShippingScreen_title: \"ADRES DO WYSYŁKI\",\n          ShippingScreen_btn_address: \"Ulica, nr. budynku\",\n          ShippingScreen_btn_city: \"Miasto\",\n          ShippingScreen_postal_code: \"Kod pocztowy\",\n          ShippingScreen_country: \"Państwo\",\n\n          PaymentScreen_title: \"Wybierz forme płatności\",\n          PaymentScreen_btn_country: \"KONTYNUUJ\",\n\n          PlaceOrderScreen_title_shipping: \"ADRES WYSYŁKI\",\n          PlaceOrderScreen_shipping: \"Adres\",\n          PlaceOrderScreen_title_payment_method: \"METODA PŁATNOŚCI\",\n          PlaceOrderScreen_payment_method: \"Metoda płatności\",\n          PlaceOrderScreen_title_orders_items: \"MOJE ZAKUPY\",\n          PlaceOrderScreen_empty_cart: \"Brak wybranych produktów\",\n          PlaceOrderScreen_table_title_order_summary: \"PODSUMOWANIE ZAMÓWIENIA\",\n          PlaceOrderScreen_table_items: \"Produkty\",\n          PlaceOrderScreen_table_shipping: \"Wysyłka\",\n          PlaceOrderScreen_table_tax: \"Podatek\",\n          PlaceOrderScreen_table_total: \"Suma\",\n\n          OrderScreen_title_shipping: \"INFORMACJE OGÓLNE\",\n          OrderScreen_shipping_name: \"Nazwa użytkownika\",\n          OrderScreen_shipping_shipping: \"Adres\",\n          OrderScreen_message_not_delivered: \"Nie dostarczono\",\n          OrderScreen_message_delivered_on: \"Dostarczono\",\n          OrderScreen_title_payment_method: \"METODA PŁATNOŚCI\",\n          OrderScreen_payment_method: \"Metoda\",\n          OrderScreen_message_not_paid: \"Nie zapłacone\",\n          OrderScreen_message_paid_on: \"Transacja została zrealizowana\",\n          OrderScreen_title_order_items: \"LISTA ZAMÓWIEŃ\",\n          OrderScreen_table_title_order_summary: \"PODSUMOWANIE ZAMÓWIENIA\",\n          OrderScreen_table_items: \"Produkty\",\n          OrderScreen_table_shipping: \"Wysyłka\",\n          OrderScreen_table_tax: \"Podatek\",\n          OrderScreen_table_total: \"Suma\",\n\n          ProductListScreen_title_products: \"LISTA PRODUKTÓW\",\n          ProductListScreen_btn_create_product: \"DODAJ PRODUKT\",\n          ProductListScreen_table_name: \"NAZWA\",\n          ProductListScreen_table_price: \"CENA\",\n          ProductListScreen_table_category: \"KATEGORIA\",\n          ProductListScreen_table_brand: \"MARKA\",\n\n          \"Image was uploaded\": \"Zdjęcie zostało zmienione\",\n          \"Images was uploaded\": \"Zdjęciea zostały zmienione\",\n          ProductsEditScreen_btn_choose_photo: \"Wybierz zdjęcie\",\n          ProductsEditScreen_btn_choose_more_photos: \"Więcej zdjęć\",\n          ProductsEditScreen_btn_update: \"Zmień\",\n          ProductsEditScreen_title_edit_product: \"EDYCJA PRODUKTU\",\n          ProductsEditScreen_table_name: \"NAZWA\",\n          ProductsEditScreen_table_price: \"CENA\",\n          ProductsEditScreen_table_image: \"ZDJĘCIE PODSTAWOWE\",\n          ProductsEditScreen_table_brand: \"MARKA\",\n          ProductsEditScreen_table_stock: \"ILOŚĆ SZTUK W MAGAZYNIE\",\n          ProductsEditScreen_table_category: \"KATEGORIA\",\n          ProductsEditScreen_table_description: \"OPIS\",\n\n          OrderListScreen_title_orders: \"ZAMÓWIENIA\",\n          OrderListScreen_table_btn_details: \"ZOBACZ\",\n          OrderListScreen_table_user: \"UŻYTKOWNIK\",\n          OrderListScreen_table_date: \"DATA\",\n          OrderListScreen_table_total: \"SUMA\",\n          OrderListScreen_table_paid: \"ZAPŁACONE\",\n          OrderListScreen_table_delivered: \"DOSTARCZONE\",\n\n          ProfileScreen_btn_update: \"Zmień\",\n          ProfileScreen_btn_table_delivered: \"ZOBACZ\",\n          ProfileScreen_update_form_title: \"ZMIEŃ DANE\",\n          ProfileScreen_update_form_name: \"Nazwa użytkownika\",\n          ProfileScreen_update_form_name_placeholder:\n            \"Wprowadź nazwę użytkownika\",\n          ProfileScreen_update_form_email_placeholder: \"Wprowadź email\",\n          ProfileScreen_update_form_password: \"Hasło\",\n          ProfileScreen_update_form_password_placeholder: \"Wprowadź hasło\",\n          ProfileScreen_update_form_confirm_password: \"Potwierdź hasło\",\n          ProfileScreen_update_form_confirm_password_placeholder:\n            \"Potwierdź hasło\",\n          ProfileScreen_table_orders_title: \"MOJE ZAMÓWIENIA\",\n          ProfileScreen_table_data: \"DATA\",\n          ProfileScreen_table_total: \"SUMA\",\n          ProfileScreen_table_paid: \"ZAPŁACONE\",\n          ProfileScreen_table_delivered: \"DOSTARCZONE\",\n\n          ProfileScreen_required_error_msg_name:\n            \"Nazwa użytkownika jest wymagana\",\n          ProfileScreen_minlength_error_msg_name:\n            \"Nazwa użytkownika musi składać się przynajmniej z 2 liter\",\n          ProfileScreen_only_letters_error_msg_name: \"Można używać tylko liter\",\n          ProfileScreen_required_error_msg_email: \"Pole jest wymagane\",\n          ProfileScreen_inproper_pattern_email: \"Niepoprawny format email\",\n          ProfileScreen_required_error_msg_password: \"Pole jest wymagane\",\n          ProfileScreen_minlength_error_msg_password:\n            \"Hasło musi mieć co najmniej 8 znaków\",\n\n          LoginScreen_btn_form: \"ZALOGUJ SIĘ\",\n          LoginScreen_title: \"LOGOWANIE\",\n          LoginScreen_form_email_placeholder: \"Wpisz Email\",\n          LoginScreen_form_password: \"Hasło\",\n          LoginScreen_form_password_placeholder: \"Wpisz hasło\",\n          LoginScreen_new_customer: \"Nie masz konta?\",\n          LoginScreen_register: \"Zarejestruj się\",\n          LoginScreen_password_reset: \"Zmień hasło\",\n          LoginScreen_password_reset_forgot_password: \"Zapomniałeś hasła?\",\n          LoginScreen_required_error_msg_email: \"Pole wymagane\",\n          LoginScreen_inproper_pattern_email: \"Nieprawidłowy format email\",\n          LoginScreen_required_error_msg_password: \"Pole wymagane\",\n          LoginScreen_minlength_error_msg_password:\n            \"Hasło musi się składać z minimum 8 znaków\",\n          LoginScreen_Error_msg: \"email lub hasło jest niepoprawne\",\n\n          \"No active account found with the given credentials\":\n            \"Nie znaleziono aktywnego konta z podanymi danymi uwierzytelniającymi\",\n\n          RegisterScreen_btn_register: \"ZAREJESTRUJ SIĘ\",\n          RegisterScreen_title: \"UTWÓRZ KONTO\",\n          RegisterScreen_form_name: \"Nazwa użytkownika\",\n          RegisterScreen_form_name_placeholder: \"Wprowadź nazwe użytkownika\",\n          RegisterScreen_form_email_placeholder: \"Wprowadź emial\",\n          RegisterScreen_form_password: \"Hasło\",\n          RegisterScreen_form_password_placeholder: \"Wprowadź hasło\",\n          RegisterScreen_from_confirm_password: \"Powierdź hasło\",\n          RegisterScreen_form_confirm_password_placeholder: \"Potwierdź hasło\",\n          RegisterScreen_have_an_account: \"Masz już konto?\",\n          RegisterScreen_sign_in: \"Zaloguj się\",\n\n          RegisterScreen_required_error_msg_name:\n            \"Nazwa użytkownika jest wymagana\",\n          RegisterScreen_minlength_error_msg_name:\n            \"Nazwa użytkownika musi składać się przynajmniej z 2 liter\",\n          RegisterScreen_only_letters_error_msg_name:\n            \"Można używać tylko liter\",\n          RegisterScreen_required_error_msg_email: \"Pole jest wymagane\",\n          RegisterScreen_inproper_pattern_email: \"Niepoprawny format email\",\n          RegisterScreen_required_error_msg_password: \"Pole jest wymagane\",\n          RegisterScreen_minlength_error_msg_password:\n            \"Hasło musi mieć co najmniej 8 znaków\",\n\n          \"User with this email already exists\":\n            \"Użytkownik z tym adresem email już istnieje\",\n          \"Password do not match\": \"Podane hasła nie są takie same\",\n        },\n      },\n    },\n\n    fallbackLng: \"en\",\n    detection: {\n      order: [\"cookie\", \"htmlTag\", \"localStorage\", \"path\", \"subdomain\"],\n      caches: [\"cookie\"],\n    },\n    backend: {\n      loadPath: \"/translation/{{lng}}.json\",\n    },\n  });\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}